{"version":3,"sources":["views/Nft/market/Profile/hooks/useFetchUserNfts.tsx","state/teams/hooks.ts","views/ProfileCreation/SelectionCard.tsx","../node_modules/lodash/_shuffleSelf.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/lodash/shuffle.js","../node_modules/lodash/_arrayShuffle.js","../node_modules/lodash/_baseShuffle.js","../node_modules/date-fns/esm/differenceInSeconds/index.js","views/ProfileCreation/config.ts","views/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/ProfileCreation/Header.tsx","views/ProfileCreation/WalletNotConnected.tsx","views/ProfileCreation/NextStepButton.tsx","views/ProfileCreation/contexts/hook.ts","views/ProfileCreation/Mint.tsx","views/ProfileCreation/ProfilePicture.tsx","views/ProfileCreation/TeamSelection.tsx","../node_modules/date-fns/esm/isLastDayOfMonth/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/formatDistance/index.js","views/ProfileCreation/UserName.tsx","utils/fetchWithTimeout.ts","views/ProfileCreation/ConfirmProfileCreationModal.tsx","views/ProfileCreation/Steps.tsx","views/ProfileCreation/index.tsx","state/nftMarket/hooks.ts","hooks/useApproveConfirmTransaction.ts","components/ApproveConfirmButtons.tsx"],"names":["useFetchUserNfts","dispatch","useAppDispatch","account","useWeb3React","useProfile","profile","isProfileInitialized","isInitialized","isProfileLoading","isLoading","userNftsInitializationState","useUserNfts","collections","useGetCollections","hasProfileNft","tokenId","profileNftTokenId","toString","profileNftCollectionAddress","collectionAddress","profileNftWithCollectionAddress","useMemo","nftLocation","NftLocation","PROFILE","previousProfileNftTokenId","usePreviousValue","shouldFetch","UserNftInitializationState","UNINITIALIZED","hasAccountSwitched","useEffect","isEmpty","fetchUserNfts","useTeam","id","team","useSelector","state","teams","data","fetchTeam","useTeams","fetchTeams","Label","styled","label","isDisabled","Body","div","Children","StyledBackgroundImage","src","SelectionCard","name","value","isChecked","image","onChange","disabled","children","props","isSuccess","mb","checked","e","target","style","flex","baseRandom","require","module","exports","array","size","index","length","lastIndex","undefined","rand","differenceInMilliseconds","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","getTime","compareAsc","diff","cloneObject","dirtyObject","assign","arrayShuffle","baseShuffle","isArray","collection","copyArray","shuffleSelf","values","differenceInSeconds","Math","floor","ceil","MINT_COST","parseUnits","REGISTER_COST","STARTER_NFT_BUNNY_IDS","totalCost","add","allowance","mul","initialState","currentStep","teamId","selectedNft","userName","minimumCakeRequired","reducer","action","type","step","ProfileCreationContext","createContext","ProfileCreationProvider","useReducer","isSubscribed","a","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","actions","nextStep","setTeamId","setSelectedNft","setUserName","Provider","Wrapper","theme","colors","textSubtle","steps","Header","t","useTranslation","useContext","as","scale","color","href","nftsBaseUrl","variant","map","translationKey","WalletNotConnected","ConnectWalletButton","NextStepButton","endIcon","useProfileCreation","Mint","useState","selectedBunnyId","setSelectedBunnyId","starterNfts","setStarterNfts","toastSuccess","useToast","cakeContract","useCake","useBunnyFactory","useGetCakeBalance","cakeBalance","balance","hasMinimumCakeRequired","fetchStatus","FetchStatus","SUCCESS","gte","callWithGasPrice","useCallWithGasPrice","getStarterNfts","getNftsFromCollectionApi","pancakeBunniesAddress","allPbTokens","nfts","bunnyId","useApproveConfirmTransaction","onRequiresApproval","address","response","onApprove","onConfirm","onApproveSuccess","onSuccess","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","fontSize","bold","num","formatUnits","nft","thumbnail","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","onClick","Link","RouterLink","primary","NftWrapper","ProfilePicture","library","setIsApproved","setIsApproving","toastError","contract","getErc721Contract","getSigner","getPancakeProfileAddress","tx","wait","status","INITIALIZED","to","marginLeft","filter","walletNft","location","WALLET","spin","Team","currentTeamId","handleTeamSelection","parseInt","teamValues","shuffle","Object","images","md","isJoinable","mr","users","toLocaleString","isLastDayOfMonth","dirtyDate","date","endOfDay","endOfMonth","differenceInMonths","result","sign","difference","abs","differenceInCalendarMonths","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","Number","MINUTES_IN_DAY","MINUTES_IN_MONTH","formatDistance","dirtyBaseDate","options","locale","defaultLocale","RangeError","comparison","isNaN","localizeOptions","addSuffix","Boolean","months","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","round","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","ExistingUserState","fetchWithTimeout","url","timeout","fetchOptions","Promise","race","fetch","_","reject","setTimeout","Error","ConfirmProfileCreationModal","onDismiss","profileContract","toJSON","receipt","fetchProfile","Toast","txHash","transactionHash","title","justifyContent","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknowledged","useWeb3Provider","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","message","setMessage","fetchAbortSignal","useRef","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","usernameToCheck","setUsernameToCheck","debouncedUsernameToCheck","useDebounce","fetchUsernameToCheck","abortSignal","current","API_PROFILE","method","signal","res","ok","json","error","console","abort","AbortController","signMessage","signature","headers","body","JSON","stringify","username","dateCreated","parseISO","created_at","Date","NEW","fetchUser","height","width","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","alignItems","ml","mt","Steps","TeamSelection","ProfileCreation","hasProfile","useFetchCollections","PageLoader","toLowerCase","Page","fetchCollections","useFetchCollection","fetchCollection","useFetchByBunnyIdAndUpdate","nftMarket","loadingState","latestPancakeBunniesUpdateAt","isUpdatingPancakeBunnies","existingBunniesInState","useGetAllBunniesByBunnyId","existingTokensWithBunnyId","allPancakeBunnies","useNftsFromCollection","allExistingPBTokenIds","firstBunny","existingMetadata","description","collectionName","fetchMorePancakeBunnies","orderDirection","fetchNewPBAndUpdateExisting","useLoadingState","useGetCollection","checksummedCollectionAddress","isAddress","attributes","marketData","isTradable","useGetNFTInitializationState","initializationState","user","useGetNftFilters","collectionFilter","filters","activeFilters","useGetNftFilterLoadingState","NftFilterLoadingState","useGetNftOrdering","ordering","field","direction","useGetNftShowOnlyOnSale","showOnlyOnSale","useGetNftActivityFilters","activityFilters","typeFilters","approvalState","confirmState","noop","handlePreApprove","then","hasApproveFailed","hasConfirmFailed","params","ButtonArrangement","StyledApproveConfirmButtonRow","mediaQueries","Button","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","buttonArrangement","ROW","confirmLabel","confirmId","confirmButtonText"],"mappings":"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","file":"static/js/13.9a3a53c5.chunk.js","sourcesContent":["import { useEffect, useMemo } from 'react'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchUserNfts } from 'state/nftMarket/reducer'\r\nimport { useGetCollections, useUserNfts } from 'state/nftMarket/hooks'\r\nimport usePreviousValue from 'hooks/usePreviousValue'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { NftLocation, UserNftInitializationState } from 'state/nftMarket/types'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nconst useFetchUserNfts = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const { profile, isInitialized: isProfileInitialized, isLoading: isProfileLoading } = useProfile()\r\n  const { userNftsInitializationState } = useUserNfts()\r\n  const collections = useGetCollections()\r\n\r\n  const hasProfileNft = profile?.tokenId\r\n  const profileNftTokenId = profile?.tokenId?.toString()\r\n  const profileNftCollectionAddress = profile?.collectionAddress\r\n\r\n  const profileNftWithCollectionAddress = useMemo(() => {\r\n    if (hasProfileNft) {\r\n      return {\r\n        tokenId: profileNftTokenId,\r\n        collectionAddress: profileNftCollectionAddress,\r\n        nftLocation: NftLocation.PROFILE,\r\n      }\r\n    }\r\n    return null\r\n  }, [profileNftTokenId, profileNftCollectionAddress, hasProfileNft])\r\n\r\n  const previousProfileNftTokenId = usePreviousValue(profileNftTokenId)\r\n\r\n  // Fetch on first load when profile fetch is resolved\r\n  const shouldFetch =\r\n    account &&\r\n    userNftsInitializationState === UserNftInitializationState.UNINITIALIZED &&\r\n    isProfileInitialized &&\r\n    !isProfileLoading\r\n\r\n  // Fetch on account / profile change, once profile fetch is resolved\r\n  const hasAccountSwitched = previousProfileNftTokenId !== profileNftTokenId && !isProfileLoading && account\r\n\r\n  useEffect(() => {\r\n    if ((shouldFetch || hasAccountSwitched) && !isEmpty(collections)) {\r\n      dispatch(fetchUserNfts({ account, collections, profileNftWithCollectionAddress }))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    account,\r\n    shouldFetch,\r\n    hasAccountSwitched,\r\n    profileNftTokenId,\r\n    collections,\r\n    profileNftWithCollectionAddress,\r\n  ])\r\n}\r\n\r\nexport default useFetchUserNfts\r\n","import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { Team } from 'config/constants/types'\r\nimport { State, TeamsState } from '../types'\r\nimport { fetchTeam, fetchTeams } from '.'\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, Radio } from '@pancakeswap/uikit'\r\n\r\ninterface SelectionCardProps {\r\n  name: string\r\n  value: string | number\r\n  isChecked?: boolean\r\n  onChange: (val: any) => void\r\n  image: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst Label = styled.label<{ isDisabled: boolean }>`\r\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\r\n`\r\n\r\nconst Body = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  height: 80px;\r\n  padding: 8px 16px;\r\n`\r\n\r\nconst Children = styled.div`\r\n  margin-left: 16px;\r\n`\r\n\r\nconst StyledBackgroundImage = styled.div<{ src: string }>`\r\n  align-self: stretch;\r\n  background-image: url('${({ src }) => src}');\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  flex: none;\r\n  width: 80px;\r\n`\r\n\r\nconst SelectionCard: React.FC<SelectionCardProps> = ({\r\n  name,\r\n  value,\r\n  isChecked = false,\r\n  image,\r\n  onChange,\r\n  disabled,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Card isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\r\n      <Label isDisabled={disabled}>\r\n        <Body>\r\n          <Radio\r\n            name={name}\r\n            checked={isChecked}\r\n            value={value}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            disabled={disabled}\r\n            style={{ flex: 'none' }}\r\n          />\r\n          <Children>{children}</Children>\r\n        </Body>\r\n        <StyledBackgroundImage src={image} />\r\n      </Label>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SelectionCard\r\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import { parseUnits } from '@ethersproject/units'\r\n\r\nexport const MINT_COST = parseUnits('1')\r\nexport const REGISTER_COST = parseUnits('0.5')\r\nexport const ALLOWANCE_MULTIPLIER = 5\r\nexport const STARTER_NFT_BUNNY_IDS = ['5', '6', '7', '8', '9'] // 'sleepy', 'dollop', 'twinkle', 'churro', 'sunny'\r\nexport const USERNAME_MIN_LENGTH = 3\r\nexport const USERNAME_MAX_LENGTH = 15\r\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\r\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\r\nimport { Actions, State, ContextType } from './types'\r\n\r\nconst totalCost = MINT_COST.add(REGISTER_COST)\r\nconst allowance = totalCost.mul(ALLOWANCE_MULTIPLIER)\r\n\r\nconst initialState: State = {\r\n  isInitialized: false,\r\n  currentStep: 0,\r\n  teamId: null,\r\n  selectedNft: {\r\n    collectionAddress: null,\r\n    tokenId: null,\r\n  },\r\n  userName: '',\r\n  minimumCakeRequired: totalCost,\r\n  allowance,\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'initialize':\r\n      return {\r\n        ...state,\r\n        isInitialized: true,\r\n        currentStep: action.step,\r\n      }\r\n    case 'next_step':\r\n      return {\r\n        ...state,\r\n        currentStep: state.currentStep + 1,\r\n      }\r\n    case 'set_team':\r\n      return {\r\n        ...state,\r\n        teamId: action.teamId,\r\n      }\r\n    case 'set_selected_nft':\r\n      return {\r\n        ...state,\r\n        selectedNft: {\r\n          tokenId: action.tokenId,\r\n          collectionAddress: action.collectionAddress,\r\n        },\r\n      }\r\n    case 'set_username':\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const ProfileCreationContext = createContext<ContextType>(null)\r\n\r\nconst ProfileCreationProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWeb3React()\r\n\r\n  // Initial checks\r\n  useEffect(() => {\r\n    let isSubscribed = true\r\n\r\n    const fetchData = async () => {\r\n      const bunnyFactoryContract = getBunnyFactoryContract()\r\n      const canMint = await bunnyFactoryContract.canMint(account)\r\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n\r\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\r\n      if (isSubscribed) {\r\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchData()\r\n    }\r\n\r\n    return () => {\r\n      isSubscribed = false\r\n    }\r\n  }, [account, dispatch])\r\n\r\n  const actions: ContextType['actions'] = useMemo(\r\n    () => ({\r\n      nextStep: () => dispatch({ type: 'next_step' }),\r\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\r\n      setSelectedNft: (tokenId: string, collectionAddress: string) =>\r\n        dispatch({ type: 'set_selected_nft', tokenId, collectionAddress }),\r\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\r\n    }),\r\n    [dispatch],\r\n  )\r\n\r\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\r\n}\r\n\r\nexport default ProfileCreationProvider\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Breadcrumbs, Heading, Text, Link, Button } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Wrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-top: 32px;\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst steps = ['Get Starter Collectible', 'Set Profile Picture', 'Join Team', 'Set Name']\r\n\r\nconst Header: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { currentStep } = useContext(ProfileCreationContext)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"8px\" id=\"profile-setup-title\">\r\n        {t('Profile Setup')}\r\n      </Heading>\r\n      <Heading as=\"h2\" scale=\"lg\" mb=\"8px\">\r\n        {t('Show off your stats and collectibles with your unique profile')}\r\n      </Heading>\r\n      <Text color=\"textSubtle\" mb=\"8px\">\r\n        {t('Total cost: 1.5 CAKE')}\r\n      </Text>\r\n      <Link href={`${nftsBaseUrl}/profile`}>\r\n        <Button mb=\"24px\" scale=\"sm\" variant=\"secondary\">\r\n          {t('Back to profile')}\r\n        </Button>\r\n      </Link>\r\n      <Breadcrumbs>\r\n        {steps.map((translationKey, index) => {\r\n          return (\r\n            <Text key={translationKey} color={index <= currentStep ? 'text' : 'textDisabled'}>\r\n              {t(translationKey)}\r\n            </Text>\r\n          )\r\n        })}\r\n      </Breadcrumbs>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\n\r\nconst WalletNotConnected = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div>\r\n      <Heading scale=\"xl\" mb=\"8px\">\r\n        {t('Oops!')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"16px\">\r\n        {t('Please connect your wallet to continue')}\r\n      </Text>\r\n      <ConnectWalletButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WalletNotConnected\r\n","import React from 'react'\r\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap/uikit'\r\n\r\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\r\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\r\n}\r\n\r\nexport default NextStepButton\r\n","import { useContext } from 'react'\r\nimport { ProfileCreationContext } from './ProfileCreationProvider'\r\n\r\nconst useProfileCreation = () => {\r\n  return useContext(ProfileCreationContext)\r\n}\r\n\r\nexport default useProfileCreation\r\n","import React, { useState, useEffect } from 'react'\r\nimport { formatUnits } from '@ethersproject/units'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\r\nimport { FetchStatus, useGetCakeBalance } from 'hooks/useTokenBalance'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons'\r\nimport useToast from 'hooks/useToast'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchUserNfts } from 'state/nftMarket/reducer'\r\nimport { useGetCollections } from 'state/nftMarket/hooks'\r\nimport { getNftsFromCollectionApi } from 'state/nftMarket/helpers'\r\nimport { ApiSingleTokenData } from 'state/nftMarket/types'\r\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\r\nimport SelectionCard from './SelectionCard'\r\nimport NextStepButton from './NextStepButton'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { MINT_COST, STARTER_NFT_BUNNY_IDS } from './config'\r\n\r\ninterface MintNftData extends ApiSingleTokenData {\r\n  bunnyId?: string\r\n}\r\n\r\nconst Mint: React.FC = () => {\r\n  const [selectedBunnyId, setSelectedBunnyId] = useState<string>('')\r\n  const [starterNfts, setStarterNfts] = useState<MintNftData[]>([])\r\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n  const collections = useGetCollections()\r\n  const { toastSuccess } = useToast()\r\n  const dispatch = useAppDispatch()\r\n\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const bunnyFactoryContract = useBunnyFactory()\r\n  const { t } = useTranslation()\r\n  const { balance: cakeBalance, fetchStatus } = useGetCakeBalance()\r\n  const hasMinimumCakeRequired = fetchStatus === FetchStatus.SUCCESS && cakeBalance.gte(MINT_COST)\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  useEffect(() => {\r\n    const getStarterNfts = async () => {\r\n      const { data: allPbTokens } = await getNftsFromCollectionApi(pancakeBunniesAddress)\r\n      const nfts = STARTER_NFT_BUNNY_IDS.map((bunnyId) => {\r\n        if (allPbTokens && allPbTokens[bunnyId]) {\r\n          return { ...allPbTokens[bunnyId], bunnyId }\r\n        }\r\n        return undefined\r\n      })\r\n      setStarterNfts(nfts)\r\n    }\r\n    if (starterNfts.length === 0) {\r\n      getStarterNfts()\r\n    }\r\n  }, [starterNfts])\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        // TODO: Move this to a helper, this check will be probably be used many times\r\n        try {\r\n          const response = await cakeContract.allowance(account, bunnyFactoryContract.address)\r\n          return response.gte(minimumCakeRequired)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return callWithGasPrice(cakeContract, 'approve', [bunnyFactoryContract.address, allowance.toString()])\r\n      },\r\n      onConfirm: () => {\r\n        return callWithGasPrice(bunnyFactoryContract, 'mintNFT', [selectedBunnyId])\r\n      },\r\n      onApproveSuccess: () => {\r\n        toastSuccess(t('Enabled'), t(\"Press 'confirm' to mint this NFT\"))\r\n      },\r\n      onSuccess: () => {\r\n        toastSuccess(t('Success'), t('You have minted your starter NFT'))\r\n        dispatch(fetchUserNfts({ account, collections }))\r\n        actions.nextStep()\r\n      },\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 1 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Get Starter Collectible')}\r\n      </Heading>\r\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\r\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Choose your Starter!')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {t('Choose wisely: you can only ever make one starter collectible!')}\r\n          </Text>\r\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\r\n            {t('Cost: %num% CAKE', { num: formatUnits(MINT_COST) })}\r\n          </Text>\r\n          {starterNfts.map((nft) => {\r\n            const handleChange = (value: string) => setSelectedBunnyId(value)\r\n\r\n            return (\r\n              <SelectionCard\r\n                key={nft?.name}\r\n                name=\"mintStarter\"\r\n                value={nft?.bunnyId}\r\n                image={nft?.image.thumbnail}\r\n                isChecked={selectedBunnyId === nft?.bunnyId}\r\n                onChange={handleChange}\r\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\r\n              >\r\n                <Text bold>{nft?.name}</Text>\r\n              </SelectionCard>\r\n            )\r\n          })}\r\n          {!hasMinimumCakeRequired && (\r\n            <Text color=\"failure\" mb=\"16px\">\r\n              {t('A minimum of %num% CAKE is required', { num: formatUnits(MINT_COST) })}\r\n            </Text>\r\n          )}\r\n          <ApproveConfirmButtons\r\n            isApproveDisabled={selectedBunnyId === null || isConfirmed || isConfirming || isApproved}\r\n            isApproving={isApproving}\r\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\r\n            isConfirming={isConfirming}\r\n            onApprove={handleApprove}\r\n            onConfirm={handleConfirm}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mint\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useUserNfts } from 'state/nftMarket/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport useFetchUserNfts from 'views/Nft/market/Profile/hooks/useFetchUserNfts'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\nimport { NftLocation, UserNftInitializationState } from 'state/nftMarket/types'\r\nimport SelectionCard from './SelectionCard'\r\nimport NextStepButton from './NextStepButton'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Link = styled(RouterLink)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst NftWrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst ProfilePicture: React.FC = () => {\r\n  const { library } = useWeb3React()\r\n  const [isApproved, setIsApproved] = useState(false)\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\r\n\r\n  const { nfts, userNftsInitializationState } = useUserNfts()\r\n  useFetchUserNfts()\r\n\r\n  const { t } = useTranslation()\r\n  const { toastError, toastSuccess } = useToast()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const handleApprove = async () => {\r\n    const contract = getErc721Contract(selectedNft.collectionAddress, library.getSigner())\r\n    const tx = await callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId])\r\n    setIsApproving(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      toastSuccess(t('Enabled'), t('Please progress to the next step.'))\r\n      setIsApproving(false)\r\n      setIsApproved(true)\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsApproving(false)\r\n    }\r\n  }\r\n\r\n  if (nfts.length === 0 && userNftsInitializationState === UserNftInitializationState.INITIALIZED) {\r\n    return (\r\n      <>\r\n        <Heading scale=\"xl\" mb=\"24px\">\r\n          {t('Oops!')}\r\n        </Heading>\r\n        <Text bold fontSize=\"20px\" mb=\"24px\">\r\n          {t('We couldn’t find any Pancake Collectibles in your wallet.')}\r\n        </Text>\r\n        <Text as=\"p\">\r\n          {t(\r\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\r\n          )}\r\n        </Text>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 2 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Set Profile Picture')}\r\n      </Heading>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Choose collectible')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t('Only approved Pancake Collectibles can be used.')}\r\n            <Link to={`${nftsBaseUrl}/collections`} style={{ marginLeft: '4px' }}>\r\n              {t('See the list >')}\r\n            </Link>\r\n          </Text>\r\n          <NftWrapper>\r\n            {nfts\r\n              .filter((walletNft) => walletNft.location === NftLocation.WALLET)\r\n              .map((walletNft) => {\r\n                return (\r\n                  <SelectionCard\r\n                    name=\"profilePicture\"\r\n                    key={`${walletNft.collectionAddress}#${walletNft.tokenId}`}\r\n                    value={walletNft.tokenId}\r\n                    image={walletNft.image.thumbnail}\r\n                    isChecked={walletNft.tokenId === selectedNft.tokenId}\r\n                    onChange={(value: string) => actions.setSelectedNft(value, walletNft.collectionAddress)}\r\n                  >\r\n                    <Text bold>{walletNft.name}</Text>\r\n                  </SelectionCard>\r\n                )\r\n              })}\r\n          </NftWrapper>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Allow collectible to be locked')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {t(\r\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\r\n            )}\r\n          </Text>\r\n          <Button\r\n            isLoading={isApproving}\r\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\r\n            onClick={handleApprove}\r\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\r\n            id=\"approveStarterCollectible\"\r\n          >\r\n            {t('Enable')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfilePicture\r\n","import React, { useMemo } from 'react'\r\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport shuffle from 'lodash/shuffle'\r\nimport { useTeams } from 'state/teams/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SelectionCard from './SelectionCard'\r\nimport NextStepButton from './NextStepButton'\r\nimport useProfileCreation from './contexts/hook'\r\n\r\nconst Team: React.FC = () => {\r\n  const { teamId: currentTeamId, actions } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { teams } = useTeams()\r\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\r\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 3 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Join a Team')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('It won’t be possible to undo the choice you make for the foreseeable future!')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Join a Team')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\r\n            )}\r\n          </Text>\r\n          {teamValues &&\r\n            teamValues.map((team) => {\r\n              return (\r\n                <SelectionCard\r\n                  key={team.name}\r\n                  name=\"teams-selection\"\r\n                  value={team.id}\r\n                  isChecked={currentTeamId === team.id}\r\n                  image={`/images/teams/${team.images.md}`}\r\n                  onChange={handleTeamSelection}\r\n                  disabled={!team.isJoinable}\r\n                >\r\n                  <Text bold>{team.name}</Text>\r\n                  <Flex>\r\n                    <CommunityIcon mr=\"8px\" />\r\n                    <Text>{team.users.toLocaleString()}</Text>\r\n                  </Flex>\r\n                </SelectionCard>\r\n              )\r\n            })}\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Team\r\n","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import React, { ChangeEvent, useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Text,\r\n  Input as UIKitInput,\r\n  Button,\r\n  AutoRenewIcon,\r\n  CheckmarkIcon,\r\n  Flex,\r\n  WarningIcon,\r\n  useModal,\r\n  Skeleton,\r\n  Checkbox,\r\n} from '@pancakeswap/uikit'\r\nimport { parseISO, formatDistance } from 'date-fns'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { formatUnits } from '@ethersproject/units'\r\nimport { API_PROFILE } from 'config/constants/endpoints'\r\nimport useToast from 'hooks/useToast'\r\nimport { FetchStatus, useGetCakeBalance } from 'hooks/useTokenBalance'\r\nimport { signMessage } from 'utils/web3React'\r\nimport fetchWithTimeout from 'utils/fetchWithTimeout'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConfirmProfileCreationModal from './ConfirmProfileCreationModal'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\r\nimport useDebounce from '../../hooks/useDebounce'\r\n\r\nenum ExistingUserState {\r\n  IDLE = 'idle', // initial state\r\n  CREATED = 'created', // username has already been created\r\n  NEW = 'new', // username has not been created\r\n}\r\n\r\nconst InputWrap = styled.div`\r\n  position: relative;\r\n  max-width: 240px;\r\n`\r\n\r\nconst Input = styled(UIKitInput)`\r\n  padding-right: 40px;\r\n`\r\n\r\nconst Indicator = styled(Flex)`\r\n  align-items: center;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-top: -12px;\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 50%;\r\n  width: 24px;\r\n`\r\n\r\nconst UserName: React.FC = () => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { toastError } = useToast()\r\n  const { library } = useWeb3Provider()\r\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\r\n  const [isValid, setIsValid] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const fetchAbortSignal = useRef<AbortController>(null)\r\n  const { balance: cakeBalance, fetchStatus } = useGetCakeBalance()\r\n  const hasMinimumCakeRequired = fetchStatus === FetchStatus.SUCCESS && cakeBalance.gte(REGISTER_COST)\r\n  const [onPresentConfirmProfileCreation] = useModal(\r\n    <ConfirmProfileCreationModal\r\n      userName={userName}\r\n      selectedNft={selectedNft}\r\n      account={account}\r\n      teamId={teamId}\r\n      minimumCakeRequired={minimumCakeRequired}\r\n      allowance={allowance}\r\n    />,\r\n    false,\r\n  )\r\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\r\n\r\n  const [usernameToCheck, setUsernameToCheck] = useState<string>(undefined)\r\n  const debouncedUsernameToCheck = useDebounce(usernameToCheck, 200)\r\n\r\n  useEffect(() => {\r\n    const fetchUsernameToCheck = async (abortSignal) => {\r\n      try {\r\n        setIsLoading(true)\r\n        if (!debouncedUsernameToCheck) {\r\n          setIsValid(false)\r\n          setMessage('')\r\n          fetchAbortSignal.current = null\r\n        } else {\r\n          const res = await fetchWithTimeout(`${API_PROFILE}/api/users/valid/${debouncedUsernameToCheck}`, {\r\n            method: 'get',\r\n            signal: abortSignal,\r\n            timeout: 30000,\r\n          })\r\n\r\n          fetchAbortSignal.current = null\r\n\r\n          if (res.ok) {\r\n            setIsValid(true)\r\n            setMessage('')\r\n          } else {\r\n            const data = await res.json()\r\n            setIsValid(false)\r\n            setMessage(data?.error?.message)\r\n          }\r\n        }\r\n      } catch (e) {\r\n        setIsValid(false)\r\n        if (e.name !== 'AbortError') {\r\n          setMessage(t('Error fetching data'))\r\n          console.error(e)\r\n        }\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (fetchAbortSignal.current) {\r\n      fetchAbortSignal.current.abort()\r\n    }\r\n\r\n    fetchAbortSignal.current = new AbortController()\r\n\r\n    fetchUsernameToCheck(fetchAbortSignal.current.signal)\r\n  }, [debouncedUsernameToCheck, t])\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target\r\n    actions.setUserName(value)\r\n    setUsernameToCheck(value)\r\n  }\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const signature = await signMessage(library, account, userName)\r\n      const response = await fetch(`${API_PROFILE}/api/users/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          address: account,\r\n          username: userName,\r\n          signature,\r\n        }),\r\n      })\r\n\r\n      if (response.ok) {\r\n        setExistingUserState(ExistingUserState.CREATED)\r\n      } else {\r\n        const data = await response.json()\r\n        toastError(t('Error'), data?.error?.message)\r\n      }\r\n    } catch (error) {\r\n      toastError(error?.message ? error.message : JSON.stringify(error))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  // Perform an initial check to see if the wallet has already created a username\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`${API_PROFILE}/api/users/${account}`)\r\n        const data = await response.json()\r\n\r\n        if (response.ok) {\r\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\r\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\r\n\r\n          actions.setUserName(data.username)\r\n          setExistingUserState(ExistingUserState.CREATED)\r\n          setIsValid(true)\r\n        } else {\r\n          setExistingUserState(ExistingUserState.NEW)\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Unable to verify username'))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchUser()\r\n    }\r\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 4 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Set Your Name')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Set Your Name')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\r\n            )}\r\n          </Text>\r\n          {existingUserState === ExistingUserState.IDLE ? (\r\n            <Skeleton height=\"40px\" width=\"240px\" />\r\n          ) : (\r\n            <InputWrap>\r\n              <Input\r\n                onChange={handleChange}\r\n                isWarning={userName && !isValid}\r\n                isSuccess={userName && isValid}\r\n                minLength={USERNAME_MIN_LENGTH}\r\n                maxLength={USERNAME_MAX_LENGTH}\r\n                disabled={isUserCreated}\r\n                placeholder={t('Enter your name...')}\r\n                value={userName}\r\n              />\r\n              <Indicator>\r\n                {isLoading && <AutoRenewIcon spin />}\r\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\r\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\r\n              </Indicator>\r\n            </InputWrap>\r\n          )}\r\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\r\n            {message}\r\n          </Text>\r\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\r\n            {t(\r\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\r\n            )}\r\n          </Text>\r\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\r\n            <Flex alignItems=\"center\">\r\n              <div style={{ flex: 'none' }}>\r\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\r\n              </div>\r\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\r\n            </Flex>\r\n          </label>\r\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\r\n            {t('Confirm')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <Button\r\n        onClick={onPresentConfirmProfileCreation}\r\n        disabled={!isValid || !isUserCreated}\r\n        id=\"completeProfileCreation\"\r\n      >\r\n        {t('Complete Profile')}\r\n      </Button>\r\n      {!hasMinimumCakeRequired && (\r\n        <Text color=\"failure\" mt=\"16px\">\r\n          {t('A minimum of %num% CAKE is required', { num: formatUnits(REGISTER_COST) })}\r\n        </Text>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserName\r\n","interface FetchTimeoutOptions extends RequestInit {\r\n  timeout?: number\r\n}\r\n\r\nconst fetchWithTimeout = (url, options: FetchTimeoutOptions = {}): Promise<Response> => {\r\n  const { timeout = 10000, ...fetchOptions } = options\r\n\r\n  return Promise.race([\r\n    fetch(url, fetchOptions),\r\n    new Promise((_, reject) => {\r\n      setTimeout(() => {\r\n        reject(new Error(`Request for ${url} timed out after ${timeout} milliseconds`))\r\n      }, timeout)\r\n    }),\r\n  ]) as Promise<Response>\r\n}\r\n\r\nexport default fetchWithTimeout\r\n","import React from 'react'\r\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from '@ethersproject/units'\r\nimport { useAppDispatch } from 'state'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake, useProfile } from 'hooks/useContract'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useToast from 'hooks/useToast'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons'\r\nimport { REGISTER_COST } from './config'\r\nimport { State } from './contexts/types'\r\n\r\ninterface Props {\r\n  userName: string\r\n  selectedNft: State['selectedNft']\r\n  account: string\r\n  teamId: number\r\n  minimumCakeRequired: ethers.BigNumber\r\n  allowance: ethers.BigNumber\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\r\n  account,\r\n  teamId,\r\n  selectedNft,\r\n  minimumCakeRequired,\r\n  allowance,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const profileContract = useProfile()\r\n  const dispatch = useAppDispatch()\r\n  const { toastSuccess } = useToast()\r\n  const cakeContract = useCake()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        try {\r\n          const response = await cakeContract.allowance(account, profileContract.address)\r\n          return response.gte(minimumCakeRequired)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return callWithGasPrice(cakeContract, 'approve', [profileContract.address, allowance.toJSON()])\r\n      },\r\n      onConfirm: () => {\r\n        return callWithGasPrice(profileContract, 'createProfile', [\r\n          teamId,\r\n          selectedNft.collectionAddress,\r\n          selectedNft.tokenId,\r\n        ])\r\n      },\r\n      onSuccess: async ({ receipt }) => {\r\n        await dispatch(fetchProfile(account))\r\n        onDismiss()\r\n        toastSuccess(t('Profile created!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\r\n      },\r\n    })\r\n\r\n  return (\r\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\r\n      <Text color=\"textSubtle\" mb=\"8px\">\r\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\r\n      </Text>\r\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\r\n        <Text>{t('Cost')}</Text>\r\n        <Text>{t('%num% CAKE', { num: formatUnits(REGISTER_COST) })}</Text>\r\n      </Flex>\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmProfileCreationModal\r\n","import React, { useContext } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport NoWalletConnected from './WalletNotConnected'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\nimport Mint from './Mint'\r\nimport ProfilePicture from './ProfilePicture'\r\nimport TeamSelection from './TeamSelection'\r\nimport UserName from './UserName'\r\n\r\nconst Steps = () => {\r\n  const { t } = useTranslation()\r\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return <NoWalletConnected />\r\n  }\r\n\r\n  if (!isInitialized) {\r\n    return <div>{t('Loading...')}</div>\r\n  }\r\n\r\n  if (currentStep === 0) {\r\n    return <Mint />\r\n  }\r\n\r\n  if (currentStep === 1) {\r\n    return <ProfilePicture />\r\n  }\r\n\r\n  if (currentStep === 2) {\r\n    return <TeamSelection />\r\n  }\r\n\r\n  if (currentStep === 3) {\r\n    return <UserName />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default Steps\r\n","import React from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Redirect } from 'react-router'\r\nimport Page from 'components/Layout/Page'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport PageLoader from 'components/Loader/PageLoader'\r\nimport useFetchUserNfts from 'views/Nft/market/Profile/hooks/useFetchUserNfts'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\nimport { useFetchCollections } from 'state/nftMarket/hooks'\r\nimport Header from './Header'\r\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\r\nimport Steps from './Steps'\r\n\r\nconst ProfileCreation = () => {\r\n  const { account } = useWeb3React()\r\n  const { isInitialized, isLoading, hasProfile } = useProfile()\r\n\r\n  useFetchUserNfts()\r\n  useFetchCollections()\r\n\r\n  if (!isInitialized || isLoading) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  if (account && hasProfile) {\r\n    return <Redirect to={`${nftsBaseUrl}/profile/${account.toLowerCase()}`} />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ProfileCreationProvider>\r\n        <Page>\r\n          <Header />\r\n          <Steps />\r\n        </Page>\r\n      </ProfileCreationProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileCreation\r\n","import { useEffect, useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\r\nimport { isAddress } from 'utils'\r\nimport { fetchCollection, fetchCollections, fetchNewPBAndUpdateExisting } from './reducer'\r\nimport { State } from '../types'\r\nimport { NftActivityFilter, NftFilter, NftFilterLoadingState, NftToken, UserNftsState } from './types'\r\n\r\nconst MAX_GEN0_ID = 4\r\n\r\nexport const useFetchCollections = () => {\r\n  const dispatch = useAppDispatch()\r\n  useEffect(() => {\r\n    dispatch(fetchCollections())\r\n  }, [dispatch])\r\n}\r\n\r\nexport const useFetchCollection = (collectionAddress: string) => {\r\n  const dispatch = useAppDispatch()\r\n  useEffect(() => {\r\n    dispatch(fetchCollection(collectionAddress))\r\n  }, [dispatch, collectionAddress])\r\n}\r\n\r\n// Returns a function that fetches more NFTs for specified bunny id\r\n// as well as updating existing PB NFTs in state\r\n// Note: PancakeBunny specific\r\nexport const useFetchByBunnyIdAndUpdate = (bunnyId: string) => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const { latestPancakeBunniesUpdateAt, isUpdatingPancakeBunnies } = useSelector(\r\n    (state: State) => state.nftMarket.data.loadingState,\r\n  )\r\n\r\n  // Extra guard in case market data shifts\r\n  // we don't wanna fetch same tokens multiple times\r\n  const existingBunniesInState = useGetAllBunniesByBunnyId(bunnyId)\r\n  const existingTokensWithBunnyId = existingBunniesInState ? existingBunniesInState.map((nft) => nft.tokenId) : []\r\n\r\n  const allPancakeBunnies = useNftsFromCollection(pancakeBunniesAddress)\r\n  const allExistingPBTokenIds = allPancakeBunnies ? allPancakeBunnies.map((nft) => nft.tokenId) : []\r\n\r\n  const firstBunny = existingBunniesInState.length > 0 ? existingBunniesInState[0] : null\r\n\r\n  // If we already have NFT with this bunny id in state - we can reuse its metadata without making API request\r\n  const existingMetadata = useMemo(() => {\r\n    return firstBunny\r\n      ? {\r\n          name: firstBunny.name,\r\n          description: firstBunny.description,\r\n          collection: { name: firstBunny.collectionName },\r\n          image: firstBunny.image,\r\n        }\r\n      : null\r\n  }, [firstBunny])\r\n\r\n  // This fetches more bunnies when called\r\n  const fetchMorePancakeBunnies = (orderDirection: 'asc' | 'desc') => {\r\n    dispatch(\r\n      fetchNewPBAndUpdateExisting({\r\n        bunnyId,\r\n        existingTokensWithBunnyId,\r\n        allExistingPBTokenIds,\r\n        existingMetadata,\r\n        orderDirection,\r\n      }),\r\n    )\r\n  }\r\n\r\n  return { isUpdatingPancakeBunnies, latestPancakeBunniesUpdateAt, fetchMorePancakeBunnies }\r\n}\r\n\r\nexport const useLoadingState = () => {\r\n  return useSelector((state: State) => state.nftMarket.data.loadingState)\r\n}\r\n\r\nexport const useGetCollections = () => {\r\n  return useSelector((state: State) => state.nftMarket.data.collections)\r\n}\r\n\r\nexport const useGetCollection = (collectionAddress: string) => {\r\n  const checksummedCollectionAddress = isAddress(collectionAddress) || ''\r\n  const collections = useGetCollections()\r\n  return collections[checksummedCollectionAddress]\r\n}\r\n\r\nexport const useNftsFromCollection = (collectionAddress: string) => {\r\n  const checksummedCollectionAddress = isAddress(collectionAddress) || ''\r\n  const nfts: NftToken[] = useSelector((state: State) => state.nftMarket.data.nfts[checksummedCollectionAddress])\r\n  return nfts\r\n}\r\n\r\nexport const useGetAllBunniesByBunnyId = (bunnyId: string) => {\r\n  const nfts: NftToken[] = useSelector((state: State) => state.nftMarket.data.nfts[pancakeBunniesAddress])\r\n  return nfts ? nfts.filter((nft) => nft.attributes[0].value === bunnyId && nft.marketData.isTradable) : []\r\n}\r\n\r\nexport const useGetNFTInitializationState = () => {\r\n  return useSelector((state: State) => state.nftMarket.initializationState)\r\n}\r\n\r\nexport const useUserNfts = (): UserNftsState => {\r\n  return useSelector((state: State) => state.nftMarket.data.user)\r\n}\r\n\r\nexport const useHasGen0Nfts = (): boolean => {\r\n  const userNfts = useSelector((state: State) => state.nftMarket.data.user)\r\n  return userNfts.nfts.some((nft) => nft.attributes && Number(nft.attributes[0]?.value) <= MAX_GEN0_ID)\r\n}\r\n\r\nexport const useGetNftFilters = (collectionAddress: string) => {\r\n  const collectionFilter: NftFilter = useSelector((state: State) => state.nftMarket.data.filters[collectionAddress])\r\n  return collectionFilter ? collectionFilter.activeFilters : {}\r\n}\r\n\r\nexport const useGetNftFilterLoadingState = (collectionAddress: string) => {\r\n  const collectionFilter: NftFilter = useSelector((state: State) => state.nftMarket.data.filters[collectionAddress])\r\n  return collectionFilter ? collectionFilter.loadingState : NftFilterLoadingState.IDLE\r\n}\r\n\r\nexport const useGetNftOrdering = (collectionAddress: string) => {\r\n  const collectionFilter: NftFilter = useSelector((state: State) => state.nftMarket.data.filters[collectionAddress])\r\n  return collectionFilter ? collectionFilter.ordering : { field: 'currentAskPrice', direction: 'asc' as 'asc' | 'desc' }\r\n}\r\n\r\nexport const useGetNftShowOnlyOnSale = (collectionAddress: string) => {\r\n  const collectionFilter: NftFilter = useSelector((state: State) => state.nftMarket.data.filters[collectionAddress])\r\n  return collectionFilter ? collectionFilter.showOnlyOnSale : true\r\n}\r\n\r\nexport const useGetNftActivityFilters = (collectionAddress: string) => {\r\n  const collectionFilter: NftActivityFilter = useSelector(\r\n    (state: State) => state.nftMarket.data.activityFilters[collectionAddress],\r\n  )\r\n  return collectionFilter || { typeFilters: [] }\r\n}\r\n","import { useEffect, useReducer, useRef } from 'react'\r\nimport { noop } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers } from 'ethers'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\r\n\r\ntype Action =\r\n  | { type: 'requires_approval' }\r\n  | { type: 'approve_sending' }\r\n  | { type: 'approve_receipt' }\r\n  | { type: 'approve_error' }\r\n  | { type: 'confirm_sending' }\r\n  | { type: 'confirm_receipt' }\r\n  | { type: 'confirm_error' }\r\n\r\ninterface State {\r\n  approvalState: LoadingState\r\n  confirmState: LoadingState\r\n}\r\n\r\nconst initialState: State = {\r\n  approvalState: 'idle',\r\n  confirmState: 'idle',\r\n}\r\n\r\nconst reducer = (state: State, actions: Action): State => {\r\n  switch (actions.type) {\r\n    case 'requires_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_sending':\r\n      return {\r\n        ...state,\r\n        approvalState: 'loading',\r\n      }\r\n    case 'approve_receipt':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_error':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n      }\r\n    case 'confirm_sending':\r\n      return {\r\n        ...state,\r\n        confirmState: 'loading',\r\n      }\r\n    case 'confirm_receipt':\r\n      return {\r\n        ...state,\r\n        confirmState: 'success',\r\n      }\r\n    case 'confirm_error':\r\n      return {\r\n        ...state,\r\n        confirmState: 'fail',\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ninterface OnSuccessProps {\r\n  state: State\r\n  receipt: ethers.providers.TransactionReceipt\r\n}\r\n\r\ninterface ApproveConfirmTransaction {\r\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\r\n  onConfirm: (params?) => Promise<ethers.providers.TransactionResponse>\r\n  onRequiresApproval?: () => Promise<boolean>\r\n  onSuccess: ({ state, receipt }: OnSuccessProps) => void\r\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\r\n}\r\n\r\nconst useApproveConfirmTransaction = ({\r\n  onApprove,\r\n  onConfirm,\r\n  onRequiresApproval,\r\n  onSuccess = noop,\r\n  onApproveSuccess = noop,\r\n}: ApproveConfirmTransaction) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const handlePreApprove = useRef(onRequiresApproval)\r\n  const { toastError } = useToast()\r\n\r\n  // Check if approval is necessary, re-check if account changes\r\n  useEffect(() => {\r\n    if (account && handlePreApprove.current) {\r\n      handlePreApprove.current().then((result) => {\r\n        if (result) {\r\n          dispatch({ type: 'requires_approval' })\r\n        }\r\n      })\r\n    }\r\n  }, [account, handlePreApprove, dispatch])\r\n\r\n  return {\r\n    isApproving: state.approvalState === 'loading',\r\n    isApproved: state.approvalState === 'success',\r\n    isConfirming: state.confirmState === 'loading',\r\n    isConfirmed: state.confirmState === 'success',\r\n    hasApproveFailed: state.approvalState === 'fail',\r\n    hasConfirmFailed: state.confirmState === 'fail',\r\n    handleApprove: async () => {\r\n      try {\r\n        const tx = await onApprove()\r\n        dispatch({ type: 'approve_sending' })\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          dispatch({ type: 'approve_receipt' })\r\n          onApproveSuccess({ state, receipt })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'approve_error' })\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    },\r\n    handleConfirm: async (params = {}) => {\r\n      dispatch({ type: 'confirm_sending' })\r\n      try {\r\n        const tx = await onConfirm(params)\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          dispatch({ type: 'confirm_receipt' })\r\n          onSuccess({ state, receipt })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'confirm_error' })\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\nexport default useApproveConfirmTransaction\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport enum ButtonArrangement {\r\n  ROW = 'row',\r\n  SEQUENTIAL = 'sequential',\r\n}\r\n\r\ninterface ApproveConfirmButtonsProps {\r\n  isApproveDisabled: boolean\r\n  isApproving: boolean\r\n  isConfirming: boolean\r\n  isConfirmDisabled: boolean\r\n  onApprove: () => void\r\n  onConfirm: () => void\r\n  buttonArrangement?: ButtonArrangement\r\n  confirmLabel?: string\r\n  confirmId?: string\r\n}\r\n\r\nconst StyledApproveConfirmButtonRow = styled.div`\r\n  align-items: center;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  justify-content: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: 1fr 24px 1fr;\r\n  }\r\n`\r\n\r\nconst Button = styled(UIKitButton)`\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    min-width: 160px;\r\n  }\r\n`\r\n\r\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\r\n\r\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\r\n\r\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\r\n  isApproveDisabled,\r\n  isApproving,\r\n  isConfirming,\r\n  isConfirmDisabled,\r\n  onApprove,\r\n  onConfirm,\r\n  buttonArrangement = ButtonArrangement.ROW,\r\n  confirmLabel,\r\n  confirmId,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const confirmButtonText = confirmLabel ?? t('Confirm')\r\n\r\n  const ApproveConfirmRow = () => {\r\n    return (\r\n      <StyledApproveConfirmButtonRow>\r\n        <Box>\r\n          <Button\r\n            disabled={isApproveDisabled}\r\n            onClick={onApprove}\r\n            endIcon={isApproving ? spinnerIcon : undefined}\r\n            isLoading={isApproving}\r\n          >\r\n            {isApproving ? t('Enabling') : t('Enable')}\r\n          </Button>\r\n        </Box>\r\n        <Flex justifyContent=\"center\">\r\n          <ChevronRight />\r\n          <ChevronBottom />\r\n        </Flex>\r\n        <Box>\r\n          <Button\r\n            id={confirmId}\r\n            onClick={onConfirm}\r\n            disabled={isConfirmDisabled}\r\n            isLoading={isConfirming}\r\n            endIcon={isConfirming ? spinnerIcon : undefined}\r\n          >\r\n            {isConfirming ? t('Confirming') : confirmButtonText}\r\n          </Button>\r\n        </Box>\r\n      </StyledApproveConfirmButtonRow>\r\n    )\r\n  }\r\n\r\n  const ApproveConfirmSequential = () => {\r\n    return (\r\n      <>\r\n        {isApproveDisabled ? (\r\n          <Box>\r\n            <Button\r\n              id={confirmId}\r\n              onClick={onConfirm}\r\n              disabled={isConfirmDisabled}\r\n              isLoading={isConfirming}\r\n              endIcon={isConfirming ? spinnerIcon : undefined}\r\n            >\r\n              {isConfirming ? t('Confirming') : confirmButtonText}\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\r\n              {isApproving ? t('Enabling') : t('Enable')}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\r\n}\r\n\r\nexport default ApproveConfirmButtons\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/ApproveConfirmButtons.tsx","components/FoldableSection/FoldableText.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","components/TabToggle/index.tsx","../node_modules/date-fns/esm/differenceInSeconds/index.js","../node_modules/date-fns/esm/add/index.js","../node_modules/date-fns/esm/differenceInHours/index.js","utils/types.ts","config/constants/farmAuctions.ts","views/FarmAuction/components/AuctionLeaderboard/index.tsx","views/FarmAuction/helpers.tsx","views/FarmAuction/components/FAQs.tsx","views/FarmAuction/components/PlaceBidModal.tsx","views/FarmAuction/components/AuctionDetailsCard/AuctionSchedule.tsx","views/FarmAuction/components/AuctionDetailsCard/CannotBidMessage.tsx","views/FarmAuction/hooks/useWhitelistedAddresses.ts","views/FarmAuction/components/WhitelistedBiddersModal.tsx","views/FarmAuction/components/WhitelistedBiddersButton.tsx","views/FarmAuction/components/AuctionDetailsCard/AuctionFooter.tsx","views/FarmAuction/components/AuctionDetailsCard/index.tsx","views/FarmAuction/hooks/useAuctionHistory.tsx","views/FarmAuction/components/AuctionLeaderboard/AuctionLeaderboardTable.tsx","views/FarmAuction/components/AuctionHistory.tsx","views/FarmAuction/components/AuctionLeaderboard/AuctionProgress.tsx","views/FarmAuction/components/AuctionLeaderboard/AuctionRibbon.tsx","views/FarmAuction/components/AuctionTimer.tsx","views/FarmAuction/hooks/useReclaimAuctionBid.ts","views/FarmAuction/components/ReclaimBidCard.tsx","views/FarmAuction/components/NotWhitelistedNotice.tsx","views/FarmAuction/hooks/useCongratulateAuctionWinner.tsx","views/FarmAuction/components/CongratulationsCard.tsx","views/FarmAuction/components/AuctionCakeBurn.tsx","views/FarmAuction/index.tsx","views/FarmAuction/hooks/useCurrentFarmAuction.ts","hooks/useApproveConfirmTransaction.ts"],"names":["ButtonArrangement","StyledApproveConfirmButtonRow","styled","div","theme","mediaQueries","md","Button","UIKitButton","iconAttrs","width","color","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isApproving","isConfirming","isConfirmDisabled","onApprove","onConfirm","buttonArrangement","ROW","confirmLabel","confirmId","t","useTranslation","confirmButtonText","disabled","onClick","endIcon","undefined","isLoading","justifyContent","id","Wrapper","Flex","StyledExpandableLabelWrapper","StyledChildrenFlex","isExpanded","colors","inputSecondary","FoldableText","title","children","props","useState","setIsExpanded","flexDirection","alignItems","pb","fontWeight","expanded","sharedStyles","clipPath","clipFill","css","isDark","dark","light","background","ConcaveContainer","Box","ConvexContainer","ConvexTop","height","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","dividerFill","index","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","getPadding","ChildrenWrapper","Container","sm","lg","PageSection","svgFill","hasCurvedDivider","concaveDivider","containerProps","innerProps","differenceInMilliseconds","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","getTime","Inner","input","TabToggle","button","isActive","text","textSubtle","card","TabToggleGroup","p","differenceInSeconds","diff","Math","floor","ceil","add","dirtyDate","duration","Date","NaN","years","toInteger","months","weeks","days","hours","minutes","seconds","date","dateWithMonths","addMonths","dateWithDays","addDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","MILLISECONDS_IN_HOUR","differenceInHours","FarmAuctionContractStatus","whitelistedBidders","account","farmName","tokenAddress","quoteToken","tokens","wmatic","tokenName","projectSite","busd","map","bidderConfig","lpAddress","getLpAddress","UNKNOWN_BIDDER","getBidderInfo","matchingBidder","find","bidder","toLowerCase","Tabs","FORM_ADDRESS","sortAuctionBidders","bidders","auction","sortedBidders","sort","a","b","amount","lt","gt","bidderInfo","position","adjustedPosition","unadjustedBidders","ethersToBigNumber","samePositionAsAbove","eq","isTopPosition","topLeaderboard","leaderboardThreshold","lte","getAuctionStatus","currentBlock","startBlock","endBlock","contractStatus","Pending","Close","AuctionStatus","Closed","Finished","Open","ToBeAnnounced","getDateForBlock","block","secondsUntilStart","BSC_BLOCK_TIME","simpleRpcProvider","getBlock","timestamp","processAuctionData","auctionId","auctionResponse","processedAuctionData","leaderboard","toNumber","initialBidAmount","DEFAULT_TOKEN_DECIMAL","getBlockNumber","startDate","endDate","auctionStatus","status","auctionDuration","processBidderAuctions","bidderAuctions","auctionIds","bids","claimed","nextCursor","auctions","StyledCard","Card","InlineLink","Link","List","ul","FaqLi","li","FAQs","as","scale","mb","mr","mt","display","href","external","StyledModal","Modal","ExistingInfo","dropdown","InnerContent","PlaceBidModal","onDismiss","connectedBidder","refreshBidders","useWeb3React","useTheme","callWithGasPrice","useCallWithGasPrice","bid","setBid","isMultipleOfTen","setIsMultipleOfTen","isMoreThanInitialBidAmount","setIsMoreThanInitialBidAmount","userNotEnoughCake","setUserNotEnoughCake","errorText","setErrorText","useTokenBalance","cake","address","userCake","balance","fetchStatus","userCakeBalance","getBalanceAmount","cakePriceBusd","usePriceCakeBusd","farmAuctionContract","useFarmAuctionContract","cakeContract","useCake","toastSuccess","useToast","bidderData","isFirstBid","isZero","isInvalidFirstBid","useEffect","parseFloat","FetchStatus","SUCCESS","useApproveConfirmTransaction","onRequiresApproval","allowance","response","currentAllowance","ethers","constants","MaxUint256","onApproveSuccess","receipt","Toast","txHash","transactionHash","bidAmount","BigNumber","times","toString","onSuccess","isApproved","isConfirmed","handleApprove","handleConfirm","setPercentageValue","percentage","rounding","ROUND_FLOOR","ROUND_CEIL","valueToSet","integerValue","headerBackground","gradients","cardHeader","num","getBalanceNumber","toLocaleString","bold","small","isWarning","placeholder","value","onUserInput","currencyValue","fontSize","formatNumber","textAlign","mx","variant","SEQUENTIAL","ConnectWalletButton","ScheduleInner","radii","default","cardBorder","AuctionSchedule","locale","currentLanguage","noLiveOrPendingAuction","textTransform","numHours","year","month","day","hour","minute","CannotBidMessage","useTooltip","placement","tooltip","targetRef","tooltipVisible","ref","useWhitelistedAddresses","whitelistedAddresses","setWhitelistedAddresses","viewBidders","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","bidderAddresses","console","error","fetchWhitelistedAddresses","InputContainer","AddressRowContainer","AddressRow","isMobile","target","rel","flex","truncateHash","WhitelistedBiddersModal","searchTerm","setSearchTerm","useMatchBreakpoints","filteredBidders","filter","includes","modalContent","py","px","onChange","e","overflow","maxHeight","WhitelistedBiddersButton","useModal","onShowWhitelistedBidders","length","FooterInner","AuctionFooter","isLiveOrPendingAuction","pt","prev","AuctionDetailsCard","AuctionDetails","onPresentPlaceBid","cardTitle","notConnectedOrNotWhitelisted","isWhitelisted","whitelistedAndReadyToBid","outline","startIcon","projectName","my","getBidSection","useAuctionHistory","auctionHistory","setAuctionHistory","fetchAuction","auctionData","viewBidsPerAuction","AUCTION_BIDDERS_TO_FETCH","auctionBidders","LeaderboardContainer","GridCell","warning","LeaderboardRow","pl","pr","maximumFractionDigits","component","LinkExternal","getBscScanLink","AuctionLeaderboardTable","noBidsText","visibleBidders","setVisibleBidders","totalBidders","slice","StyledIconButton","IconButton","textDisabled","AuctionHistory","mostRecentClosedAuctionId","historyAuctionId","setHistoryAuctionId","historyAuctionIdAsInt","parseInt","isXs","isSm","isMd","isLg","isXl","isXxl","isLargerScreen","isSmallerScreen","selectedAuction","Object","values","auctionTable","Number","isNaN","handleArrowPress","type","inputMode","pattern","event","currentTarget","validity","valid","valueAsNumber","newAuctionId","AuctionProgress","progress","setProgress","slowRefresh","useRefresh","now","percentagePassed","primaryStep","StyledRibbon","AuctionRibbon","noAuctionHistory","ribbonText","AuctionLeaderboardCard","getMostRecentClosedAuctionId","latestAuctionId","latestAuctionStatus","CurrentAuctionCard","Latest","activeTab","setActiveTab","Archive","AuctionCountDown","AuctionTimer","timerUntil","isAfter","timerTitle","secondsRemaining","getTimePeriods","verticalAlign","lineHeight","initialState","currentCursor","nextAuctionToCheck","auctionToReclaim","loading","reclaimReducer","state","action","payload","useReclaimAuctionBid","useReducer","dispatch","fetchBidderAuctions","viewBidderAuctions","RECLAIM_AUCTIONS_TO_FETCH","bidderAuctionsResponse","checkIfAuctionIsClaimable","auctionToCheck","claimable","accountBidderData","StyledReclaimBidCard","ReclaimBidCard","reclaimableAuction","checkForNextReclaimableAuction","NotWhitelistedNotice","icon","maxWidth","useCongratulateAuctionWinner","currentAuction","wonAuction","setWonAuction","checkIfWonPreviousAuction","previousAuctionId","winnerAddresses","CongratulationsCard","BurnedText","Text","AuctionCakeBurn","burnedCakeAmount","setBurnedCakeAmount","burnedAmountAsUSD","totalCollected","amountAsBN","fetchBurnedCakeAmount","Balance","decimals","unit","src","alt","StyledHeader","PageHeader","Left","Right","AuctionContainer","FarmAuction","setCurrentAuction","setBidders","setConnectedBidder","useLastUpdated","lastUpdated","setLastUpdated","fastRefresh","currentAuctionId","fetchCurrentAuction","currentAuctionBidders","fetchBidders","checkAccount","whitelisted","whitelistedStatus","BIG_ZERO","getBidderData","isEqual","useCurrentFarmAuction","CAKE_BURN_BG_LIGHT","CAKE_BURN_BG_DARK","to","style","margin","minWidth","AuctionLeaderboard","approvalState","confirmState","reducer","actions","noop","handlePreApprove","useRef","toastError","current","then","result","hasApproveFailed","hasConfirmFailed","tx","wait","params"],"mappings":"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","file":"static/js/16.0ff4322a.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport enum ButtonArrangement {\n  ROW = 'row',\n  SEQUENTIAL = 'sequential',\n}\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n  buttonArrangement?: ButtonArrangement\n  confirmLabel?: string\n  confirmId?: string\n}\n\nconst StyledApproveConfirmButtonRow = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n  buttonArrangement = ButtonArrangement.ROW,\n  confirmLabel,\n  confirmId,\n}) => {\n  const { t } = useTranslation()\n  const confirmButtonText = confirmLabel ?? t('Confirm')\n\n  const ApproveConfirmRow = () => {\n    return (\n      <StyledApproveConfirmButtonRow>\n        <Box>\n          <Button\n            disabled={isApproveDisabled}\n            onClick={onApprove}\n            endIcon={isApproving ? spinnerIcon : undefined}\n            isLoading={isApproving}\n          >\n            {isApproving ? t('Enabling') : t('Enable')}\n          </Button>\n        </Box>\n        <Flex justifyContent=\"center\">\n          <ChevronRight />\n          <ChevronBottom />\n        </Flex>\n        <Box>\n          <Button\n            id={confirmId}\n            onClick={onConfirm}\n            disabled={isConfirmDisabled}\n            isLoading={isConfirming}\n            endIcon={isConfirming ? spinnerIcon : undefined}\n          >\n            {isConfirming ? t('Confirming') : confirmButtonText}\n          </Button>\n        </Box>\n      </StyledApproveConfirmButtonRow>\n    )\n  }\n\n  const ApproveConfirmSequential = () => {\n    return (\n      <>\n        {isApproveDisabled ? (\n          <Box>\n            <Button\n              id={confirmId}\n              onClick={onConfirm}\n              disabled={isConfirmDisabled}\n              isLoading={isConfirming}\n              endIcon={isConfirming ? spinnerIcon : undefined}\n            >\n              {isConfirming ? t('Confirming') : confirmButtonText}\n            </Button>\n          </Box>\n        ) : (\n          <Box>\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\n              {isApproving ? t('Enabling') : t('Enable')}\n            </Button>\n          </Box>\n        )}\n      </>\n    )\n  }\n\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\n}\n\nexport default ApproveConfirmButtons\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { ExpandableLabel, Flex, FlexProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface FoldableTextProps extends FlexProps {\n  title?: string\n}\n\nconst Wrapper = styled(Flex)`\n  cursor: pointer;\n`\n\nconst StyledExpandableLabelWrapper = styled(Flex)`\n  button {\n    align-items: center;\n    justify-content: flex-start;\n  }\n`\n\nconst StyledChildrenFlex = styled(Flex)<{ isExpanded?: boolean }>`\n  overflow: hidden;\n  height: ${({ isExpanded }) => (isExpanded ? '100%' : '0px')};\n  padding-bottom: ${({ isExpanded }) => (isExpanded ? '16px' : '0px')};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n`\n\nconst FoldableText: React.FC<FoldableTextProps> = ({ title, children, ...props }) => {\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  return (\n    <Wrapper {...props} flexDirection=\"column\" onClick={() => setIsExpanded(!isExpanded)}>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" pb=\"16px\">\n        <Text fontWeight=\"bold\">{title}</Text>\n        <StyledExpandableLabelWrapper>\n          <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n            {isExpanded ? t('Hide') : t('Details')}\n          </ExpandableLabel>\n        </StyledExpandableLabelWrapper>\n      </Flex>\n      <StyledChildrenFlex isExpanded={isExpanded} flexDirection=\"column\">\n        {children}\n      </StyledChildrenFlex>\n    </Wrapper>\n  )\n}\n\nexport default FoldableText\n","import React from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport { ClipFill } from '../types'\n\ninterface CurveProps {\n  clipFill?: ClipFill\n}\n\ninterface ContainerProps extends CurveProps {\n  clipPath: string\n}\n\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\n  width: 100%;\n  height: 20px;\n  clip-path: url(${clipPath});\n\n  background: ${() => {\n    if (theme.isDark) {\n      return clipFill?.dark || clipFill?.light || theme.colors.background\n    }\n    return clipFill?.light || theme.colors.background\n  }};\n\n  & svg {\n    display: block;\n  }\n`\n\nconst ConcaveContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\n`\n\nconst ConvexContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\n`\n\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\nimport { DividerFill, ClipFill } from './types'\n\ninterface CurvedDividerProps extends WrapperProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  dividerPosition?: 'top' | 'bottom'\n  concave?: boolean\n  clipFill?: ClipFill\n}\ninterface WrapperProps {\n  index: number\n  dividerFill?: DividerFill\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  background: ${({ theme, dividerFill }) => {\n    if (theme.isDark) {\n      return dividerFill?.dark || dividerFill?.light || 'none'\n    }\n    return dividerFill?.light || dividerFill?.dark || 'none'\n  }};\n  z-index: ${({ index }) => index};\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nconst ComponentWrapper = styled.div<WrapperProps>`\n  z-index: ${({ index }) => index + 1};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\n  index,\n  dividerPosition,\n  dividerComponent,\n  concave,\n  clipFill,\n  dividerFill,\n}) => {\n  const showConvexTop = dividerPosition === 'top' && !concave\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\n  const showConcaveTop = dividerPosition === 'top' && concave\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\n\n  const getConcaveDivider = () => {\n    return (\n      <>\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  const getConvexDivider = () => {\n    return (\n      <>\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  return (\n    <Wrapper index={index} dividerFill={dividerFill}>\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\n      {getConcaveDivider()}\n      {getConvexDivider()}\n    </Wrapper>\n  )\n}\n\nexport default CurvedDivider\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\nimport Container from 'components/Layout/Container'\nimport CurvedDivider from './CurvedDivider'\nimport { ClipFill, DividerFill } from './types'\n\ninterface PageSectionProps extends BackgroundColorProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  hasCurvedDivider?: boolean\n  dividerPosition?: 'top' | 'bottom'\n  concaveDivider?: boolean\n  containerProps?: BoxProps\n  innerProps?: BoxProps\n  clipFill?: ClipFill\n  dividerFill?: DividerFill\n}\n\ninterface BackgroundColorProps extends FlexProps {\n  index: number\n  background?: string\n  getPadding?: () => string\n}\n\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  z-index: ${({ index }) => index - 1};\n  background: ${({ background, theme }) => background || theme.colors.background};\n  padding: ${({ getPadding }) => getPadding()};\n`\n\nconst ChildrenWrapper = styled(Container)`\n  min-height: auto;\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 48px;\n    padding-bottom: 48px;\n  }\n`\n\nconst PageSection: React.FC<PageSectionProps> = ({\n  children,\n  background,\n  svgFill,\n  index = 1,\n  dividerComponent,\n  dividerPosition = 'bottom',\n  hasCurvedDivider = true,\n  concaveDivider = false,\n  clipFill,\n  dividerFill,\n  containerProps,\n  innerProps,\n  ...props\n}) => {\n  const getPadding = () => {\n    // No curved divider\n    if (!hasCurvedDivider) {\n      return '48px 0'\n    }\n    // Bottom curved divider\n    // Less bottom padding, as the divider is present there\n    if (dividerPosition === 'bottom') {\n      return '48px 0 14px'\n    }\n    // Top curved divider\n    // Less top padding, as the divider is present there\n    if (dividerPosition === 'top') {\n      return '14px 0 48px'\n    }\n    return '48px 0'\n  }\n\n  return (\n    <Box {...containerProps}>\n      {hasCurvedDivider && dividerPosition === 'top' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\n      </BackgroundColor>\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default PageSection\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import React from 'react'\nimport { Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst Wrapper = styled(Flex)`\n  overflow-x: scroll;\n  padding: 0;\n  border-radius: 24px 24px 0 0;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  scrollbar-width: none; /* Firefox */\n`\n\nconst Inner = styled(Flex)`\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.colors.input};\n  width: 100%;\n`\n\ninterface TabProps {\n  isActive?: boolean\n  onClick?: () => void\n}\n\nexport const TabToggle = styled.button<TabProps>`\n  display: inline-flex;\n  justify-content: center;\n  cursor: pointer;\n  flex: 1;\n  border: 0;\n  outline: 0;\n  padding: 16px;\n  margin: 0;\n  border-radius: 24px 24px 0 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: ${({ theme, isActive }) => (isActive ? theme.colors.text : theme.colors.textSubtle)};\n  background-color: ${({ theme, isActive }) => (isActive ? theme.card.background : theme.colors.input)};\n`\n\ninterface TabToggleGroupProps {\n  children: React.ReactElement[]\n}\n\nexport const TabToggleGroup: React.FC<TabToggleGroupProps> = ({ children }) => {\n  return (\n    <Wrapper p={['0 4px', '0 16px']}>\n      <Inner>{children}</Inner>\n    </Wrapper>\n  )\n}\n","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added       |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date; // Add weeks and days\n\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import ethers, { Contract, ContractFunction } from 'ethers'\n\nexport type MultiCallResponse<T> = T | null\n\n// Predictions\nexport type PredictionsClaimableResponse = boolean\n\nexport interface PredictionsLedgerResponse {\n  position: 0 | 1\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport type PredictionsRefundableResponse = boolean\n\nexport interface PredictionsRoundsResponse {\n  epoch: ethers.BigNumber\n  startTimestamp: ethers.BigNumber\n  lockTimestamp: ethers.BigNumber\n  closeTimestamp: ethers.BigNumber\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  lockOracleId: ethers.BigNumber\n  closeOracleId: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\n// [rounds, ledgers, count]\nexport type PredictionsGetUserRoundsResponse = [ethers.BigNumber[], PredictionsLedgerResponse[], ethers.BigNumber]\n\nexport type PredictionsGetUserRoundsLengthResponse = ethers.BigNumber\n\nexport interface PredictionsContract extends Contract {\n  claimable: ContractFunction<PredictionsClaimableResponse>\n  getUserRounds: ContractFunction<PredictionsGetUserRoundsResponse>\n  getUserRoundsLength: ContractFunction<PredictionsGetUserRoundsLengthResponse>\n  ledger: ContractFunction<PredictionsLedgerResponse>\n  refundable: ContractFunction<PredictionsRefundableResponse>\n  rounds: ContractFunction<PredictionsRoundsResponse>\n}\n\n// Chainlink Oracle\nexport type ChainLinkOracleLatestAnswerResponse = ethers.BigNumber\n\nexport interface ChainLinkOracleContract extends Contract {\n  latestAnswer: ContractFunction<ChainLinkOracleLatestAnswerResponse>\n}\n\n// Farm Auction\n\n// Note: slightly different from AuctionStatus used throughout UI\nexport enum FarmAuctionContractStatus {\n  Pending,\n  Open,\n  Close,\n}\n\nexport interface AuctionsResponse {\n  status: FarmAuctionContractStatus\n  startBlock: ethers.BigNumber\n  endBlock: ethers.BigNumber\n  initialBidAmount: ethers.BigNumber\n  leaderboard: ethers.BigNumber\n  leaderboardThreshold: ethers.BigNumber\n}\n\nexport interface BidsPerAuction {\n  account: string\n  amount: ethers.BigNumber\n}\n\nexport type ViewBidsPerAuctionResponse = [BidsPerAuction[], ethers.BigNumber]\n\n// [auctionId, bids, claimed, nextCursor]\nexport type ViewBidderAuctionsResponse = [ethers.BigNumber[], ethers.BigNumber[], boolean[], ethers.BigNumber]\n\ntype GetWhitelistedAddressesResponse = [\n  {\n    account: string\n    lpToken: string\n    token: string\n  }[],\n  ethers.BigNumber,\n]\n\ninterface AuctionsHistoryResponse {\n  totalAmount: ethers.BigNumber\n  hasClaimed: boolean\n}\n\nexport interface FarmAuctionContract extends Contract {\n  currentAuctionId: ContractFunction<ethers.BigNumber>\n  viewBidders: ContractFunction<[string[], ethers.BigNumber]>\n  totalCollected: ContractFunction<ethers.BigNumber>\n  auctions: ContractFunction<AuctionsResponse>\n  claimable: ContractFunction<boolean>\n  viewBidsPerAuction: ContractFunction<ViewBidsPerAuctionResponse>\n  viewBidderAuctions: ContractFunction<ViewBidderAuctionsResponse>\n  whitelisted: ContractFunction<boolean>\n  getWhitelistedAddresses: ContractFunction<GetWhitelistedAddressesResponse>\n  auctionsHistory: ContractFunction<AuctionsHistoryResponse>\n}\n\n// Profile contract\n// [userId, points, teamId, tokenId, collectionAddress isActive]\nexport type GetUserProfileResponse = [\n  ethers.BigNumber,\n  ethers.BigNumber,\n  ethers.BigNumber,\n  string,\n  ethers.BigNumber,\n  boolean,\n]\n\nexport interface PancakeProfileContract extends Contract {\n  getUserProfile: ContractFunction<GetUserProfileResponse>\n  hasRegistered: ContractFunction<boolean>\n}\n","import getLpAddress from 'utils/getLpAddress'\nimport tokens from './tokens'\nimport { FarmAuctionBidderConfig } from './types'\n\nexport const whitelistedBidders: FarmAuctionBidderConfig[] = [\n  {\n    account: '0x9Ed5a62535A5Dd2dB2d9bB21bAc42035Af47F630',\n    farmName: 'NAV-MATIC',\n    tokenAddress: '0xBFEf6cCFC830D3BaCA4F6766a0d4AaA242Ca9F3D',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Navcoin',\n    projectSite: 'https://navcoin.org/en',\n  },\n  {\n    account: '0x33723811B0FCa2a751f3912B80603Fe11499D894',\n    farmName: 'WSG-MATIC',\n    tokenAddress: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Wall Street Games',\n    projectSite: 'https://wsg.gg/',\n  },\n  {\n    account: '0xD1C35C3F5D9d373A3F7c0668Fbe75801886e060f',\n    farmName: 'SWIRGE-MATIC',\n    tokenAddress: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Swirge Network',\n    projectSite: 'https://swirge.com/',\n  },\n  {\n    account: '0x58092273a044D6e1d23B5095AE873F6E24E906ed',\n    farmName: 'rUSD-BUSD',\n    tokenAddress: '0x07663837218A003e66310a01596af4bf4e44623D',\n    quoteToken: tokens.busd,\n    tokenName: 'RAMP DEFI',\n    projectSite: 'https://www.rampdefi.com/',\n  },\n  {\n    account: '0xfAd3B5FeAC1aAF86B3f66D105F2fa9607164D86b',\n    farmName: 'FEED-MATIC',\n    tokenAddress: '0x67d66e8Ec1Fd25d98B3Ccd3B19B7dc4b4b7fC493',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Feeder Finance',\n    projectSite: 'https://www.feeder.finance/',\n  },\n  {\n    account: '0x6a2d41c87c3F28C2C0b466424DE8e08FC2E23eDc',\n    farmName: 'BBT-MATIC',\n    tokenAddress: '0xD48474E7444727bF500a32D5AbE01943f3A59A64',\n    quoteToken: tokens.wmatic,\n    tokenName: 'BitBook',\n    projectSite: 'https://www.bitbook.network/',\n  },\n  {\n    account: '0xAe126B90d2835c5A2D720b0687EC59f59b768183',\n    farmName: 'WOW-BUSD',\n    tokenAddress: '0x4DA996C5Fe84755C80e108cf96Fe705174c5e36A',\n    quoteToken: tokens.busd,\n    tokenName: 'WOWswap',\n    projectSite: 'https://wowswap.io/',\n  },\n  {\n    account: '0x88F0A6cb89909838d69E4E6e76eC21e2a7bdcA66',\n    farmName: 'BREW-MATIC',\n    tokenAddress: '0x790Be81C3cA0e53974bE2688cDb954732C9862e1',\n    quoteToken: tokens.wmatic,\n    tokenName: 'CafeSwap Finance',\n    projectSite: 'https://app.cafeswap.finance/',\n  },\n  {\n    account: '0x0Cf86283ad1a1B7D04669696eD13BAE3d5925a0a',\n    farmName: 'SAKE-MATIC',\n    tokenAddress: '0x8BD778B12b15416359A227F0533Ce2D91844e1eD',\n    quoteToken: tokens.wmatic,\n    tokenName: 'SakeSwap',\n    projectSite: 'https://bsc.sakeswap.finance/',\n  },\n  {\n    account: '0xCe059E8af96a654d4afe630Fa325FBF70043Ab11',\n    farmName: 'XBLZD-MATIC',\n    tokenAddress: '0x9a946c3Cb16c08334b69aE249690C236Ebd5583E',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Blizzard',\n    projectSite: 'https://www.blizzard.money/',\n  },\n  {\n    account: '0x3069270fE50c6dc9c5D1B38Ec7b767B2FE7B981D',\n    farmName: 'HERO-MATIC',\n    tokenAddress: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Metahero',\n    projectSite: 'https://metahero.io/',\n  },\n  {\n    account: '0x46D8e47b9A6487FDAB0a700b269A452cFeED49Aa',\n    farmName: 'MCRN-MATIC',\n    tokenAddress: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n    quoteToken: tokens.wmatic,\n    tokenName: 'MacaronSwap',\n    projectSite: 'https://www.macaronswap.finance/',\n  },\n  {\n    account: '0x1bA962acab22Be9e49C4cEBE7710c9201A72dFcc',\n    farmName: 'BABYCAKE-MATIC',\n    tokenAddress: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Babycake',\n    projectSite: 'https://babycake.app/',\n  },\n  {\n    account: '0xCCcC0b22799E82A79007814Dbc6A194410DCcEA5',\n    farmName: 'BMON-MATIC',\n    tokenAddress: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Binamon',\n    projectSite: 'https://binamon.org/',\n  },\n  {\n    account: '0x71eE6DE14c90700eE06C81aaBdBacD684cfe30fe',\n    farmName: 'BMON-BUSD',\n    tokenAddress: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n    quoteToken: tokens.busd,\n    tokenName: 'Binamon',\n    projectSite: 'https://binamon.org/',\n  },\n  {\n    account: '0x6cfA3ff4e96abe93a290dc3d7A911A483C194758',\n    farmName: 'ANY-MATIC',\n    tokenAddress: '0xF68C9Df95a18B2A5a5fa1124d79EEEffBaD0B6Fa',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Anyswap',\n    projectSite: 'https://anyswap.exchange/',\n  },\n  {\n    account: '0xe596470D291Cb2D32ec111afC314B07006690c72',\n    farmName: 'PHX-MATIC',\n    tokenAddress: '0xac86e5f9bA48d680516df50C72928c2ec50F3025',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Phoenix Finance',\n    projectSite: 'https://www.phoenixprotocol.net/',\n  },\n  {\n    account: '0x8f8c77987C0ea9dd2400383b623d9cbcBbAf98CF',\n    farmName: 'GMR-MATIC',\n    tokenAddress: '0x0523215DCafbF4E4aA92117d13C6985a3BeF27D7',\n    quoteToken: tokens.wmatic,\n    tokenName: 'GMR Finance',\n    projectSite: 'https://www.gmr.finance/',\n  },\n  {\n    account: '0x786B313b01A25eddbF7f7461b48D60AF680d758C',\n    farmName: 'BP-MATIC',\n    tokenAddress: '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1',\n    quoteToken: tokens.wmatic,\n    tokenName: 'BunnyPark',\n    projectSite: 'https://www.bunnypark.com/',\n  },\n  {\n    account: '0x70d7eCEE276Ad5fDFc91B3C30d2c1cDb9dD442Fb',\n    farmName: 'DPET-MATIC',\n    tokenAddress: '0xfb62AE373acA027177D1c18Ee0862817f9080d08',\n    quoteToken: tokens.wmatic,\n    tokenName: 'MyDefiPet',\n    projectSite: 'https://mydefipet.com/',\n  },\n  {\n    account: '0x8aC06b55C9812e3E574CF5A5F3b49619dF33099C',\n    farmName: 'NMX-BUSD',\n    tokenAddress: '0xd32d01A43c869EdcD1117C640fBDcfCFD97d9d65',\n    quoteToken: tokens.busd,\n    tokenName: 'Nominex',\n    projectSite: 'https://nominex.io/',\n  },\n  {\n    account: '0xd27E57Ff5dD3d78B03c85e2A2bB8dc37E67c5140',\n    farmName: 'POOLZ-MATIC',\n    tokenAddress: '0x77018282fD033DAF370337A5367E62d8811Bc885',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Poolz Finance',\n    projectSite: 'https://poolz.finance/',\n  },\n  {\n    account: '0x0767a2f9c644b364Bc88Eea5a535afE506Ba6802',\n    farmName: 'ODDZ-MATIC',\n    tokenAddress: '0xCD40F2670CF58720b694968698A5514e924F742d',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Oddz Finance',\n    projectSite: 'https://oddz.fi',\n  },\n  {\n    account: '0x2B6b2701d7F7b65BA2E1ec2d2dAa17d46B85A4fe',\n    farmName: 'UBXT-BUSD',\n    tokenAddress: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n    quoteToken: tokens.busd,\n    tokenName: 'UpBots',\n    projectSite: 'https://upbots.com/',\n  },\n  {\n    account: '0x875831249bA511a6f1E49c84D66E1A6F5601f7C6',\n    farmName: 'DND-BUSD',\n    tokenAddress: '0x14c358b573a4cE45364a3DBD84BBb4Dae87af034',\n    quoteToken: tokens.busd,\n    tokenName: 'DungeonSwap',\n    projectSite: 'https://dungeonswap.app/',\n  },\n  {\n    account: '0xb7d303BbaE2573513801C5F94aE0B61Fa5b3426F',\n    farmName: 'ZOON-MATIC',\n    tokenAddress: '0x9D173E6c594f479B4d47001F8E6A95A7aDDa42bC',\n    quoteToken: tokens.wmatic,\n    tokenName: 'CryptoZoon',\n    projectSite: 'https://cryptozoon.io/',\n  },\n  {\n    account: '0x22d56946c6cc1d4ed09f02858ddb990fcc981c55',\n    farmName: 'HGET-BUSD',\n    tokenAddress: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n    quoteToken: tokens.busd,\n    tokenName: 'Hedget',\n    projectSite: 'https://www.hedget.com/',\n  },\n  {\n    account: '0x027D50F36fe3b64630170B3ba82FC64BfC9bc088',\n    farmName: 'FAN-MATIC',\n    tokenAddress: '0xFAc3A1ED2480Da8F5c34576C0Da13F245239717d',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Fanadise',\n    projectSite: 'https://fanadise.com/',\n  },\n  {\n    account: '0x73f9eb8eB7109b171396C8cbffcb29839c8b3064',\n    farmName: 'PKMON-BUSD',\n    tokenAddress: '0x609D183Fb91a0fce59550b62ab7d2c931b0Bb1BE',\n    quoteToken: tokens.busd,\n    tokenName: 'PolkaMonster',\n    projectSite: 'https://polkamonster.game/',\n  },\n  {\n    account: '0x88Dba2cF8911A80cc50A1B392b5fF6b47B930330',\n    farmName: 'SFUND-MATIC',\n    tokenAddress: '0x477bC8d23c634C154061869478bce96BE6045D12',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Seedify',\n    projectSite: 'https://launchpad.seedify.fund/',\n  },\n  {\n    account: '0xf1dD352EF3a94F60b3047B607C2Bd976401F538c',\n    farmName: 'GNT-MATIC',\n    tokenAddress: '0xF750A26EB0aCf95556e8529E72eD530f3b60f348',\n    quoteToken: tokens.wmatic,\n    tokenName: 'GreenTrust',\n    projectSite: 'https://www.greentrusttoken.com/',\n  },\n  {\n    account: '0x3992D7D9Ed721257d8bD7501d280b857eD7F9C24',\n    farmName: 'TT-BUSD',\n    tokenAddress: '0x990E7154bB999FAa9b2fa5Ed29E822703311eA85',\n    quoteToken: tokens.busd,\n    tokenName: 'ThunderCore',\n    projectSite: 'https://www.thundercore.com/',\n  },\n  {\n    account: '0x2Ef317299888DD4a4F57FFf99FF2685D544fEAf1',\n    farmName: 'TT-MATIC',\n    tokenAddress: '0x990E7154bB999FAa9b2fa5Ed29E822703311eA85',\n    quoteToken: tokens.wmatic,\n    tokenName: 'ThunderCore',\n    projectSite: 'https://www.thundercore.com/',\n  },\n  {\n    account: '0xB9a32da7F33731FfDa8e7ecCB91325eee8A524AC',\n    farmName: 'SMG-MATIC',\n    tokenAddress: '0x6bfd576220e8444CA4Cc5f89Efbd7f02a4C94C16',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Smaugs NFT',\n    projectSite: 'https://smaugs.com',\n  },\n  {\n    account: '0x5ed6B80F0e8b1c7fdB783202d4a926BbED2d49ee',\n    farmName: 'TENFI-MATIC',\n    tokenAddress: '0xd15C444F1199Ae72795eba15E8C1db44E47abF62',\n    quoteToken: tokens.wmatic,\n    tokenName: 'TEN Finance',\n    projectSite: 'https://ten.finance/',\n  },\n  {\n    account: '0x75015B56dA228A5367d313866f6520495344C65c',\n    farmName: 'BNX-BUSD',\n    tokenAddress: '0x8C851d1a123Ff703BD1f9dabe631b69902Df5f97',\n    quoteToken: tokens.busd,\n    tokenName: 'BinaryX',\n    projectSite: 'https://www.binaryx.pro/#/',\n  },\n  {\n    account: '0xCbD932aC66f645a3764733aACD30Ce50e522Fac1',\n    farmName: 'DVI-MATIC',\n    tokenAddress: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Dvision',\n    projectSite: 'https://dvision.network/',\n  },\n  {\n    account: '0xeA96c1970b9E3d4258620F68Af95ddDEB5fbD68F',\n    farmName: 'SALE-MATIC',\n    tokenAddress: '0x97bb08ba41f033beaac315169fc566ac9e0daf52',\n    quoteToken: tokens.wmatic,\n    tokenName: 'DxSale Network',\n    projectSite: 'https://dxsale.app',\n  },\n  {\n    account: '0xaDB2d11817Cd16595E4454aD03F95575c3B388f2',\n    farmName: 'MONI-MATIC',\n    tokenAddress: '0x9573c88ae3e37508f87649f87c4dd5373c9f31e0',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Monsta Infinite',\n    projectSite: 'https://monstainfinite.com/',\n  },\n  {\n    account: '0xDa6e741A7f7d4d88d4210340069348704FDf21bf',\n    farmName: 'PROS-MATIC',\n    tokenAddress: '0xed8c8aa8299c10f067496bb66f8cc7fb338a3405',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Prosper',\n    projectSite: 'https://prosper.so/',\n  },\n  {\n    account: '0xB651A851819638Cb120A46Db0E01Fa89006eE290',\n    farmName: 'CART-MATIC',\n    tokenAddress: '0x5c8c8d560048f34e5f7f8ad71f2f81a89dbd273e',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Cryptoart.ai',\n    projectSite: 'https://cryptoart.ai/',\n  },\n  {\n    account: '0x73a4C2d21282dd9f9f2DF2aD3e06fd25aB487C9c',\n    farmName: 'XWIN-MATIC',\n    tokenAddress: '0xd88ca08d8eec1E9E09562213Ae83A7853ebB5d28',\n    quoteToken: tokens.wmatic,\n    tokenName: 'xWIN Finance',\n    projectSite: 'https://xwin.finance/',\n  },\n  {\n    account: '0x7Db4456a73a9C94a381d244E9dfC76E83C05913E',\n    farmName: 'SWAPP-MATIC',\n    tokenAddress: '0x0efe961c733ff46ce34c56a73eba0c6a0e18e0f5',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Swapp Protocol',\n    projectSite: 'https://swapp.ee',\n  },\n  {\n    account: '0xB93A33f4cA46c1E1D65387313706cB8728B75703',\n    farmName: 'AIRT-MATIC',\n    tokenAddress: '0x016cf83732f1468150d87dcc5bdf67730b3934d3',\n    quoteToken: tokens.wmatic,\n    tokenName: 'AirNFTs',\n    projectSite: 'https://airnfts.com/',\n  },\n  {\n    account: '0x377056416332d017D2c2d140A097Ba8c2872bb60',\n    farmName: 'XMS-MATIC',\n    tokenAddress: '0x7859b01bbf675d67da8cd128a50d155cd881b576',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Mars Ecosystem',\n    projectSite: 'https://marsecosystem.com/',\n  },\n  {\n    account: '0x6ff9B88eb94A976b0e1Db7713d8D765B8bE437a7',\n    farmName: 'LIGHT-MATIC',\n    tokenAddress: '0x037838b556d9c9d654148a284682C55bB5f56eF4',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Lightning',\n    projectSite: 'https://lightningprotocol.finance/',\n  },\n  {\n    account: '0x235540Bd639308E51Efa89AbF2A9AF8bC1DEc877',\n    farmName: 'GENS-BUSD',\n    tokenAddress: '0x2CD14cbA3F26254beeD1d78158cd2B6F91809600',\n    quoteToken: tokens.busd,\n    tokenName: 'Genshiro',\n    projectSite: 'https://genshiro.equilibrium.io/en',\n  },\n  {\n    account: '0xc55A7183F6D060271010A4441c106f6a81D46E34',\n    farmName: 'WSPP-MATIC',\n    tokenAddress: '0x46d502fac9aea7c5bc7b13c8ec9d02378c33d36f',\n    quoteToken: tokens.wmatic,\n    tokenName: 'WolfSafePoorPeople',\n    projectSite: 'https://wolfsafepoorpeople.com',\n  },\n  {\n    account: '0xC1d204015268CD808B765f024e04CE01d5Bff58D',\n    farmName: 'SHEESHA-MATIC',\n    tokenAddress: '0x232fb065d9d24c34708eedbf03724f2e95abe768',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Sheesha Finance',\n    projectSite: 'https://sheeshafinance.io',\n  },\n  {\n    account: '0xb2bef43cb487bFc89770e2e88C23f6a2163133EE',\n    farmName: 'BSCS-MATIC',\n    tokenAddress: '0xbcb24afb019be7e93ea9c43b7e22bb55d5b7f45d',\n    quoteToken: tokens.wmatic,\n    tokenName: 'BSCStation',\n    projectSite: 'https://bscstation.finance/',\n  },\n  {\n    account: '0x47e947F01A17F8004D486fC7E37222B205a4c20b',\n    farmName: 'ARV-MATIC',\n    tokenAddress: '0x6679eB24F59dFe111864AEc72B443d1Da666B360',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Ariva',\n    projectSite: 'https://ariva.digital/',\n  },\n  {\n    account: '0x8595c4Ad15D51c5Bf920c249869Ec5b3250c2D4d',\n    farmName: 'ULTI-MATIC',\n    tokenAddress: '0x42BFE4A3E023f2C90aEBFfbd9B667599Fa38514F',\n    quoteToken: tokens.wmatic,\n    tokenName: 'ULTI Arena',\n    projectSite: 'https://ultiarena.com',\n  },\n  {\n    account: '0x1723D77Afde343323b769271a83d5Aecada25e01',\n    farmName: 'ZOO-BUSD',\n    tokenAddress: '0x1D229B958D5DDFca92146585a8711aECbE56F095',\n    quoteToken: tokens.busd,\n    tokenName: 'ZOO Crypto World',\n    projectSite: 'https://zoogame.finance/',\n  },\n  {\n    account: '0x8b519cD36b6a3179a4C560FcE987203E33df0366',\n    farmName: 'HERA-MATIC',\n    tokenAddress: '0x49c7295ff86eabf5bf58c6ebc858db4805738c01',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Hero Arena',\n    projectSite: 'https://heroarena.app/',\n  },\n  {\n    account: '0xaCc34268f5D7Cb9B11BfB1ba4D8bD2bc2B49EE4E',\n    farmName: 'DPS-MATIC',\n    tokenAddress: '0xf275e1AC303a4C9D987a2c48b8E555A77FeC3F1C',\n    quoteToken: tokens.wmatic,\n    tokenName: 'DEEPSPACE',\n    projectSite: 'https://deepspace.game',\n  },\n  {\n    account: '0x050F559cD756cA09FC46988B6cf19ebF01256268',\n    farmName: 'BCOIN-BUSD',\n    tokenAddress: '0x00e1656e45f18ec6747F5a8496Fd39B50b38396D',\n    quoteToken: tokens.busd,\n    tokenName: 'Bomb Crypto',\n    projectSite: 'https://bombcrypto.io/',\n  },\n  {\n    account: '0x6524b3B11979D5b5c354D5A804be9711d767f38F',\n    farmName: 'XEUS-BUSD',\n    tokenAddress: '0x4E141769366634D9c4e498257Fa7EC204d22b634',\n    quoteToken: tokens.busd,\n    tokenName: 'XEUS',\n    projectSite: 'https://xeus.finance/',\n  },\n  {\n    account: '0x1Aa800bE7e9829DDF97C54EF750F5E42C2a6a884',\n    farmName: 'SHARPEI-MATIC',\n    tokenAddress: '0xfE3AF7376e412a377358d5894C790bB3e00D0dc1',\n    quoteToken: tokens.wmatic,\n    tokenName: 'Shar Pei',\n    projectSite: 'https://sharpeitoken.io/',\n  },\n  {\n    account: '0x2c32E56756964aCdB650521c1F10bdb939D5Ff7B',\n    farmName: 'PID-BUSD',\n    tokenAddress: '0x1215Ed20aa507578ca352E195016F289e7A17f3A',\n    quoteToken: tokens.busd,\n    tokenName: 'PIDAO',\n    projectSite: 'https://www.pidao.finance/',\n  },\n  {\n    account: '0x4AD72A0841808b431525de29a7781d948675bAC7',\n    farmName: 'HTD-BUSD',\n    tokenAddress: '0x5E2689412Fae5c29BD575fbe1d5C1CD1e0622A8f',\n    quoteToken: tokens.busd,\n    tokenName: 'HeroesTD',\n    projectSite: 'https://heroestd.io/',\n  },\n  {\n    account: '0xFfD8457466bAa1f11Bb585c7fD772Ad1A8b82b64',\n    farmName: 'GMEE-MATIC',\n    tokenAddress: '0x84e9a6F9D240FdD33801f7135908BfA16866939A',\n    quoteToken: tokens.wmatic,\n    tokenName: 'GAMEE',\n    projectSite: 'https://token.gamee.com/',\n  },\n  {\n    account: '0x820E53c3198dB5904938Bec31B3Ec3864a754c31',\n    farmName: 'ANTEX-BUSD',\n    tokenAddress: '0xCA1aCAB14e85F30996aC83c64fF93Ded7586977C',\n    quoteToken: tokens.busd,\n    tokenName: 'Antex',\n    projectSite: 'https://antex.org/',\n  },\n  {\n    account: '0x5905A1F7BAf19844874B8B16E5FC4cde639b7a32',\n    farmName: 'SIP-BUSD',\n    tokenAddress: '0x9e5965d28E8D44CAE8F9b809396E0931F9Df71CA',\n    quoteToken: tokens.busd,\n    tokenName: 'Space Sip',\n    projectSite: 'https://sip.space/',\n  },\n].map((bidderConfig) => ({\n  ...bidderConfig,\n  lpAddress: getLpAddress(bidderConfig.tokenAddress, bidderConfig.quoteToken),\n}))\n\nconst UNKNOWN_BIDDER: FarmAuctionBidderConfig = {\n  account: '',\n  tokenAddress: '',\n  quoteToken: tokens.wmatic,\n  farmName: 'Unknown',\n  tokenName: 'Unknown',\n}\n\nexport const getBidderInfo = (account: string): FarmAuctionBidderConfig => {\n  const matchingBidder = whitelistedBidders.find((bidder) => bidder.account.toLowerCase() === account.toLowerCase())\n  if (matchingBidder) {\n    return matchingBidder\n  }\n  return { ...UNKNOWN_BIDDER, account }\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Card, Flex, Box, Spinner } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus, Bidder } from 'config/constants/types'\nimport { TabToggleGroup, TabToggle } from 'components/TabToggle'\nimport AuctionHistory from '../AuctionHistory'\nimport AuctionProgress from './AuctionProgress'\nimport AuctionRibbon from './AuctionRibbon'\nimport AuctionLeaderboardTable from './AuctionLeaderboardTable'\n\nconst AuctionLeaderboardCard = styled(Card)`\n  width: 100%;\n  flex: 2;\n`\n\ninterface AuctionLeaderboardProps {\n  auction: Auction\n  bidders: Bidder[]\n}\n\nenum Tabs {\n  Latest,\n  Archive,\n}\n\nconst getMostRecentClosedAuctionId = (latestAuctionId: number, latestAuctionStatus: AuctionStatus) => {\n  if (latestAuctionStatus === AuctionStatus.Closed) {\n    return latestAuctionId\n  }\n  if (latestAuctionId === 0) {\n    return null\n  }\n  return latestAuctionId - 1\n}\n\nconst CurrentAuctionCard: React.FC<AuctionLeaderboardProps> = ({ auction, bidders }) => {\n  const { t } = useTranslation()\n  const [activeTab, setActiveTab] = useState(Tabs.Latest)\n\n  if (!auction || !bidders) {\n    return (\n      <AuctionLeaderboardCard>\n        <TabToggleGroup>\n          <TabToggle isActive={activeTab === Tabs.Latest} onClick={() => setActiveTab(Tabs.Latest)}>\n            {t('Latest')}\n          </TabToggle>\n          <TabToggle isActive={activeTab === Tabs.Archive} onClick={() => setActiveTab(Tabs.Archive)}>\n            {t('Archive')}\n          </TabToggle>\n        </TabToggleGroup>\n        <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" height=\"320px\">\n          <Spinner />\n        </Flex>\n      </AuctionLeaderboardCard>\n    )\n  }\n  const { id, status } = auction\n\n  return (\n    <AuctionLeaderboardCard>\n      <TabToggleGroup>\n        <TabToggle isActive={activeTab === Tabs.Latest} onClick={() => setActiveTab(Tabs.Latest)}>\n          {t('Latest')}\n        </TabToggle>\n        <TabToggle isActive={activeTab === Tabs.Archive} onClick={() => setActiveTab(Tabs.Archive)}>\n          {t('Archive')}\n        </TabToggle>\n      </TabToggleGroup>\n      {activeTab === Tabs.Latest ? (\n        <Box position=\"relative\">\n          <Text bold fontSize=\"20px\" py=\"24px\" px={['12px', '24px']}>\n            {t('Auction #%auctionId%', { auctionId: id })}\n          </Text>\n          <AuctionRibbon auction={auction} noAuctionHistory={getMostRecentClosedAuctionId(id, status) === null} />\n          <AuctionProgress auction={auction} />\n          <AuctionLeaderboardTable bidders={bidders} noBidsText={t('No bids yet')} />\n        </Box>\n      ) : (\n        <AuctionHistory mostRecentClosedAuctionId={getMostRecentClosedAuctionId(id, status)} />\n      )}\n    </AuctionLeaderboardCard>\n  )\n}\n\nexport default CurrentAuctionCard\n","import { toDate, add, differenceInHours } from 'date-fns'\nimport { BSC_BLOCK_TIME, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { getBidderInfo } from 'config/constants/farmAuctions'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { AuctionsResponse, FarmAuctionContractStatus, BidsPerAuction, ViewBidderAuctionsResponse } from 'utils/types'\nimport { Auction, AuctionStatus, Bidder, BidderAuction } from 'config/constants/types'\nimport { ethersToBigNumber } from 'utils/bigNumber'\n\nexport const FORM_ADDRESS =\n  'https://docs.google.com/forms/d/e/1FAIpQLScUkwbsMWwg7L5jjGjEcmv6RsoCNhFDkV3xEpRu2KcJrr47Sw/viewform'\n\n// Sorts bidders received from smart contract by bid amount in descending order (biggest -> smallest)\n// Also amends bidder information with getBidderInfo\n// auction is required if data will be used for table display, hence in reclaim and congratulations card its omitted\nexport const sortAuctionBidders = (bidders: BidsPerAuction[], auction?: Auction): Bidder[] => {\n  const sortedBidders = [...bidders]\n    .sort((a, b) => {\n      if (a.amount.lt(b.amount)) {\n        return 1\n      }\n      if (a.amount.gt(b.amount)) {\n        return -1\n      }\n      return 0\n    })\n    .map((bidder, index) => {\n      const bidderInfo = getBidderInfo(bidder.account)\n      return {\n        ...bidderInfo,\n        position: index + 1,\n        account: bidder.account,\n        amount: bidder.amount,\n      }\n    })\n\n  // Positions need to be adjusted in case 2 bidders has the same bid amount\n  // adjustedPosition will always increase by 1 in the following block for the first bidder\n  let adjustedPosition = 0\n\n  return sortedBidders.map((bidder, index, unadjustedBidders) => {\n    const amount = ethersToBigNumber(bidder.amount)\n    const samePositionAsAbove = index === 0 ? false : bidder.amount.eq(unadjustedBidders[index - 1].amount)\n    adjustedPosition = samePositionAsAbove ? adjustedPosition : adjustedPosition + 1\n    // Reclaim and congratulations card don't need auction data or isTopPosition\n    // in this case it is set to false just to avoid TS errors\n    let isTopPosition = auction ? index + 1 <= auction.topLeaderboard : false\n    // This is here in case we closed auction with less/more winners for some reason\n    if (auction && auction.leaderboardThreshold.gt(0)) {\n      isTopPosition = auction.leaderboardThreshold.lte(amount)\n    }\n    return {\n      ...bidder,\n      position: adjustedPosition,\n      isTopPosition,\n      samePositionAsAbove,\n      amount,\n    }\n  })\n}\n\n// Determine if the auction is:\n// - Live and biddable\n// - Has been scheduled for specific future date\n// - Not announced yet\n// - Recently Finished/Closed\nconst getAuctionStatus = (\n  currentBlock: number,\n  startBlock: number,\n  endBlock: number,\n  contractStatus: FarmAuctionContractStatus,\n) => {\n  if (contractStatus === FarmAuctionContractStatus.Pending && !startBlock && !endBlock) {\n    return AuctionStatus.ToBeAnnounced\n  }\n  if (contractStatus === FarmAuctionContractStatus.Close) {\n    return AuctionStatus.Closed\n  }\n  if (currentBlock >= endBlock) {\n    return AuctionStatus.Finished\n  }\n  if (contractStatus === FarmAuctionContractStatus.Open && currentBlock < startBlock) {\n    return AuctionStatus.Pending\n  }\n  if (contractStatus === FarmAuctionContractStatus.Open && currentBlock > startBlock) {\n    return AuctionStatus.Open\n  }\n  return AuctionStatus.ToBeAnnounced\n}\n\nconst getDateForBlock = async (currentBlock: number, block: number) => {\n  const blocksUntilBlock = block - currentBlock\n  const secondsUntilStart = blocksUntilBlock * BSC_BLOCK_TIME\n  // if block already happened we can get timestamp via .getBlock(block)\n  if (currentBlock > block) {\n    try {\n      const { timestamp } = await simpleRpcProvider.getBlock(block)\n      return toDate(timestamp * 1000)\n    } catch {\n      add(new Date(), { seconds: secondsUntilStart })\n    }\n  }\n  return add(new Date(), { seconds: secondsUntilStart })\n}\n\n// Get additional auction information based on the date received from smart contract\nexport const processAuctionData = async (auctionId: number, auctionResponse: AuctionsResponse): Promise<Auction> => {\n  const processedAuctionData = {\n    ...auctionResponse,\n    topLeaderboard: auctionResponse.leaderboard.toNumber(),\n    initialBidAmount: ethersToBigNumber(auctionResponse.initialBidAmount).div(DEFAULT_TOKEN_DECIMAL).toNumber(),\n    leaderboardThreshold: ethersToBigNumber(auctionResponse.leaderboardThreshold),\n    startBlock: auctionResponse.startBlock.toNumber(),\n    endBlock: auctionResponse.endBlock.toNumber(),\n  }\n\n  // Get all required data and blocks\n  const currentBlock = await simpleRpcProvider.getBlockNumber()\n  const startDate = await getDateForBlock(currentBlock, processedAuctionData.startBlock)\n  const endDate = await getDateForBlock(currentBlock, processedAuctionData.endBlock)\n\n  const auctionStatus = getAuctionStatus(\n    currentBlock,\n    processedAuctionData.startBlock,\n    processedAuctionData.endBlock,\n    processedAuctionData.status,\n  )\n\n  return {\n    id: auctionId,\n    startDate,\n    endDate,\n    auctionDuration: differenceInHours(endDate, startDate),\n    ...processedAuctionData,\n    status: auctionStatus,\n  }\n}\n\nexport const processBidderAuctions = (\n  bidderAuctions: ViewBidderAuctionsResponse,\n): { auctions: BidderAuction[]; nextCursor: number } => {\n  const [auctionIds, bids, claimed, nextCursor] = bidderAuctions\n  const auctions = auctionIds.map((auctionId, index) => ({\n    id: auctionId.toNumber(),\n    amount: ethersToBigNumber(bids[index]),\n    claimed: claimed[index],\n  }))\n  return { auctions, nextCursor: nextCursor.toNumber() }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Card, CardHeader, CardBody, Flex, Link, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport FoldableText from 'components/FoldableSection/FoldableText'\nimport { FORM_ADDRESS } from '../helpers'\n\nconst StyledCard = styled(Card)`\n  flex: 1;\n  height: fit-content;\n`\n\nconst InlineLink = styled(Link)`\n  display: inline;\n`\n\nconst List = styled.ul`\n  list-style-position: outside;\n  padding: 0 24px;\n\n  li {\n    line-height: 1.5;\n    margin-bottom: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n  }\n`\n\nconst FaqLi = styled.li`\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n\nconst FAQs = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Heading as=\"h1\" scale=\"xxl\" mb=\"40px\">\n        {t('FAQs')}\n      </Heading>\n      <Flex flexDirection={['column', null, null, null, 'row']}>\n        <StyledCard mr={[null, null, null, null, '24px']} mb={['24px', null, null, null, '0']}>\n          <CardHeader>\n            <Heading>{t('How does it work?')}</Heading>\n          </CardHeader>\n          <CardBody p=\"0 24px 24px\">\n            <FoldableText title={t('Step 1: Submit application')} mt=\"24px\">\n              <Box display=\"inline\">\n                <Text display=\"inline\" color=\"textSubtle\">\n                  {t('Projects can submit an application to sponsor a yield farm and/or pool on Metaprofitsdao via the ')}\n                </Text>\n                <InlineLink href={FORM_ADDRESS} external>\n                  {t('Application Form')}\n                </InlineLink>\n              </Box>\n            </FoldableText>\n            <FoldableText title={t('Step 2: Await whitelisting')} mt=\"24px\">\n              <Box color=\"textSubtle\">\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('The Metaprofitsdao team will try to respond within a week.')}\n                </Text>\n                <List>\n                  <FaqLi>\n                    {t(\n                      'Community Farm qualifiers will be asked to provide the address of the wallet which you’ll use for bidding MByte in the auction.',\n                    )}\n                  </FaqLi>\n                  <FaqLi>{t('Core Farm/Pool qualifiers will receive further directions separately.')}</FaqLi>\n                </List>\n              </Box>\n            </FoldableText>\n            <FoldableText title={t('Step 3: During the auction')} mt=\"24px\">\n              <Text color=\"textSubtle\">\n                {t(\n                  'During the auction period, if you connect your project’s whitelisted wallet to the Auction page, you’ll see a “Place Bid” button during when the auction is live.',\n                )}\n              </Text>\n              <Text color=\"textSubtle\">\n                {t(\n                  'You can then commit MByte to bid during the auction, competing against other project for one of the available farms.',\n                )}\n              </Text>\n            </FoldableText>\n            <FoldableText title={t('Step 4: After the auction')} mt=\"24px\">\n              <Text color=\"textSubtle\">\n                {t('If your bid was not successful, you can reclaim your MByte on this page.')}\n              </Text>\n              <Text color=\"textSubtle\">\n                {t(\n                  'If your bid was successful, your farm will begin at the specified time. The MByte you bid will not be returned to you and will be added to our weekly MByte burn.',\n                )}\n              </Text>\n              <Text color=\"textSubtle\">\n                {t('So long as you are whitelisted, you’ll be able to participate in each new auction.')}\n              </Text>\n              <Text color=\"textSubtle\">\n                {t(\n                  'If two or more projects bid the exact same MByte amount and are contending for a spot in the winning bidders, their bids may be invalidated.',\n                )}\n              </Text>\n            </FoldableText>\n          </CardBody>\n        </StyledCard>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default FAQs\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { Modal, Text, Flex, BalanceInput, Box, Button, PancakeRoundIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { formatNumber, getBalanceAmount, getBalanceNumber } from 'utils/formatBalance'\nimport { ethersToBigNumber } from 'utils/bigNumber'\nimport useTheme from 'hooks/useTheme'\nimport useTokenBalance, { FetchStatus } from 'hooks/useTokenBalance'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useFarmAuctionContract } from 'hooks/useContract'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport useToast from 'hooks/useToast'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport ApproveConfirmButtons, { ButtonArrangement } from 'components/ApproveConfirmButtons'\nimport { ConnectedBidder } from 'config/constants/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport tokens from 'config/constants/tokens'\n\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n  & > div:nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ExistingInfo = styled(Box)`\n  padding: 24px;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst InnerContent = styled(Box)`\n  padding: 24px;\n`\n\ninterface PlaceBidModalProps {\n  onDismiss?: () => void\n  // undefined initialBidAmount is passed only if auction is not loaded\n  // in this case modal will not be possible to open\n  initialBidAmount?: number\n  connectedBidder: ConnectedBidder\n  refreshBidders: () => void\n}\n\nconst PlaceBidModal: React.FC<PlaceBidModalProps> = ({\n  onDismiss,\n  initialBidAmount,\n  connectedBidder,\n  refreshBidders,\n}) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const [bid, setBid] = useState('')\n  const [isMultipleOfTen, setIsMultipleOfTen] = useState(false)\n  const [isMoreThanInitialBidAmount, setIsMoreThanInitialBidAmount] = useState(false)\n  const [userNotEnoughCake, setUserNotEnoughCake] = useState(false)\n  const [errorText, setErrorText] = useState(null)\n\n  const { balance: userCake, fetchStatus } = useTokenBalance(tokens.cake.address)\n  const userCakeBalance = getBalanceAmount(userCake)\n\n  const cakePriceBusd = usePriceCakeBusd()\n  const farmAuctionContract = useFarmAuctionContract()\n  const cakeContract = useCake()\n\n  const { toastSuccess } = useToast()\n\n  const { bidderData } = connectedBidder\n  const { amount, position } = bidderData\n  const isFirstBid = amount.isZero()\n  const isInvalidFirstBid = isFirstBid && !isMoreThanInitialBidAmount\n\n  useEffect(() => {\n    setIsMoreThanInitialBidAmount(parseFloat(bid) >= initialBidAmount)\n    setIsMultipleOfTen(parseFloat(bid) % 10 === 0 && parseFloat(bid) !== 0)\n    if (fetchStatus === FetchStatus.SUCCESS && userCakeBalance.lt(bid)) {\n      setUserNotEnoughCake(true)\n    } else {\n      setUserNotEnoughCake(false)\n    }\n  }, [bid, initialBidAmount, fetchStatus, userCakeBalance])\n\n  useEffect(() => {\n    if (userNotEnoughCake) {\n      setErrorText(t('Insufficient MByte balance'))\n    } else if (!isMoreThanInitialBidAmount && isFirstBid) {\n      setErrorText(t('First bid must be %initialBidAmount% MByte or more.', { initialBidAmount }))\n    } else if (!isMultipleOfTen) {\n      setErrorText(t('Bid must be a multiple of 10'))\n    } else {\n      setErrorText(null)\n    }\n  }, [isMultipleOfTen, isMoreThanInitialBidAmount, userNotEnoughCake, initialBidAmount, t, isFirstBid])\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        try {\n          const response = await cakeContract.allowance(account, farmAuctionContract.address)\n          const currentAllowance = ethersToBigNumber(response)\n          return currentAllowance.gt(0)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return callWithGasPrice(cakeContract, 'approve', [farmAuctionContract.address, ethers.constants.MaxUint256])\n      },\n      onApproveSuccess: async ({ receipt }) => {\n        toastSuccess(\n          t('Contract approved - you can now place your bid!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash} />,\n        )\n      },\n      onConfirm: () => {\n        const bidAmount = new BigNumber(bid).times(DEFAULT_TOKEN_DECIMAL).toString()\n        return callWithGasPrice(farmAuctionContract, 'bid', [bidAmount])\n      },\n      onSuccess: async ({ receipt }) => {\n        refreshBidders()\n        onDismiss()\n        toastSuccess(t('Bid placed!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      },\n    })\n\n  const handleInputChange = (input: string) => {\n    setBid(input)\n  }\n\n  const setPercentageValue = (percentage: number) => {\n    const rounding = percentage === 1 ? BigNumber.ROUND_FLOOR : BigNumber.ROUND_CEIL\n    const valueToSet = getBalanceAmount(userCake.times(percentage)).div(10).integerValue(rounding).times(10)\n    setBid(valueToSet.toString())\n  }\n  return (\n    <StyledModal title={t('Place a Bid')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      <ExistingInfo>\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Your existing bid')}</Text>\n          <Text>{t('%num% MByte', { num: getBalanceNumber(amount).toLocaleString() })}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Your position')}</Text>\n          <Text>{position ? `#${position}` : '-'}</Text>\n        </Flex>\n      </ExistingInfo>\n      <InnerContent>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" pb=\"8px\">\n          <Text>{t('Bid a multiple of 10')}</Text>\n          <Flex>\n            <PancakeRoundIcon width=\"24px\" height=\"24px\" mr=\"4px\" />\n            <Text bold>MByte</Text>\n          </Flex>\n        </Flex>\n        {isFirstBid && (\n          <Text pb=\"8px\" small>\n            {t('First bid must be %initialBidAmount% MByte or more.', { initialBidAmount })}\n          </Text>\n        )}\n        <BalanceInput\n          isWarning={!isMultipleOfTen || isInvalidFirstBid}\n          placeholder=\"0\"\n          value={bid}\n          onUserInput={handleInputChange}\n          currencyValue={\n            cakePriceBusd.gt(0) &&\n            `~${bid ? cakePriceBusd.times(new BigNumber(bid)).toNumber().toLocaleString() : '0.00'} USD`\n          }\n        />\n        <Flex justifyContent=\"flex-end\" mt=\"8px\">\n          <Text fontSize=\"12px\" color=\"textSubtle\" mr=\"8px\">\n            {t('Balance')}:\n          </Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {formatNumber(userCakeBalance.toNumber(), 3, 3)}\n          </Text>\n        </Flex>\n        {errorText && (\n          <Text color=\"failure\" textAlign=\"right\" fontSize=\"12px\">\n            {errorText}\n          </Text>\n        )}\n        <Flex justifyContent=\"space-between\" mt=\"8px\" mb=\"24px\">\n          <Button\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\n            scale=\"xs\"\n            mx=\"2px\"\n            p=\"4px 16px\"\n            variant=\"tertiary\"\n            onClick={() => setPercentageValue(0.25)}\n          >\n            25%\n          </Button>\n          <Button\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\n            scale=\"xs\"\n            mx=\"2px\"\n            p=\"4px 16px\"\n            variant=\"tertiary\"\n            onClick={() => setPercentageValue(0.5)}\n          >\n            50%\n          </Button>\n          <Button\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\n            scale=\"xs\"\n            mx=\"2px\"\n            p=\"4px 16px\"\n            variant=\"tertiary\"\n            onClick={() => setPercentageValue(0.75)}\n          >\n            75%\n          </Button>\n          <Button\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\n            scale=\"xs\"\n            mx=\"2px\"\n            p=\"4px 16px\"\n            variant=\"tertiary\"\n            onClick={() => setPercentageValue(1)}\n          >\n            MAX\n          </Button>\n        </Flex>\n        <Flex flexDirection=\"column\">\n          {account ? (\n            <ApproveConfirmButtons\n              isApproveDisabled={isApproved}\n              isApproving={isApproving}\n              isConfirmDisabled={\n                !isMultipleOfTen ||\n                getBalanceAmount(userCake).lt(bid) ||\n                isConfirmed ||\n                isInvalidFirstBid ||\n                userNotEnoughCake\n              }\n              isConfirming={isConfirming}\n              onApprove={handleApprove}\n              onConfirm={handleConfirm}\n              buttonArrangement={ButtonArrangement.SEQUENTIAL}\n            />\n          ) : (\n            <ConnectWalletButton />\n          )}\n        </Flex>\n        <Text color=\"textSubtle\" small mt=\"24px\">\n          {t('If your bid is unsuccessful, you’ll be able to reclaim your MByte after the auction.')}\n        </Text>\n      </InnerContent>\n    </StyledModal>\n  )\n}\n\nexport default PlaceBidModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Box } from '@pancakeswap/uikit'\nimport { Auction, AuctionStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ScheduleInner = styled(Flex)`\n  flex-direction: column;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background-color: ${({ theme }) => theme.colors.background};\n  border: 1px ${({ theme }) => theme.colors.cardBorder} solid;\n`\n\ninterface ScheduleProps {\n  auction: Auction\n  showForClosedAuction?: boolean\n}\n\nconst AuctionSchedule: React.FC<ScheduleProps> = ({ auction }) => {\n  const { startBlock, endBlock, auctionDuration, startDate, endDate, status } = auction\n  const {\n    t,\n    currentLanguage: { locale },\n  } = useTranslation()\n\n  const noLiveOrPendingAuction = status === AuctionStatus.ToBeAnnounced || status === AuctionStatus.Closed\n\n  return (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"8px\">\n        {t('Auction Schedule')}\n      </Text>\n      <ScheduleInner>\n        {!noLiveOrPendingAuction && (\n          <Flex justifyContent=\"space-between\" mb=\"8px\">\n            <Text small color=\"textSubtle\">\n              {t('Auction duration')}\n            </Text>\n            <Text small>{t('%numHours% hours', { numHours: `~${auctionDuration.toString()}` })}</Text>\n          </Flex>\n        )}\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text small color=\"textSubtle\">\n            {t('Start')}\n          </Text>\n          {noLiveOrPendingAuction ? (\n            <Text small>{t('To be announced')}</Text>\n          ) : (\n            <Box>\n              <Text small>\n                {startDate.toLocaleString(locale, {\n                  year: 'numeric',\n                  month: 'long',\n                  day: '2-digit',\n                  hour: '2-digit',\n                  minute: '2-digit',\n                })}\n              </Text>\n              <Text small textAlign=\"right\">\n                {t('Block %num%', { num: startBlock })}\n              </Text>\n            </Box>\n          )}\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text small color=\"textSubtle\">\n            {t('End')}\n          </Text>\n          {noLiveOrPendingAuction ? (\n            <Text small>{t('To be announced')}</Text>\n          ) : (\n            <Box>\n              <Text small>\n                {endDate.toLocaleString(locale, {\n                  year: 'numeric',\n                  month: 'long',\n                  day: '2-digit',\n                  hour: '2-digit',\n                  minute: '2-digit',\n                })}\n              </Text>\n              <Text small textAlign=\"right\">\n                {t('Block %num%', { num: endBlock })}\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      </ScheduleInner>\n    </>\n  )\n}\n\nexport default AuctionSchedule\n","import React from 'react'\nimport { Text, Flex, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CannotBidMessage: React.FC = () => {\n  const { t } = useTranslation()\n  const { tooltip, targetRef, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"16px\">{t('Only whitelisted project wallets can bid in the auction to create Community Farms.')}</Text>\n      <Text mb=\"16px\">{t('Bidding is only possible while the auction is live.')}</Text>\n      <Text>\n        {t(\n          'If you’re sure your project should be able to bid in this auction, make sure you’re connected with the correct (whitelisted) wallet.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom' },\n  )\n  return (\n    <Flex justifyContent=\"center\" alignItems=\"center\">\n      <Text color=\"textSubtle\" small mr=\"8px\">\n        {t('Why cant I bid for a farm?')}\n      </Text>\n      <span ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" height=\"16px\" width=\"16px\" />\n      </span>\n      {tooltipVisible && tooltip}\n    </Flex>\n  )\n}\n\nexport default CannotBidMessage\n","import { useState, useEffect } from 'react'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { getBidderInfo } from 'config/constants/farmAuctions'\nimport { FarmAuctionBidderConfig } from 'config/constants/types'\nimport { AUCTION_WHITELISTED_BIDDERS_TO_FETCH } from 'config'\n\nconst useWhitelistedAddresses = () => {\n  const [whitelistedAddresses, setWhitelistedAddresses] = useState<FarmAuctionBidderConfig[] | null>(null)\n  const farmAuctionContract = useFarmAuctionContract()\n\n  useEffect(() => {\n    const fetchWhitelistedAddresses = async () => {\n      try {\n        const [bidderAddresses] = await farmAuctionContract.viewBidders(0, AUCTION_WHITELISTED_BIDDERS_TO_FETCH)\n        const bidders = bidderAddresses.map((address) => getBidderInfo(address))\n        setWhitelistedAddresses(bidders)\n      } catch (error) {\n        console.error('Failed to fetch list of whitelisted addresses', error)\n      }\n    }\n    if (!whitelistedAddresses) {\n      fetchWhitelistedAddresses()\n    }\n  }, [farmAuctionContract, whitelistedAddresses])\n\n  return whitelistedAddresses\n}\n\nexport default useWhitelistedAddresses\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Box, Text, Flex, Input, OpenNewIcon, useMatchBreakpoints, Spinner } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { FarmAuctionBidderConfig } from 'config/constants/types'\nimport truncateHash from 'utils/truncateHash'\nimport useWhitelistedAddresses from '../hooks/useWhitelistedAddresses'\n\ninterface WhitelistedBiddersModalProps {\n  onDismiss?: () => void\n}\n\nconst StyledModal = styled(Modal)`\n  & > div:nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst InputContainer = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AddressRowContainer = styled.div`\n  display: grid;\n  grid-template-columns: 3fr 5fr 0.5fr;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 8px 24px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n`\n\nconst AddressRow: React.FC<{ bidder: FarmAuctionBidderConfig; isMobile: boolean }> = ({ bidder, isMobile }) => {\n  const { farmName, tokenName, account, projectSite } = bidder\n  return (\n    <a href={projectSite} target=\"_blank\" rel=\"noopener noreferrer\">\n      <AddressRowContainer>\n        <Flex flexDirection=\"column\" flex=\"3\">\n          <Text>{farmName}</Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {tokenName}\n          </Text>\n        </Flex>\n        <Flex justifyContent={['center', null, 'flex-start']} alignItems=\"center\" flex=\"6\">\n          <Text mr=\"8px\">{isMobile ? truncateHash(account) : account}</Text>\n        </Flex>\n        <OpenNewIcon color=\"primary\" />\n      </AddressRowContainer>\n    </a>\n  )\n}\n\nconst WhitelistedBiddersModal: React.FC<WhitelistedBiddersModalProps> = ({ onDismiss }) => {\n  const [searchTerm, setSearchTerm] = useState('')\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { isMobile } = useMatchBreakpoints()\n  const bidders = useWhitelistedAddresses()\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value)\n  }\n\n  const filteredBidders = bidders\n    ? bidders.filter(\n        ({ farmName, tokenName, account }) =>\n          farmName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          tokenName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          account.toLowerCase().includes(searchTerm.toLowerCase()),\n      )\n    : []\n\n  const modalContent = bidders ? (\n    filteredBidders.map((bidder) => <AddressRow key={bidder.account} bidder={bidder} isMobile={isMobile} />)\n  ) : (\n    <Flex justifyContent=\"center\" alignItems=\"center\" py=\"24px\">\n      <Spinner />\n    </Flex>\n  )\n\n  return (\n    <StyledModal\n      p=\"0\"\n      title={t('All Whitelisted Project Wallets')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <InputContainer py=\"16px\" px=\"24px\">\n        <Input placeholder={t('Search address or token')} value={searchTerm} onChange={handleSearchChange} />\n      </InputContainer>\n\n      <Box pb=\"24px\" overflow=\"scroll\" maxHeight=\"245px\">\n        {modalContent}\n      </Box>\n    </StyledModal>\n  )\n}\n\nexport default WhitelistedBiddersModal\n","import React from 'react'\nimport { useModal, Button, Skeleton } from '@pancakeswap/uikit'\nimport WhitelistedBiddersModal from './WhitelistedBiddersModal'\nimport useWhitelistedAddresses from '../hooks/useWhitelistedAddresses'\n\nconst WhitelistedBiddersButton: React.FC = () => {\n  const whitelistedBidders = useWhitelistedAddresses()\n  const [onShowWhitelistedBidders] = useModal(<WhitelistedBiddersModal />)\n\n  return whitelistedBidders ? (\n    <Button p=\"0\" variant=\"text\" scale=\"sm\" onClick={onShowWhitelistedBidders}>\n      {whitelistedBidders.length}\n    </Button>\n  ) : (\n    <Skeleton height=\"24px\" width=\"46px\" />\n  )\n}\n\nexport default WhitelistedBiddersButton\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\nimport WhitelistedBiddersButton from '../WhitelistedBiddersButton'\n\nconst FooterInner = styled(Box)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst AuctionFooter: React.FC<{ auction: Auction }> = ({ auction }) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const { topLeaderboard, status } = auction\n\n  const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n\n  return (\n    <CardFooter p=\"0\">\n      {isExpanded && (\n        <FooterInner>\n          <Flex p=\"16px\" flexDirection=\"column\">\n            {isLiveOrPendingAuction && (\n              <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\n                <Text color=\"textSubtle\">{t('Farms available')}</Text>\n                <Text>\n                  {topLeaderboard} ({t('top %num% bidders', { num: topLeaderboard })})\n                </Text>\n              </Flex>\n            )}\n            <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Text color=\"textSubtle\">{t('Multiplier per farm')}</Text>\n              <Text>1x {t('each')}</Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Text color=\"textSubtle\">{t('Total whitelisted bidders')}</Text>\n              <WhitelistedBiddersButton />\n            </Flex>\n          </Flex>\n        </FooterInner>\n      )}\n      <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </Flex>\n    </CardFooter>\n  )\n}\n\nexport default AuctionFooter\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  Text,\n  Heading,\n  Card,\n  CardHeader,\n  CardBody,\n  Flex,\n  Spinner,\n  Skeleton,\n  Tag,\n  Button,\n  CheckmarkCircleIcon,\n  useModal,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus, ConnectedBidder } from 'config/constants/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport PlaceBidModal from '../PlaceBidModal'\nimport AuctionSchedule from './AuctionSchedule'\nimport CannotBidMessage from './CannotBidMessage'\nimport AuctionFooter from './AuctionFooter'\n\nconst AuctionDetailsCard = styled(Card)`\n  flex: 1;\n`\n\ninterface AuctionDetailsProps {\n  auction: Auction\n  connectedBidder: ConnectedBidder\n  refreshBidders: () => void\n}\n\nconst AuctionDetails: React.FC<AuctionDetailsProps> = ({ auction, connectedBidder, refreshBidders }) => {\n  const { t } = useTranslation()\n\n  const [onPresentPlaceBid] = useModal(\n    <PlaceBidModal\n      connectedBidder={connectedBidder}\n      refreshBidders={refreshBidders}\n      initialBidAmount={auction?.initialBidAmount}\n    />,\n  )\n\n  if (!auction) {\n    return (\n      <AuctionDetailsCard mb={['24px', null, null, '0']}>\n        <CardHeader>\n          <Heading>{t('Current Auction')}</Heading>\n        </CardHeader>\n        <CardBody>\n          <Flex justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n            <Spinner />\n          </Flex>\n        </CardBody>\n      </AuctionDetailsCard>\n    )\n  }\n\n  const getBidSection = () => {\n    const notConnectedOrNotWhitelisted = !connectedBidder || (connectedBidder && !connectedBidder.isWhitelisted)\n    const whitelistedAndReadyToBid = !notConnectedOrNotWhitelisted && connectedBidder.bidderData\n    if (notConnectedOrNotWhitelisted || auction.status !== AuctionStatus.Open) {\n      return <CannotBidMessage />\n    }\n    if (whitelistedAndReadyToBid) {\n      const { amount, position } = connectedBidder.bidderData\n      return (\n        <>\n          <Tag outline variant=\"success\" startIcon={<CheckmarkCircleIcon />}>\n            {t('Connected as %projectName%', { projectName: connectedBidder.bidderData.tokenName })}\n          </Tag>\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"24px\">\n            <Text small color=\"textSubtle\">\n              {t('Your existing bid')}\n            </Text>\n            <Text small>{getBalanceNumber(amount).toLocaleString()} MByte</Text>\n          </Flex>\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\">\n            <Text small color=\"textSubtle\">\n              {t('Your position')}\n            </Text>\n            <Text small>{position ? `#${position}` : '-'}</Text>\n          </Flex>\n          <Button my=\"24px\" width=\"100%\" onClick={onPresentPlaceBid}>\n            {t('Place bid')}\n          </Button>\n          <Text color=\"textSubtle\" small>\n            {t('If your bid is unsuccessful, you’ll be able to reclaim your MByte after the auction.')}\n          </Text>\n        </>\n      )\n    }\n    return (\n      <>\n        <Skeleton width=\"200px\" height=\"28px\" />\n        <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"24px\" px=\"8px\">\n          <Skeleton width=\"120px\" height=\"24px\" />\n          <Skeleton width=\"86px\" height=\"24px\" />\n        </Flex>\n        <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\n          <Skeleton width=\"96px\" height=\"24px\" />\n          <Skeleton width=\"42px\" height=\"24px\" />\n        </Flex>\n      </>\n    )\n  }\n\n  const cardTitle = auction.status === AuctionStatus.Closed ? t('Next Auction') : t('Current Auction')\n\n  return (\n    <AuctionDetailsCard mb={['24px', null, null, '0']}>\n      <CardHeader>\n        <Heading>{cardTitle}</Heading>\n      </CardHeader>\n      <CardBody>\n        <AuctionSchedule auction={auction} />\n        <Flex mt=\"24px\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\n          {getBidSection()}\n        </Flex>\n      </CardBody>\n      <AuctionFooter auction={auction} />\n    </AuctionDetailsCard>\n  )\n}\n\nexport default AuctionDetails\n","import { useState, useEffect } from 'react'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { Auction, Bidder } from 'config/constants/types'\nimport { AUCTION_BIDDERS_TO_FETCH } from 'config'\nimport { processAuctionData, sortAuctionBidders } from '../helpers'\n\ninterface AuctionHistoryMap {\n  [key: number]: {\n    auction: Auction\n    bidders: Bidder[]\n  }\n}\n\nconst useAuctionHistory = (auctionId: number) => {\n  const [auctionHistory, setAuctionHistory] = useState<AuctionHistoryMap>({})\n\n  const farmAuctionContract = useFarmAuctionContract()\n\n  // Get past auction data\n  useEffect(() => {\n    const fetchAuction = async () => {\n      try {\n        const auctionData = await farmAuctionContract.auctions(auctionId)\n        const processedAuctionData = await processAuctionData(auctionId, auctionData)\n\n        const [auctionBidders] = await farmAuctionContract.viewBidsPerAuction(auctionId, 0, AUCTION_BIDDERS_TO_FETCH)\n        const sortedBidders = sortAuctionBidders(auctionBidders, processedAuctionData)\n        setAuctionHistory((prev) => ({\n          ...prev,\n          [auctionId]: { auction: processedAuctionData, bidders: sortedBidders },\n        }))\n      } catch (error) {\n        console.error('Failed to fetch auction history', error)\n      }\n    }\n    if (!auctionHistory[auctionId] && auctionId > 0) {\n      fetchAuction()\n    }\n  }, [farmAuctionContract, auctionHistory, auctionId])\n\n  return auctionHistory\n}\n\nexport default useAuctionHistory\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport {\n  Text,\n  Flex,\n  Box,\n  BunnyPlaceholderIcon,\n  Skeleton,\n  Button,\n  useMatchBreakpoints,\n  useModal,\n  SubMenu,\n  SubMenuItem,\n  EllipsisIcon,\n  LinkExternal,\n} from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { Bidder } from 'config/constants/types'\nimport WhitelistedBiddersModal from '../WhitelistedBiddersModal'\n\nconst LeaderboardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 5fr 3fr 1fr;\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 3fr 5fr 5fr 1fr;\n  }\n`\n\nconst GridCell = styled(Flex)<{ isTopPosition: boolean }>`\n  height: 65px;\n  align-items: center;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n\n  ${({ theme, isTopPosition }) => isTopPosition && `background-color: ${theme.colors.warning}2D;`}\n`\n\ninterface LeaderboardRowProps {\n  bidder: Bidder\n  cakePriceBusd: BigNumber\n  isMobile: boolean\n}\n\nconst LeaderboardRow: React.FC<LeaderboardRowProps> = ({ bidder, cakePriceBusd, isMobile }) => {\n  const { t } = useTranslation()\n  const { isTopPosition, position, samePositionAsAbove, farmName, tokenName, amount, projectSite, lpAddress, account } =\n    bidder\n  return (\n    <>\n      <GridCell isTopPosition={isTopPosition} pl={['12px', '24px']}>\n        <Flex>\n          <Text bold={isTopPosition} color={samePositionAsAbove ? 'textDisabled' : 'text'} textTransform=\"uppercase\">\n            #{position}\n          </Text>\n        </Flex>\n      </GridCell>\n      <GridCell isTopPosition={isTopPosition}>\n        <Flex flexDirection=\"column\" pl={['8px']}>\n          <Flex>\n            <Text bold={isTopPosition} mr=\"4px\">\n              {farmName}\n            </Text>\n            {!isMobile && <Text>(1x)</Text>}\n          </Flex>\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {tokenName}\n          </Text>\n        </Flex>\n      </GridCell>\n      <GridCell isTopPosition={isTopPosition}>\n        <Flex flexDirection=\"column\" width=\"100%\" justifyContent=\"flex-end\" pr={[null, null, '24px']}>\n          <Text bold textTransform=\"uppercase\" width=\"100%\" textAlign=\"right\">\n            {getBalanceNumber(amount).toLocaleString()}\n          </Text>\n          {cakePriceBusd.gt(0) ? (\n            <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"right\">\n              ~${getBalanceNumber(amount.times(cakePriceBusd)).toLocaleString('en', { maximumFractionDigits: 0 })}\n            </Text>\n          ) : (\n            <Flex justifyContent=\"flex-end\">\n              <Skeleton width=\"48px\" />\n            </Flex>\n          )}\n        </Flex>\n      </GridCell>\n      <GridCell isTopPosition={isTopPosition}>\n        <SubMenu component={<EllipsisIcon height=\"16px\" width=\"16px\" />}>\n          {projectSite && (\n            <SubMenuItem as={LinkExternal} href={projectSite} bold={false} color=\"text\">\n              {t('Project Site')}\n            </SubMenuItem>\n          )}\n          {lpAddress && (\n            <SubMenuItem as={LinkExternal} href={`/info/pool/${lpAddress}`} bold={false} color=\"text\">\n              {t('LP Info')}\n            </SubMenuItem>\n          )}\n          {account && (\n            <SubMenuItem as={LinkExternal} href={getBscScanLink(account, 'address')} bold={false} color=\"text\">\n              {t('Bidder Address')}\n            </SubMenuItem>\n          )}\n        </SubMenu>\n      </GridCell>\n    </>\n  )\n}\n\nconst AuctionLeaderboardTable: React.FC<{ bidders: Bidder[]; noBidsText: string }> = ({ bidders, noBidsText }) => {\n  const [visibleBidders, setVisibleBidders] = useState(10)\n  const cakePriceBusd = usePriceCakeBusd()\n  const { t } = useTranslation()\n\n  const { isMobile } = useMatchBreakpoints()\n  const [onShowWhitelistedBidders] = useModal(<WhitelistedBiddersModal />)\n\n  const totalBidders = bidders.length\n\n  if (totalBidders === 0) {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" py=\"24px\">\n        <Text mb=\"8px\">{noBidsText}</Text>\n        <BunnyPlaceholderIcon height=\"64px\" width=\"64px\" />\n      </Flex>\n    )\n  }\n\n  return (\n    <Box>\n      <LeaderboardContainer>\n        <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\" pl={['12px', '24px']} py=\"16px\">\n          {t('Position')}\n        </Text>\n        <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\" pl={['8px']} py=\"16px\">\n          {t('Farm')}\n        </Text>\n        <Text\n          color=\"secondary\"\n          bold\n          fontSize=\"12px\"\n          textTransform=\"uppercase\"\n          textAlign=\"right\"\n          pr={[null, null, '24px']}\n          py=\"16px\"\n        >\n          {t('MByte bid')}\n        </Text>\n        <Box />\n        {/* Rows */}\n        {bidders.slice(0, visibleBidders).map((bidder) => (\n          <LeaderboardRow key={bidder.account} bidder={bidder} cakePriceBusd={cakePriceBusd} isMobile={isMobile} />\n        ))}\n      </LeaderboardContainer>\n      <Flex mt=\"16px\" px=\"24px\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\n        {visibleBidders <= 10 && totalBidders > 10 && (\n          <Text color=\"textSubtle\" textAlign=\"center\">\n            {t('Showing top 10 bids only.')}{' '}\n            <Button px=\"0\" variant=\"text\" onClick={onShowWhitelistedBidders}>\n              {t('See all whitelisted bidders')}\n            </Button>\n          </Text>\n        )}\n        {visibleBidders < totalBidders && (\n          <Button\n            mt=\"16px\"\n            variant=\"text\"\n            onClick={() =>\n              setVisibleBidders((prev) => {\n                if (totalBidders - prev > 10) {\n                  return prev + 10\n                }\n                return totalBidders\n              })\n            }\n          >\n            {t('Show More')}\n          </Button>\n        )}\n      </Flex>\n    </Box>\n  )\n}\n\nexport default AuctionLeaderboardTable\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Text,\n  Flex,\n  Box,\n  Input,\n  ArrowBackIcon,\n  ArrowForwardIcon,\n  ArrowLastIcon,\n  IconButton,\n  BunnyPlaceholderIcon,\n  Spinner,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useAuctionHistory from '../hooks/useAuctionHistory'\nimport AuctionLeaderboardTable from './AuctionLeaderboard/AuctionLeaderboardTable'\n\ninterface AuctionHistoryProps {\n  mostRecentClosedAuctionId: number\n}\n\nconst StyledIconButton = styled(IconButton)`\n  width: 32px;\n\n  :disabled {\n    background: none;\n\n    svg {\n      fill: ${({ theme }) => theme.colors.textDisabled};\n\n      path {\n        fill: ${({ theme }) => theme.colors.textDisabled};\n      }\n    }\n  }\n`\n\nconst AuctionHistory: React.FC<AuctionHistoryProps> = ({ mostRecentClosedAuctionId }) => {\n  const [historyAuctionId, setHistoryAuctionId] = useState(\n    mostRecentClosedAuctionId ? mostRecentClosedAuctionId.toString() : '0',\n  )\n  const historyAuctionIdAsInt = parseInt(historyAuctionId, 10)\n\n  const {\n    t,\n    currentLanguage: { locale },\n  } = useTranslation()\n\n  const { isXs, isSm, isMd, isLg, isXl, isXxl } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const isSmallerScreen = isXs || isSm || isMd\n\n  const auctionHistory = useAuctionHistory(historyAuctionIdAsInt)\n  const selectedAuction = Object.values(auctionHistory).find(\n    (auctionData) => auctionData.auction.id === historyAuctionIdAsInt,\n  )\n\n  let auctionTable = selectedAuction ? (\n    <AuctionLeaderboardTable bidders={selectedAuction.bidders} noBidsText=\"No bids were placed in this auction\" />\n  ) : (\n    <Flex justifyContent=\"center\" alignItems=\"center\" p=\"24px\" height=\"250px\">\n      <Spinner />\n    </Flex>\n  )\n\n  if (Number.isNaN(historyAuctionIdAsInt)) {\n    auctionTable = (\n      <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" p=\"24px\" height=\"250px\">\n        <Text mb=\"8px\">{t('Please specify auction ID')}</Text>\n        <BunnyPlaceholderIcon height=\"64px\" width=\"64px\" />\n      </Flex>\n    )\n  }\n\n  const endDate = selectedAuction\n    ? selectedAuction.auction.endDate.toLocaleString(locale, {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n      })\n    : null\n\n  const handleHistoryAuctionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.validity.valid) {\n      const {\n        target: { value },\n      } = event\n      const valueAsNumber = +value\n      const newAuctionId =\n        valueAsNumber >= mostRecentClosedAuctionId\n          ? mostRecentClosedAuctionId.toString()\n          : valueAsNumber <= 0\n          ? ''\n          : value\n      setHistoryAuctionId(newAuctionId)\n    }\n  }\n\n  const handleArrowPress = (auctionId: number) => {\n    if (auctionId) {\n      setHistoryAuctionId(auctionId.toString())\n    } else {\n      // auctionId is NaN when the input is empty, the only button press that will trigger this func is 'forward one'\n      setHistoryAuctionId('1')\n    }\n  }\n\n  return (\n    <Box py=\"24px\">\n      <Flex px={['12px', '24px']} justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flex=\"3\" alignItems=\"center\">\n          <Text bold fontSize={isLargerScreen ? '20px' : '16px'} mr={['4px', '8px']}>\n            {t('Auction #')}\n          </Text>\n          <Box width=\"62px\" mr={['4px', '16px']}>\n            <Input\n              disabled={!mostRecentClosedAuctionId}\n              type=\"text\"\n              inputMode=\"numeric\"\n              pattern=\"^[0-9]+$\"\n              value={historyAuctionId}\n              onChange={handleHistoryAuctionChange}\n            />\n          </Box>\n          <StyledIconButton\n            disabled={!historyAuctionIdAsInt || historyAuctionIdAsInt <= 1}\n            variant=\"text\"\n            scale=\"sm\"\n            mr={['8px', '12px']}\n            onClick={() => handleArrowPress(historyAuctionIdAsInt - 1)}\n          >\n            <ArrowBackIcon />\n          </StyledIconButton>\n          <StyledIconButton\n            disabled={historyAuctionIdAsInt >= mostRecentClosedAuctionId}\n            variant=\"text\"\n            scale=\"sm\"\n            mr={['8px', '12px']}\n            onClick={() => handleArrowPress(historyAuctionIdAsInt + 1)}\n          >\n            <ArrowForwardIcon />\n          </StyledIconButton>\n          <StyledIconButton\n            disabled={historyAuctionIdAsInt >= mostRecentClosedAuctionId}\n            variant=\"text\"\n            scale=\"sm\"\n            onClick={() => handleArrowPress(mostRecentClosedAuctionId)}\n          >\n            <ArrowLastIcon />\n          </StyledIconButton>\n        </Flex>\n        {isLargerScreen && (\n          <Flex flex=\"2\" justifyContent=\"flex-end\">\n            {endDate && <Text>{t('Ended %date%', { date: endDate })}</Text>}\n          </Flex>\n        )}\n      </Flex>\n      {isSmallerScreen && (\n        <Flex px={['12px', '24px']} pt=\"8px\">\n          {endDate && <Text>{t('Ended %date%', { date: endDate })}</Text>}\n        </Flex>\n      )}\n      {mostRecentClosedAuctionId ? (\n        auctionTable\n      ) : (\n        <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" p=\"24px\" height=\"250px\">\n          <Text mb=\"8px\">{t('No history yet')}</Text>\n          <BunnyPlaceholderIcon height=\"64px\" width=\"64px\" />\n        </Flex>\n      )}\n    </Box>\n  )\n}\n\nexport default AuctionHistory\n","import React, { useState, useEffect } from 'react'\nimport { Progress } from '@pancakeswap/uikit'\nimport { differenceInSeconds } from 'date-fns'\nimport { Auction, AuctionStatus } from 'config/constants/types'\nimport useRefresh from 'hooks/useRefresh'\n\nconst AuctionProgress: React.FC<{ auction: Auction }> = ({ auction }) => {\n  const [progress, setProgress] = useState<number>(0)\n  const { slowRefresh } = useRefresh()\n\n  // Note: opted to base it on date rather than block number to reduce the amount of calls and async handling\n  useEffect(() => {\n    if (auction.status === AuctionStatus.ToBeAnnounced || auction.status === AuctionStatus.Pending) {\n      setProgress(0)\n    } else {\n      const now = new Date()\n      const auctionDuration = differenceInSeconds(auction.endDate, auction.startDate)\n      const secondsPassed = differenceInSeconds(now, auction.startDate)\n      const percentagePassed = (secondsPassed * 100) / auctionDuration\n      setProgress(percentagePassed < 100 ? percentagePassed : 100)\n    }\n  }, [slowRefresh, auction])\n\n  return <Progress variant=\"flat\" primaryStep={progress} />\n}\n\nexport default AuctionProgress\n","import { Text } from '@pancakeswap/uikit'\nimport { Auction, AuctionStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledRibbon = styled.div<{ color: string }>`\n  display: flex;\n  justify-content: center;\n  background-color: ${({ theme, color }) => theme.colors[color]};\n  color: white;\n  position: absolute;\n  right: 0;\n  top: 0;\n  text-align: center;\n  width: 94px;\n  height: 94px;\n  z-index: 1;\n  clip-path: polygon(0 0, 40% 0, 100% 60%, 100% 100%);\n\n  & > div {\n    padding-top: 23%;\n    overflow: hidden;\n    transform: rotate(45deg);\n  }\n`\n\nconst AuctionRibbon: React.FC<{ auction: Auction; noAuctionHistory: boolean }> = ({ auction, noAuctionHistory }) => {\n  const { t } = useTranslation()\n  const { status } = auction\n\n  // Don't show Live or Finished in case of fresh contract with no history\n  if (noAuctionHistory) {\n    return null\n  }\n\n  let ribbonText = t('Finished')\n  let color = 'textDisabled'\n  if (status === AuctionStatus.Open) {\n    ribbonText = `${t('Live')}!`\n    color = 'success'\n  }\n  if (status === AuctionStatus.Pending) {\n    ribbonText = `${t('Get ready')}!`\n    color = 'warning'\n  }\n  return (\n    <StyledRibbon color={color}>\n      <Text color=\"white\" textTransform=\"uppercase\">\n        {ribbonText}\n      </Text>\n    </StyledRibbon>\n  )\n}\n\nexport default AuctionRibbon\n","import React from 'react'\nimport styled from 'styled-components'\nimport { isAfter, differenceInSeconds } from 'date-fns'\nimport { Text, Flex, PocketWatchIcon, Skeleton } from '@pancakeswap/uikit'\nimport { Auction, AuctionStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst AuctionCountDown = styled(Flex)`\n  align-items: flex-end;\n  margin: 0 16px 0 16px;\n`\n\nconst AuctionTimer: React.FC<{ auction: Auction }> = ({ auction }) => {\n  const { t } = useTranslation()\n  if (!auction) {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"48px\">\n        <Skeleton width=\"256px\" height=\"40px\" />\n      </Flex>\n    )\n  }\n\n  if (auction.status === AuctionStatus.ToBeAnnounced || auction.status === AuctionStatus.Closed) {\n    return null\n  }\n  if (auction.status === AuctionStatus.Finished) {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"48px\">\n        <Text bold>{t('Closing')}...</Text>\n        <PocketWatchIcon height=\"40px\" width=\"40px\" />\n      </Flex>\n    )\n  }\n  const { startDate, endDate } = auction\n  const timerUntil = isAfter(startDate, new Date()) ? startDate : endDate\n  const timerTitle = timerUntil === endDate ? t('Ending in') : t('Next auction')\n  const secondsRemaining = differenceInSeconds(timerUntil, new Date())\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n  return (\n    <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"48px\">\n      <Text bold>{timerTitle}: </Text>\n      <AuctionCountDown>\n        {days !== 0 && (\n          <>\n            <Text verticalAlign=\"baseline\" lineHeight=\"28px\" fontSize=\"24px\" bold color=\"secondary\" mr=\"4px\">\n              {days}\n            </Text>\n            <Text verticalAlign=\"baseline\" bold mr=\"4px\">\n              {t('d')}\n            </Text>\n          </>\n        )}\n        <Text verticalAlign=\"baseline\" lineHeight=\"28px\" fontSize=\"24px\" bold color=\"secondary\" mr=\"4px\">\n          {hours}\n        </Text>\n        <Text verticalAlign=\"baseline\" bold mr=\"4px\">\n          {t('h')}\n        </Text>\n        <Text verticalAlign=\"baseline\" lineHeight=\"28px\" fontSize=\"24px\" bold color=\"secondary\" mr=\"4px\">\n          {minutes}\n        </Text>\n        <Text verticalAlign=\"baseline\" bold>\n          {t('m')}\n        </Text>\n      </AuctionCountDown>\n      <PocketWatchIcon height=\"40px\" width=\"40px\" />\n    </Flex>\n  )\n}\n\nexport default AuctionTimer\n","import { useEffect, useReducer } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BidderAuction } from 'config/constants/types'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { RECLAIM_AUCTIONS_TO_FETCH } from 'config'\nimport { processBidderAuctions, sortAuctionBidders } from '../helpers'\n\ninterface ReclaimableAuction {\n  id: number\n  amount: BigNumber\n  position: number\n}\n\ninterface ReclaimReducerState {\n  auctions: BidderAuction[]\n  currentCursor: number\n  nextCursor: number\n  nextAuctionToCheck: number // nextAuctionToCheck is array index in auctions\n  auctionToReclaim: ReclaimableAuction | null\n  loading: boolean\n}\n\nconst initialState: ReclaimReducerState = {\n  auctions: [],\n  currentCursor: 0,\n  nextCursor: 0,\n  nextAuctionToCheck: 0,\n  auctionToReclaim: null,\n  loading: false,\n}\n\nconst reclaimReducer = (state: ReclaimReducerState, action: { type: string; payload?: any }): ReclaimReducerState => {\n  switch (action.type) {\n    case 'setAuctions':\n      return {\n        auctions: action.payload.auctions,\n        currentCursor: state.currentCursor,\n        nextCursor: action.payload.nextCursor,\n        nextAuctionToCheck: 0,\n        auctionToReclaim: null,\n        loading: false,\n      }\n    case 'setAuctionToReclaim':\n      return {\n        ...state,\n        auctionToReclaim: action.payload.auctionToReclaim,\n        loading: false,\n      }\n    case 'checkNextAuction': {\n      const nextAuctionToCheck = state.nextAuctionToCheck + 1\n      if (nextAuctionToCheck === state.auctions.length) {\n        // Checked all auctions in the batch\n        return {\n          ...state,\n          auctions: [],\n          currentCursor: state.nextCursor,\n          auctionToReclaim: null,\n          loading: false,\n        }\n      }\n      return {\n        ...state,\n        nextAuctionToCheck,\n        auctionToReclaim: null,\n        loading: false,\n      }\n    }\n    case 'setLoading':\n      return { ...state, loading: action.payload.loading }\n    case 'reset':\n      return initialState\n    default:\n      return state\n  }\n}\n\n/**\n * This hook checks if user has participated in previous auctions and has some bids to claim back.\n */\nconst useReclaimAuctionBid = (): [ReclaimableAuction | null, () => void] => {\n  const { account } = useWeb3React()\n\n  const [state, dispatch] = useReducer(reclaimReducer, initialState)\n\n  const farmAuctionContract = useFarmAuctionContract()\n\n  const checkNextAuction = () => {\n    dispatch({ type: 'checkNextAuction' })\n  }\n\n  // Reset checking if account was switched\n  useEffect(() => {\n    dispatch({ type: 'reset' })\n  }, [account])\n\n  // Fetch auction data for auctions account has participated\n  useEffect(() => {\n    const fetchBidderAuctions = async () => {\n      try {\n        dispatch({ type: 'setLoading', payload: { loading: true } })\n\n        const bidderAuctionsResponse = await farmAuctionContract.viewBidderAuctions(\n          account,\n          state.currentCursor,\n          RECLAIM_AUCTIONS_TO_FETCH,\n        )\n\n        const { auctions, nextCursor } = processBidderAuctions(bidderAuctionsResponse)\n        if (auctions.length > 0) {\n          dispatch({ type: 'setAuctions', payload: { auctions, nextCursor } })\n        }\n      } catch (error) {\n        console.error('Failed to fetch auctions for bidder', error)\n        dispatch({ type: 'setLoading', payload: { loading: false } })\n      }\n    }\n\n    if (!state.loading && account && state.currentCursor === state.nextCursor) {\n      fetchBidderAuctions()\n    }\n  }, [account, state, farmAuctionContract])\n\n  useEffect(() => {\n    const checkIfAuctionIsClaimable = async (auctionToCheck: BidderAuction) => {\n      dispatch({ type: 'setLoading', payload: { loading: true } })\n      try {\n        const isClaimable = await farmAuctionContract.claimable(auctionToCheck.id, account)\n        if (isClaimable) {\n          const [auctionBidders] = await farmAuctionContract.viewBidsPerAuction(auctionToCheck.id, 0, 500)\n          const sortedBidders = sortAuctionBidders(auctionBidders)\n          const accountBidderData = sortedBidders.find((bidder) => bidder.account === account)\n          const position = accountBidderData?.position\n          const auctionToReclaim = { id: auctionToCheck.id, amount: auctionToCheck.amount, position }\n          dispatch({ type: 'setAuctionToReclaim', payload: { auctionToReclaim } })\n        } else {\n          dispatch({ type: 'checkNextAuction' })\n        }\n      } catch (error) {\n        dispatch({ type: 'setLoading', payload: { loading: false } })\n        console.error('Failed to check for unclaim bids', error)\n      }\n    }\n    const { auctions, nextAuctionToCheck, loading } = state\n    if (auctions.length > 0 && account && !loading) {\n      const auctionToCheck = auctions[nextAuctionToCheck]\n      checkIfAuctionIsClaimable(auctionToCheck)\n    }\n  }, [account, state, farmAuctionContract])\n\n  return [state.auctionToReclaim, checkNextAuction]\n}\n\nexport default useReclaimAuctionBid\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Card, CardHeader, CardBody, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useFarmAuctionContract } from 'hooks/useContract'\nimport { ethersToBigNumber } from 'utils/bigNumber'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport useToast from 'hooks/useToast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { ethers } from 'ethers'\nimport ApproveConfirmButtons, { ButtonArrangement } from 'components/ApproveConfirmButtons'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useReclaimAuctionBid from '../hooks/useReclaimAuctionBid'\n\nconst StyledReclaimBidCard = styled(Card)`\n  margin-top: 16px;\n  flex: 1;\n`\n\nconst ReclaimBidCard: React.FC = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const [reclaimableAuction, checkForNextReclaimableAuction] = useReclaimAuctionBid()\n\n  const cakeContract = useCake()\n  const farmAuctionContract = useFarmAuctionContract()\n\n  const { toastSuccess } = useToast()\n\n  const { isApproving, isApproved, isConfirming, handleApprove, handleConfirm } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.allowance(account, farmAuctionContract.address)\n        const currentAllowance = ethersToBigNumber(response)\n        return currentAllowance.gt(0)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return callWithGasPrice(cakeContract, 'approve', [farmAuctionContract.address, ethers.constants.MaxUint256])\n    },\n    onApproveSuccess: async ({ receipt }) => {\n      toastSuccess(\n        t('Contract approved - you can now reclaim your bid!'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash} />,\n      )\n    },\n    onConfirm: () => {\n      return callWithGasPrice(farmAuctionContract, 'claimAuction', [reclaimableAuction.id])\n    },\n    onSuccess: async ({ receipt }) => {\n      checkForNextReclaimableAuction()\n      toastSuccess(t('Bid reclaimed!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n    },\n  })\n\n  if (!reclaimableAuction) {\n    return null\n  }\n\n  const { position, amount } = reclaimableAuction\n\n  return (\n    <StyledReclaimBidCard mb={['24px', null, null, '0']}>\n      <CardHeader>\n        <Heading>{t('Reclaim Bid')}</Heading>\n      </CardHeader>\n      <CardBody>\n        <Text mb=\"16px\">\n          {t('Your bid in Auction #%auctionId% was unsuccessful.', { auctionId: reclaimableAuction.id })}\n        </Text>\n        <Text bold mb=\"16px\">\n          {t('Reclaim your MByte now.')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text color=\"textSubtle\">{t('Your total bid')}</Text>\n          <Text>{t('%num% MByte', { num: getBalanceNumber(amount).toLocaleString() })}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\" mb=\"24px\">\n          <Text color=\"textSubtle\">{t('Your position')}</Text>\n          <Text>#{position}</Text>\n        </Flex>\n        {account ? (\n          <ApproveConfirmButtons\n            isApproveDisabled={isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={false}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n            buttonArrangement={ButtonArrangement.SEQUENTIAL}\n            confirmLabel={t('Reclaim')}\n          />\n        ) : (\n          <ConnectWalletButton />\n        )}\n      </CardBody>\n    </StyledReclaimBidCard>\n  )\n}\n\nexport default ReclaimBidCard\n","import React from 'react'\nimport { Text, Flex, Message, Box, HelpIcon } from '@pancakeswap/uikit'\nimport { Auction, ConnectedBidder } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\n\nconst NotWhitelistedNotice: React.FC<{ connectedBidder: ConnectedBidder; auction: Auction }> = ({\n  connectedBidder,\n  auction,\n}) => {\n  const { t } = useTranslation()\n  if ((connectedBidder && connectedBidder.isWhitelisted) || !auction) {\n    return null\n  }\n  return (\n    <Flex mb=\"24px\" justifyContent=\"center\">\n      <Message variant=\"warning\" icon={<HelpIcon width=\"24px\" />}>\n        <Box maxWidth=\"800px\">\n          <Text bold>{t('Notice')}</Text>\n          <Text>{t('This page is a functional page, for projects to bid for farms.')}</Text>\n          <Text>\n            {t(\n              'If you’re not a whitelisted project, you won’t be able to participate, but you can still view the auction bids in real time!',\n            )}\n          </Text>\n          <Text>{t('Connect a whitelisted project wallet to participate in Auctions.')}</Text>\n        </Box>\n      </Message>\n    </Flex>\n  )\n}\n\nexport default NotWhitelistedNotice\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Auction, AuctionStatus, Bidder } from 'config/constants/types'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { processAuctionData, sortAuctionBidders } from '../helpers'\n\ninterface WonAuction {\n  auction: Auction\n  bidderData: Bidder\n}\n\nconst useCongratulateAuctionWinner = (currentAuction: Auction, bidders: Bidder[]): WonAuction => {\n  const [wonAuction, setWonAuction] = useState<WonAuction | null>(null)\n\n  const { account } = useWeb3React()\n\n  const farmAuctionContract = useFarmAuctionContract()\n\n  useEffect(() => {\n    const checkIfWonPreviousAuction = async (previousAuctionId: number) => {\n      const auctionData = await farmAuctionContract.auctions(previousAuctionId)\n      const processedAuctionData = await processAuctionData(previousAuctionId, auctionData)\n      const [auctionBidders] = await farmAuctionContract.viewBidsPerAuction(previousAuctionId, 0, 500)\n      const sortedBidders = sortAuctionBidders(auctionBidders)\n      const { leaderboardThreshold } = processedAuctionData\n      const winnerAddresses = sortedBidders\n        .filter((bidder) => leaderboardThreshold.lte(bidder.amount))\n        .map((bidder) => bidder.account)\n      if (winnerAddresses.includes(account)) {\n        const accountBidderData = sortedBidders.find((bidder) => bidder.account === account)\n        setWonAuction({\n          auction: processedAuctionData,\n          bidderData: accountBidderData,\n        })\n      }\n    }\n\n    const winnerAddresses = bidders\n      .filter((bidder) => currentAuction.leaderboardThreshold.lte(bidder.amount))\n      .map((bidder) => bidder.account)\n    const previousAuctionId = currentAuction.id - 1\n    if (currentAuction.status === AuctionStatus.Closed && winnerAddresses.includes(account)) {\n      const accountBidderData = bidders.find((bidder) => bidder.account === account)\n      setWonAuction({\n        auction: currentAuction,\n        bidderData: accountBidderData,\n      })\n    } else if (previousAuctionId > 0) {\n      checkIfWonPreviousAuction(previousAuctionId)\n    }\n  }, [currentAuction, bidders, account, farmAuctionContract])\n\n  return wonAuction\n}\n\nexport default useCongratulateAuctionWinner\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Card, CardHeader, CardBody, Flex } from '@pancakeswap/uikit'\nimport { Auction, Bidder } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useCongratulateAuctionWinner from '../hooks/useCongratulateAuctionWinner'\nimport WhitelistedBiddersButton from './WhitelistedBiddersButton'\n\nconst StyledReclaimBidCard = styled(Card)`\n  margin-top: 16px;\n  flex: 1;\n`\n\nconst CongratulationsCard: React.FC<{ currentAuction: Auction; bidders: Bidder[] }> = ({ currentAuction, bidders }) => {\n  const { t } = useTranslation()\n  const wonAuction = useCongratulateAuctionWinner(currentAuction, bidders)\n\n  if (!wonAuction) {\n    return null\n  }\n\n  const { auction, bidderData } = wonAuction\n  const { amount, position } = bidderData\n  return (\n    <StyledReclaimBidCard mb={['24px', null, null, '0']}>\n      <CardHeader>\n        <Heading>{t('Congratulations!')}</Heading>\n      </CardHeader>\n      <CardBody>\n        <Text mb=\"16px\">{t('Your bid in Auction #%auctionId% was successful.', { auctionId: auction.id })}</Text>\n        <Text>{t('Your Farm will be launched as follows:')}</Text>\n        <Flex flexDirection=\"column\" mb=\"24px\">\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\">\n            <Text color=\"textSubtle\">{t('Multiplier per farm')}</Text>\n            <Text>1x {t('each')}</Text>\n          </Flex>\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\">\n            <Text color=\"textSubtle\">{t('Total whitelisted bidders')}</Text>\n            <WhitelistedBiddersButton />\n          </Flex>\n        </Flex>\n\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text color=\"textSubtle\">{t('Your total bid')}</Text>\n          <Text>{getBalanceNumber(amount).toLocaleString()} MByte</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text color=\"textSubtle\">{t('Your position')}</Text>\n          <Text>#{position}</Text>\n        </Flex>\n      </CardBody>\n    </StyledReclaimBidCard>\n  )\n}\n\nexport default CongratulationsCard\n","import React, { useState, useEffect } from 'react'\nimport { Text, Flex, Skeleton, Image } from '@pancakeswap/uikit'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { ethersToBigNumber } from 'utils/bigNumber'\nimport Balance from 'components/Balance'\nimport styled from 'styled-components'\n\nconst BurnedText = styled(Text)`\n  font-size: 52px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 64px;\n  }\n`\n\nconst AuctionCakeBurn: React.FC = () => {\n  const [burnedCakeAmount, setBurnedCakeAmount] = useState(0)\n  const { t } = useTranslation()\n  const farmAuctionContract = useFarmAuctionContract()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const burnedAmountAsUSD = cakePriceBusd.times(burnedCakeAmount)\n\n  useEffect(() => {\n    const fetchBurnedCakeAmount = async () => {\n      try {\n        const amount = await farmAuctionContract.totalCollected()\n        const amountAsBN = ethersToBigNumber(amount)\n        setBurnedCakeAmount(getBalanceNumber(amountAsBN))\n      } catch (error) {\n        console.error('Failed to fetch burned auction cake', error)\n      }\n    }\n    if (burnedCakeAmount === 0) {\n      fetchBurnedCakeAmount()\n    }\n  }, [burnedCakeAmount, farmAuctionContract])\n  return (\n    <Flex flexDirection={['column-reverse', null, 'row']}>\n      <Flex flexDirection=\"column\" flex=\"2\">\n        {burnedCakeAmount !== 0 ? (\n          <Balance fontSize=\"64px\" bold value={burnedCakeAmount} decimals={0} unit=\" MByte\" />\n        ) : (\n          <Skeleton width=\"256px\" height=\"64px\" />\n        )}\n        <BurnedText textTransform=\"uppercase\" bold color=\"secondary\">\n          {t('Burned')}\n        </BurnedText>\n        <Text fontSize=\"24px\" bold>\n          {t('through community auctions so far!')}\n        </Text>\n        {!burnedAmountAsUSD.isNaN() && !burnedAmountAsUSD.isZero() ? (\n          <Text color=\"textSubtle\">\n            ~${burnedAmountAsUSD.toNumber().toLocaleString('en', { maximumFractionDigits: 0 })}\n          </Text>\n        ) : (\n          <Skeleton width=\"128px\" />\n        )}\n      </Flex>\n      <Image width={350} height={320} src=\"/images/burnt-cake.png\" alt={t('Burnt MByte')} />\n    </Flex>\n  )\n}\n\nexport default AuctionCakeBurn\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { Button, Heading, Text, Flex, Link, Breadcrumbs } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport PageHeader from 'components/PageHeader'\nimport PageSection from 'components/PageSection'\nimport useTheme from 'hooks/useTheme'\nimport FAQs from './components/FAQs'\nimport AuctionDetails from './components/AuctionDetailsCard'\nimport AuctionLeaderboard from './components/AuctionLeaderboard'\nimport { FORM_ADDRESS } from './helpers'\nimport { useCurrentFarmAuction } from './hooks/useCurrentFarmAuction'\nimport AuctionTimer from './components/AuctionTimer'\nimport ReclaimBidCard from './components/ReclaimBidCard'\nimport NotWhitelistedNotice from './components/NotWhitelistedNotice'\nimport CongratulationsCard from './components/CongratulationsCard'\nimport AuctionCakeBurn from './components/AuctionCakeBurn'\n\nconst StyledHeader = styled(PageHeader)`\n  max-height: max-content;\n  margin-bottom: -40px;\n  padding-bottom: 40px;\n  overflow: hidden;\n  ${({ theme }) => theme.mediaQueries.md} {\n    max-height: 600px;\n  }\n`\n\nconst Left = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n`\n\nconst Right = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  flex: 0.5;\n  & img {\n    height: 50%;\n    width: 50%;\n    max-height: 330px;\n    margin-top: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & img {\n      height: auto;\n      width: auto;\n    }\n  }\n`\n\nconst AuctionContainer = styled(Flex)`\n  width: 100%;\n  align-items: flex-start;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    gap: 24px;\n  }\n`\n\nconst FarmAuction = () => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { account } = useWeb3React()\n\n  const { currentAuction, bidders, connectedBidder, refreshBidders } = useCurrentFarmAuction(account)\n  const FAQS_BG_LIGHT = 'linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%)'\n  const FAQ_BG_DARK = 'linear-gradient(180deg, #434575 0%, #66578D 100%)'\n  const CAKE_BURN_BG_LIGHT = 'radial-gradient(50% 79.31% at 50% 50%, #FAF9FA 0%, #EAECF4 100%)'\n  const CAKE_BURN_TOP_FILL_LIGHT = 'radial-gradient(ellipse at bottom, #f0f1f6, #EAECF4)'\n  const CAKE_BURN_BG_DARK = 'radial-gradient(103.12% 50% at 50% 50%, #152534 0%, #191326 100%)'\n  const CAKE_BURN_TOP_FILL_DARK = '#191326'\n\n  return (\n    <>\n      <StyledHeader>\n        <Breadcrumbs>\n          <RouterLink to=\"/\" color=\"primary\" style={{ fontWeight: 400 }}>\n            {t('Home')}\n          </RouterLink>\n          <RouterLink to=\"/farms\" color=\"primary\" style={{ fontWeight: 400 }}>\n            {t('Farms')}\n          </RouterLink>\n          <Text>{t('Community Farm Auction')}</Text>\n        </Breadcrumbs>\n        <Flex flexDirection={['column-reverse', null, 'row']}>\n          <Left>\n            <Heading as=\"h1\" scale=\"xxl\" my=\"24px\">\n              {t('Community Farm Auction')}\n            </Heading>\n            <Text color=\"textSubtle\" mb=\"24px\">\n              {t('Each week, qualifying projects can bid MByte for the right to host a 7-day Farm on Metaprofitsdao.')}\n            </Text>\n            <Text color=\"textSubtle\">{t('This page is for projects to bid for farms.')}</Text>\n            <Text color=\"textSubtle\" mb=\"24px\">\n              {t(\n                'If you’re not a whitelisted project, you won’t be able to participate, but you can still view what’s going on!',\n              )}\n            </Text>\n            <Link external href={FORM_ADDRESS}>\n              <Button>\n                <Text color=\"white\" bold fontSize=\"16px\" mr=\"4px\">\n                  {t('Apply for a Farm/Pool')}\n                </Text>\n              </Button>\n            </Link>\n          </Left>\n          <Right>\n            <img src=\"/images/decorations/auction-bunny.png\" alt={t('auction bunny')} />\n          </Right>\n        </Flex>\n      </StyledHeader>\n      <>\n        <PageSection\n          innerProps={{ style: { margin: '0', width: '100%' } }}\n          background={theme.colors.background}\n          p=\"24px 0\"\n          index={2}\n          concaveDivider\n          dividerPosition=\"top\"\n        >\n          <NotWhitelistedNotice connectedBidder={connectedBidder} auction={currentAuction} />\n          <AuctionTimer auction={currentAuction} />\n          <AuctionContainer flexDirection={['column', null, null, 'row']}>\n            <Flex flex=\"1\" flexDirection=\"column\" width=\"100%\" minWidth=\"288px\">\n              <AuctionDetails\n                auction={currentAuction}\n                connectedBidder={connectedBidder}\n                refreshBidders={refreshBidders}\n              />\n              {connectedBidder?.isWhitelisted && bidders && currentAuction && (\n                <CongratulationsCard currentAuction={currentAuction} bidders={bidders} />\n              )}\n              {connectedBidder?.isWhitelisted && <ReclaimBidCard />}\n            </Flex>\n            <AuctionLeaderboard auction={currentAuction} bidders={bidders} />\n          </AuctionContainer>\n        </PageSection>\n        <PageSection\n          background={theme.isDark ? CAKE_BURN_BG_DARK : CAKE_BURN_BG_LIGHT}\n          index={2}\n          innerProps={{ style: { width: '100%' } }}\n          dividerPosition=\"top\"\n          dividerFill={{ light: CAKE_BURN_TOP_FILL_LIGHT, dark: CAKE_BURN_TOP_FILL_DARK }}\n        >\n          <AuctionCakeBurn />\n        </PageSection>\n        <PageSection\n          background={theme.isDark ? FAQ_BG_DARK : FAQS_BG_LIGHT}\n          clipFill={{ light: '#CBD7EF', dark: '#434575' }}\n          dividerFill={{ light: CAKE_BURN_BG_LIGHT, dark: CAKE_BURN_BG_DARK }}\n          concaveDivider\n          index={3}\n          dividerPosition=\"top\"\n        >\n          <FAQs />\n        </PageSection>\n      </>\n    </>\n  )\n}\n\nexport default FarmAuction\n","import { useState, useEffect } from 'react'\nimport isEqual from 'lodash/isEqual'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { Auction, ConnectedBidder, Bidder } from 'config/constants/types'\nimport { getBidderInfo } from 'config/constants/farmAuctions'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport useRefresh from 'hooks/useRefresh'\nimport { AUCTION_BIDDERS_TO_FETCH } from 'config'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { sortAuctionBidders, processAuctionData } from '../helpers'\n\nexport const useCurrentFarmAuction = (account: string) => {\n  const [currentAuction, setCurrentAuction] = useState<Auction | null>(null)\n  const [bidders, setBidders] = useState<Bidder[] | null>(null)\n  const [connectedBidder, setConnectedBidder] = useState<ConnectedBidder | null>(null)\n  // Used to force-refresh bidders after successful bid\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  const { fastRefresh } = useRefresh()\n\n  const farmAuctionContract = useFarmAuctionContract()\n\n  // Get latest auction id and its data\n  useEffect(() => {\n    const fetchCurrentAuction = async () => {\n      try {\n        const auctionId = await farmAuctionContract.currentAuctionId()\n        const auctionData = await farmAuctionContract.auctions(auctionId)\n        const processedAuctionData = await processAuctionData(auctionId.toNumber(), auctionData)\n        setCurrentAuction(processedAuctionData)\n      } catch (error) {\n        console.error('Failed to fetch current auction', error)\n      }\n    }\n    fetchCurrentAuction()\n  }, [farmAuctionContract, fastRefresh])\n\n  // Fetch bidders for current auction\n  useEffect(() => {\n    const fetchBidders = async () => {\n      try {\n        const [currentAuctionBidders] = await farmAuctionContract.viewBidsPerAuction(\n          currentAuction.id,\n          0,\n          AUCTION_BIDDERS_TO_FETCH,\n        )\n        const sortedBidders = sortAuctionBidders(currentAuctionBidders, currentAuction)\n        setBidders(sortedBidders)\n      } catch (error) {\n        console.error('Failed to fetch bidders', error)\n      }\n    }\n    if (currentAuction) {\n      fetchBidders()\n    }\n  }, [currentAuction, farmAuctionContract, lastUpdated, fastRefresh])\n\n  // Check if connected wallet is whitelisted\n  useEffect(() => {\n    const checkAccount = async () => {\n      try {\n        const whitelistedStatus = await farmAuctionContract.whitelisted(account)\n        setConnectedBidder({\n          account,\n          isWhitelisted: whitelistedStatus,\n        })\n      } catch (error) {\n        console.error('Failed to check if account is whitelisted', error)\n      }\n    }\n    if (account && (!connectedBidder || connectedBidder.account !== account)) {\n      checkAccount()\n    }\n    // Refresh UI if user logs out\n    if (!account) {\n      setConnectedBidder(null)\n    }\n  }, [account, connectedBidder, farmAuctionContract])\n\n  // Attach bidder data to connectedBidder object\n  useEffect(() => {\n    const getBidderData = () => {\n      if (bidders && bidders.length > 0) {\n        const bidderData = bidders.find((bidder) => bidder.account === account)\n        if (bidderData) {\n          return bidderData\n        }\n      }\n      const bidderInfo = getBidderInfo(account)\n      const defaultBidderData = {\n        position: null,\n        samePositionAsAbove: false,\n        isTopPosition: false,\n        amount: BIG_ZERO,\n        ...bidderInfo,\n      }\n      return defaultBidderData\n    }\n    if (connectedBidder && connectedBidder.isWhitelisted) {\n      const bidderData = getBidderData()\n      if (!isEqual(bidderData, connectedBidder.bidderData)) {\n        setConnectedBidder({\n          account,\n          isWhitelisted: true,\n          bidderData,\n        })\n      }\n    }\n  }, [account, connectedBidder, bidders])\n\n  return {\n    currentAuction,\n    bidders,\n    connectedBidder,\n    refreshBidders: setLastUpdated,\n  }\n}\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt' }\n  | { type: 'approve_error' }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt' }\n  | { type: 'confirm_error' }\n\ninterface State {\n  approvalState: LoadingState\n  confirmState: LoadingState\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  confirmState: 'idle',\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n      }\n    default:\n      return state\n  }\n}\n\ninterface OnSuccessProps {\n  state: State\n  receipt: ethers.providers.TransactionReceipt\n}\n\ninterface ApproveConfirmTransaction {\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\n  onConfirm: (params?) => Promise<ethers.providers.TransactionResponse>\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: ({ state, receipt }: OnSuccessProps) => void\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n  onApproveSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    hasApproveFailed: state.approvalState === 'fail',\n    hasConfirmFailed: state.confirmState === 'fail',\n    handleApprove: async () => {\n      try {\n        const tx = await onApprove()\n        dispatch({ type: 'approve_sending' })\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt' })\n          onApproveSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handleConfirm: async (params = {}) => {\n      dispatch({ type: 'confirm_sending' })\n      try {\n        const tx = await onConfirm(params)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'confirm_receipt' })\n          onSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'confirm_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n"],"sourceRoot":""}
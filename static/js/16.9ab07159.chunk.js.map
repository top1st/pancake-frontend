{"version":3,"sources":["components/ApproveConfirmButtons.tsx","components/FoldableSection/FoldableText.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","components/TabToggle/index.tsx","../node_modules/date-fns/esm/differenceInSeconds/index.js","../node_modules/date-fns/esm/add/index.js","../node_modules/date-fns/esm/differenceInHours/index.js","utils/types.ts","config/constants/farmAuctions.ts","views/FarmAuction/components/AuctionLeaderboard/index.tsx","views/FarmAuction/helpers.tsx","views/FarmAuction/components/FAQs.tsx","views/FarmAuction/components/PlaceBidModal.tsx","views/FarmAuction/components/AuctionDetailsCard/AuctionSchedule.tsx","views/FarmAuction/components/AuctionDetailsCard/CannotBidMessage.tsx","views/FarmAuction/hooks/useWhitelistedAddresses.ts","views/FarmAuction/components/WhitelistedBiddersModal.tsx","views/FarmAuction/components/WhitelistedBiddersButton.tsx","views/FarmAuction/components/AuctionDetailsCard/AuctionFooter.tsx","views/FarmAuction/components/AuctionDetailsCard/index.tsx","views/FarmAuction/hooks/useAuctionHistory.tsx","views/FarmAuction/components/AuctionLeaderboard/AuctionLeaderboardTable.tsx","views/FarmAuction/components/AuctionHistory.tsx","views/FarmAuction/components/AuctionLeaderboard/AuctionProgress.tsx","views/FarmAuction/components/AuctionLeaderboard/AuctionRibbon.tsx","views/FarmAuction/components/AuctionTimer.tsx","views/FarmAuction/hooks/useReclaimAuctionBid.ts","views/FarmAuction/components/ReclaimBidCard.tsx","views/FarmAuction/components/NotWhitelistedNotice.tsx","views/FarmAuction/hooks/useCongratulateAuctionWinner.tsx","views/FarmAuction/components/CongratulationsCard.tsx","views/FarmAuction/components/AuctionCakeBurn.tsx","views/FarmAuction/index.tsx","views/FarmAuction/hooks/useCurrentFarmAuction.ts","hooks/useApproveConfirmTransaction.ts"],"names":["ButtonArrangement","StyledApproveConfirmButtonRow","styled","div","theme","mediaQueries","md","Button","UIKitButton","iconAttrs","width","color","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isApproving","isConfirming","isConfirmDisabled","onApprove","onConfirm","buttonArrangement","ROW","confirmLabel","confirmId","t","useTranslation","confirmButtonText","disabled","onClick","endIcon","undefined","isLoading","justifyContent","id","Wrapper","Flex","StyledExpandableLabelWrapper","StyledChildrenFlex","isExpanded","colors","inputSecondary","FoldableText","title","children","props","useState","setIsExpanded","flexDirection","alignItems","pb","fontWeight","expanded","sharedStyles","clipPath","clipFill","css","isDark","dark","light","background","ConcaveContainer","Box","ConvexContainer","ConvexTop","height","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","dividerFill","index","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","getPadding","ChildrenWrapper","Container","sm","lg","PageSection","svgFill","hasCurvedDivider","concaveDivider","containerProps","innerProps","differenceInMilliseconds","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","getTime","Inner","input","TabToggle","button","isActive","text","textSubtle","card","TabToggleGroup","p","differenceInSeconds","diff","Math","floor","ceil","add","dirtyDate","duration","Date","NaN","years","toInteger","months","weeks","days","hours","minutes","seconds","date","dateWithMonths","addMonths","dateWithDays","addDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","MILLISECONDS_IN_HOUR","differenceInHours","FarmAuctionContractStatus","whitelistedBidders","account","farmName","tokenAddress","quoteToken","tokens","wbnb","tokenName","projectSite","busd","map","bidderConfig","lpAddress","getLpAddress","UNKNOWN_BIDDER","getBidderInfo","matchingBidder","find","bidder","toLowerCase","Tabs","FORM_ADDRESS","sortAuctionBidders","bidders","auction","sortedBidders","sort","a","b","amount","lt","gt","bidderInfo","position","adjustedPosition","unadjustedBidders","ethersToBigNumber","samePositionAsAbove","eq","isTopPosition","topLeaderboard","leaderboardThreshold","lte","getAuctionStatus","currentBlock","startBlock","endBlock","contractStatus","Pending","Close","AuctionStatus","Closed","Finished","Open","ToBeAnnounced","getDateForBlock","block","secondsUntilStart","BSC_BLOCK_TIME","simpleRpcProvider","getBlock","timestamp","processAuctionData","auctionId","auctionResponse","processedAuctionData","leaderboard","toNumber","initialBidAmount","DEFAULT_TOKEN_DECIMAL","getBlockNumber","startDate","endDate","auctionStatus","status","auctionDuration","processBidderAuctions","bidderAuctions","auctionIds","bids","claimed","nextCursor","auctions","StyledCard","Card","InlineLink","Link","List","ul","FaqLi","li","FAQs","as","scale","mb","mr","mt","display","href","external","StyledModal","Modal","ExistingInfo","dropdown","InnerContent","PlaceBidModal","onDismiss","connectedBidder","refreshBidders","useWeb3React","useTheme","callWithGasPrice","useCallWithGasPrice","bid","setBid","isMultipleOfTen","setIsMultipleOfTen","isMoreThanInitialBidAmount","setIsMoreThanInitialBidAmount","userNotEnoughCake","setUserNotEnoughCake","errorText","setErrorText","useTokenBalance","cake","address","userCake","balance","fetchStatus","userCakeBalance","getBalanceAmount","cakePriceBusd","usePriceCakeBusd","farmAuctionContract","useFarmAuctionContract","cakeContract","useCake","toastSuccess","useToast","bidderData","isFirstBid","isZero","isInvalidFirstBid","useEffect","parseFloat","FetchStatus","SUCCESS","useApproveConfirmTransaction","onRequiresApproval","allowance","response","currentAllowance","ethers","constants","MaxUint256","onApproveSuccess","receipt","Toast","txHash","transactionHash","bidAmount","BigNumber","times","toString","onSuccess","isApproved","isConfirmed","handleApprove","handleConfirm","setPercentageValue","percentage","rounding","ROUND_FLOOR","ROUND_CEIL","valueToSet","integerValue","headerBackground","gradients","cardHeader","num","getBalanceNumber","toLocaleString","bold","small","isWarning","placeholder","value","onUserInput","currencyValue","fontSize","formatNumber","textAlign","mx","variant","SEQUENTIAL","ConnectWalletButton","ScheduleInner","radii","default","cardBorder","AuctionSchedule","locale","currentLanguage","noLiveOrPendingAuction","textTransform","numHours","year","month","day","hour","minute","CannotBidMessage","useTooltip","placement","tooltip","targetRef","tooltipVisible","ref","useWhitelistedAddresses","whitelistedAddresses","setWhitelistedAddresses","viewBidders","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","bidderAddresses","console","error","fetchWhitelistedAddresses","InputContainer","AddressRowContainer","AddressRow","isMobile","target","rel","flex","truncateHash","WhitelistedBiddersModal","searchTerm","setSearchTerm","useMatchBreakpoints","filteredBidders","filter","includes","modalContent","py","px","onChange","e","overflow","maxHeight","WhitelistedBiddersButton","useModal","onShowWhitelistedBidders","length","FooterInner","AuctionFooter","isLiveOrPendingAuction","pt","prev","AuctionDetailsCard","AuctionDetails","onPresentPlaceBid","cardTitle","notConnectedOrNotWhitelisted","isWhitelisted","whitelistedAndReadyToBid","outline","startIcon","projectName","my","getBidSection","useAuctionHistory","auctionHistory","setAuctionHistory","fetchAuction","auctionData","viewBidsPerAuction","AUCTION_BIDDERS_TO_FETCH","auctionBidders","LeaderboardContainer","GridCell","warning","LeaderboardRow","pl","pr","maximumFractionDigits","component","LinkExternal","getBscScanLink","AuctionLeaderboardTable","noBidsText","visibleBidders","setVisibleBidders","totalBidders","slice","StyledIconButton","IconButton","textDisabled","AuctionHistory","mostRecentClosedAuctionId","historyAuctionId","setHistoryAuctionId","historyAuctionIdAsInt","parseInt","isXs","isSm","isMd","isLg","isXl","isXxl","isLargerScreen","isSmallerScreen","selectedAuction","Object","values","auctionTable","Number","isNaN","handleArrowPress","type","inputMode","pattern","event","currentTarget","validity","valid","valueAsNumber","newAuctionId","AuctionProgress","progress","setProgress","slowRefresh","useRefresh","now","percentagePassed","primaryStep","StyledRibbon","AuctionRibbon","noAuctionHistory","ribbonText","AuctionLeaderboardCard","getMostRecentClosedAuctionId","latestAuctionId","latestAuctionStatus","CurrentAuctionCard","Latest","activeTab","setActiveTab","Archive","AuctionCountDown","AuctionTimer","timerUntil","isAfter","timerTitle","secondsRemaining","getTimePeriods","verticalAlign","lineHeight","initialState","currentCursor","nextAuctionToCheck","auctionToReclaim","loading","reclaimReducer","state","action","payload","useReclaimAuctionBid","useReducer","dispatch","fetchBidderAuctions","viewBidderAuctions","RECLAIM_AUCTIONS_TO_FETCH","bidderAuctionsResponse","checkIfAuctionIsClaimable","auctionToCheck","claimable","accountBidderData","StyledReclaimBidCard","ReclaimBidCard","reclaimableAuction","checkForNextReclaimableAuction","NotWhitelistedNotice","icon","maxWidth","useCongratulateAuctionWinner","currentAuction","wonAuction","setWonAuction","checkIfWonPreviousAuction","previousAuctionId","winnerAddresses","CongratulationsCard","BurnedText","Text","AuctionCakeBurn","burnedCakeAmount","setBurnedCakeAmount","burnedAmountAsUSD","totalCollected","amountAsBN","fetchBurnedCakeAmount","Balance","decimals","unit","src","alt","StyledHeader","PageHeader","Left","Right","AuctionContainer","FarmAuction","setCurrentAuction","setBidders","setConnectedBidder","useLastUpdated","lastUpdated","setLastUpdated","fastRefresh","currentAuctionId","fetchCurrentAuction","currentAuctionBidders","fetchBidders","checkAccount","whitelisted","whitelistedStatus","BIG_ZERO","getBidderData","isEqual","useCurrentFarmAuction","CAKE_BURN_BG_LIGHT","CAKE_BURN_BG_DARK","to","style","margin","minWidth","AuctionLeaderboard","approvalState","confirmState","reducer","actions","noop","handlePreApprove","useRef","toastError","current","then","result","hasApproveFailed","hasConfirmFailed","tx","wait","params"],"mappings":"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","file":"static/js/16.9ab07159.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport enum ButtonArrangement {\r\n  ROW = 'row',\r\n  SEQUENTIAL = 'sequential',\r\n}\r\n\r\ninterface ApproveConfirmButtonsProps {\r\n  isApproveDisabled: boolean\r\n  isApproving: boolean\r\n  isConfirming: boolean\r\n  isConfirmDisabled: boolean\r\n  onApprove: () => void\r\n  onConfirm: () => void\r\n  buttonArrangement?: ButtonArrangement\r\n  confirmLabel?: string\r\n  confirmId?: string\r\n}\r\n\r\nconst StyledApproveConfirmButtonRow = styled.div`\r\n  align-items: center;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  justify-content: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: 1fr 24px 1fr;\r\n  }\r\n`\r\n\r\nconst Button = styled(UIKitButton)`\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    min-width: 160px;\r\n  }\r\n`\r\n\r\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\r\n\r\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\r\n\r\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\r\n  isApproveDisabled,\r\n  isApproving,\r\n  isConfirming,\r\n  isConfirmDisabled,\r\n  onApprove,\r\n  onConfirm,\r\n  buttonArrangement = ButtonArrangement.ROW,\r\n  confirmLabel,\r\n  confirmId,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const confirmButtonText = confirmLabel ?? t('Confirm')\r\n\r\n  const ApproveConfirmRow = () => {\r\n    return (\r\n      <StyledApproveConfirmButtonRow>\r\n        <Box>\r\n          <Button\r\n            disabled={isApproveDisabled}\r\n            onClick={onApprove}\r\n            endIcon={isApproving ? spinnerIcon : undefined}\r\n            isLoading={isApproving}\r\n          >\r\n            {isApproving ? t('Enabling') : t('Enable')}\r\n          </Button>\r\n        </Box>\r\n        <Flex justifyContent=\"center\">\r\n          <ChevronRight />\r\n          <ChevronBottom />\r\n        </Flex>\r\n        <Box>\r\n          <Button\r\n            id={confirmId}\r\n            onClick={onConfirm}\r\n            disabled={isConfirmDisabled}\r\n            isLoading={isConfirming}\r\n            endIcon={isConfirming ? spinnerIcon : undefined}\r\n          >\r\n            {isConfirming ? t('Confirming') : confirmButtonText}\r\n          </Button>\r\n        </Box>\r\n      </StyledApproveConfirmButtonRow>\r\n    )\r\n  }\r\n\r\n  const ApproveConfirmSequential = () => {\r\n    return (\r\n      <>\r\n        {isApproveDisabled ? (\r\n          <Box>\r\n            <Button\r\n              id={confirmId}\r\n              onClick={onConfirm}\r\n              disabled={isConfirmDisabled}\r\n              isLoading={isConfirming}\r\n              endIcon={isConfirming ? spinnerIcon : undefined}\r\n            >\r\n              {isConfirming ? t('Confirming') : confirmButtonText}\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\r\n              {isApproving ? t('Enabling') : t('Enable')}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\r\n}\r\n\r\nexport default ApproveConfirmButtons\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ExpandableLabel, Flex, FlexProps, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface FoldableTextProps extends FlexProps {\r\n  title?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  cursor: pointer;\r\n`\r\n\r\nconst StyledExpandableLabelWrapper = styled(Flex)`\r\n  button {\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n  }\r\n`\r\n\r\nconst StyledChildrenFlex = styled(Flex)<{ isExpanded?: boolean }>`\r\n  overflow: hidden;\r\n  height: ${({ isExpanded }) => (isExpanded ? '100%' : '0px')};\r\n  padding-bottom: ${({ isExpanded }) => (isExpanded ? '16px' : '0px')};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n`\r\n\r\nconst FoldableText: React.FC<FoldableTextProps> = ({ title, children, ...props }) => {\r\n  const { t } = useTranslation()\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n  return (\r\n    <Wrapper {...props} flexDirection=\"column\" onClick={() => setIsExpanded(!isExpanded)}>\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" pb=\"16px\">\r\n        <Text fontWeight=\"bold\">{title}</Text>\r\n        <StyledExpandableLabelWrapper>\r\n          <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n            {isExpanded ? t('Hide') : t('Details')}\r\n          </ExpandableLabel>\r\n        </StyledExpandableLabelWrapper>\r\n      </Flex>\r\n      <StyledChildrenFlex isExpanded={isExpanded} flexDirection=\"column\">\r\n        {children}\r\n      </StyledChildrenFlex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FoldableText\r\n","import React from 'react'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport { ClipFill } from '../types'\r\n\r\ninterface CurveProps {\r\n  clipFill?: ClipFill\r\n}\r\n\r\ninterface ContainerProps extends CurveProps {\r\n  clipPath: string\r\n}\r\n\r\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\r\n  width: 100%;\r\n  height: 20px;\r\n  clip-path: url(${clipPath});\r\n\r\n  background: ${() => {\r\n    if (theme.isDark) {\r\n      return clipFill?.dark || clipFill?.light || theme.colors.background\r\n    }\r\n    return clipFill?.light || theme.colors.background\r\n  }};\r\n\r\n  & svg {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ConcaveContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\r\n`\r\n\r\nconst ConvexContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\r\n`\r\n\r\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n\r\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\r\nimport { DividerFill, ClipFill } from './types'\r\n\r\ninterface CurvedDividerProps extends WrapperProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concave?: boolean\r\n  clipFill?: ClipFill\r\n}\r\ninterface WrapperProps {\r\n  index: number\r\n  dividerFill?: DividerFill\r\n}\r\n\r\nconst Wrapper = styled.div<WrapperProps>`\r\n  background: ${({ theme, dividerFill }) => {\r\n    if (theme.isDark) {\r\n      return dividerFill?.dark || dividerFill?.light || 'none'\r\n    }\r\n    return dividerFill?.light || dividerFill?.dark || 'none'\r\n  }};\r\n  z-index: ${({ index }) => index};\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\n\r\nconst ComponentWrapper = styled.div<WrapperProps>`\r\n  z-index: ${({ index }) => index + 1};\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`\r\n\r\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\r\n  index,\r\n  dividerPosition,\r\n  dividerComponent,\r\n  concave,\r\n  clipFill,\r\n  dividerFill,\r\n}) => {\r\n  const showConvexTop = dividerPosition === 'top' && !concave\r\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\r\n  const showConcaveTop = dividerPosition === 'top' && concave\r\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\r\n\r\n  const getConcaveDivider = () => {\r\n    return (\r\n      <>\r\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\r\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const getConvexDivider = () => {\r\n    return (\r\n      <>\r\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\r\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper index={index} dividerFill={dividerFill}>\r\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\r\n      {getConcaveDivider()}\r\n      {getConvexDivider()}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CurvedDivider\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\r\nimport Container from 'components/Layout/Container'\r\nimport CurvedDivider from './CurvedDivider'\r\nimport { ClipFill, DividerFill } from './types'\r\n\r\ninterface PageSectionProps extends BackgroundColorProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  hasCurvedDivider?: boolean\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concaveDivider?: boolean\r\n  containerProps?: BoxProps\r\n  innerProps?: BoxProps\r\n  clipFill?: ClipFill\r\n  dividerFill?: DividerFill\r\n}\r\n\r\ninterface BackgroundColorProps extends FlexProps {\r\n  index: number\r\n  background?: string\r\n  getPadding?: () => string\r\n}\r\n\r\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  z-index: ${({ index }) => index - 1};\r\n  background: ${({ background, theme }) => background || theme.colors.background};\r\n  padding: ${({ getPadding }) => getPadding()};\r\n`\r\n\r\nconst ChildrenWrapper = styled(Container)`\r\n  min-height: auto;\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 48px;\r\n    padding-bottom: 48px;\r\n  }\r\n`\r\n\r\nconst PageSection: React.FC<PageSectionProps> = ({\r\n  children,\r\n  background,\r\n  svgFill,\r\n  index = 1,\r\n  dividerComponent,\r\n  dividerPosition = 'bottom',\r\n  hasCurvedDivider = true,\r\n  concaveDivider = false,\r\n  clipFill,\r\n  dividerFill,\r\n  containerProps,\r\n  innerProps,\r\n  ...props\r\n}) => {\r\n  const getPadding = () => {\r\n    // No curved divider\r\n    if (!hasCurvedDivider) {\r\n      return '48px 0'\r\n    }\r\n    // Bottom curved divider\r\n    // Less bottom padding, as the divider is present there\r\n    if (dividerPosition === 'bottom') {\r\n      return '48px 0 14px'\r\n    }\r\n    // Top curved divider\r\n    // Less top padding, as the divider is present there\r\n    if (dividerPosition === 'top') {\r\n      return '14px 0 48px'\r\n    }\r\n    return '48px 0'\r\n  }\r\n\r\n  return (\r\n    <Box {...containerProps}>\r\n      {hasCurvedDivider && dividerPosition === 'top' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\r\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\r\n      </BackgroundColor>\r\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PageSection\r\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import React from 'react'\r\nimport { Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst Wrapper = styled(Flex)`\r\n  overflow-x: scroll;\r\n  padding: 0;\r\n  border-radius: 24px 24px 0 0;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  scrollbar-width: none; /* Firefox */\r\n`\r\n\r\nconst Inner = styled(Flex)`\r\n  justify-content: space-between;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  width: 100%;\r\n`\r\n\r\ninterface TabProps {\r\n  isActive?: boolean\r\n  onClick?: () => void\r\n}\r\n\r\nexport const TabToggle = styled.button<TabProps>`\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  flex: 1;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 16px;\r\n  margin: 0;\r\n  border-radius: 24px 24px 0 0;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: ${({ theme, isActive }) => (isActive ? theme.colors.text : theme.colors.textSubtle)};\r\n  background-color: ${({ theme, isActive }) => (isActive ? theme.card.background : theme.colors.input)};\r\n`\r\n\r\ninterface TabToggleGroupProps {\r\n  children: React.ReactElement[]\r\n}\r\n\r\nexport const TabToggleGroup: React.FC<TabToggleGroupProps> = ({ children }) => {\r\n  return (\r\n    <Wrapper p={['0 4px', '0 16px']}>\r\n      <Inner>{children}</Inner>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added       |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date; // Add weeks and days\n\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import ethers, { Contract, ContractFunction } from 'ethers'\r\n\r\nexport type MultiCallResponse<T> = T | null\r\n\r\n// Predictions\r\nexport type PredictionsClaimableResponse = boolean\r\n\r\nexport interface PredictionsLedgerResponse {\r\n  position: 0 | 1\r\n  amount: ethers.BigNumber\r\n  claimed: boolean\r\n}\r\n\r\nexport type PredictionsRefundableResponse = boolean\r\n\r\nexport interface PredictionsRoundsResponse {\r\n  epoch: ethers.BigNumber\r\n  startTimestamp: ethers.BigNumber\r\n  lockTimestamp: ethers.BigNumber\r\n  closeTimestamp: ethers.BigNumber\r\n  lockPrice: ethers.BigNumber\r\n  closePrice: ethers.BigNumber\r\n  lockOracleId: ethers.BigNumber\r\n  closeOracleId: ethers.BigNumber\r\n  totalAmount: ethers.BigNumber\r\n  bullAmount: ethers.BigNumber\r\n  bearAmount: ethers.BigNumber\r\n  rewardBaseCalAmount: ethers.BigNumber\r\n  rewardAmount: ethers.BigNumber\r\n  oracleCalled: boolean\r\n}\r\n\r\n// [rounds, ledgers, count]\r\nexport type PredictionsGetUserRoundsResponse = [ethers.BigNumber[], PredictionsLedgerResponse[], ethers.BigNumber]\r\n\r\nexport type PredictionsGetUserRoundsLengthResponse = ethers.BigNumber\r\n\r\nexport interface PredictionsContract extends Contract {\r\n  claimable: ContractFunction<PredictionsClaimableResponse>\r\n  getUserRounds: ContractFunction<PredictionsGetUserRoundsResponse>\r\n  getUserRoundsLength: ContractFunction<PredictionsGetUserRoundsLengthResponse>\r\n  ledger: ContractFunction<PredictionsLedgerResponse>\r\n  refundable: ContractFunction<PredictionsRefundableResponse>\r\n  rounds: ContractFunction<PredictionsRoundsResponse>\r\n}\r\n\r\n// Chainlink Oracle\r\nexport type ChainLinkOracleLatestAnswerResponse = ethers.BigNumber\r\n\r\nexport interface ChainLinkOracleContract extends Contract {\r\n  latestAnswer: ContractFunction<ChainLinkOracleLatestAnswerResponse>\r\n}\r\n\r\n// Farm Auction\r\n\r\n// Note: slightly different from AuctionStatus used throughout UI\r\nexport enum FarmAuctionContractStatus {\r\n  Pending,\r\n  Open,\r\n  Close,\r\n}\r\n\r\nexport interface AuctionsResponse {\r\n  status: FarmAuctionContractStatus\r\n  startBlock: ethers.BigNumber\r\n  endBlock: ethers.BigNumber\r\n  initialBidAmount: ethers.BigNumber\r\n  leaderboard: ethers.BigNumber\r\n  leaderboardThreshold: ethers.BigNumber\r\n}\r\n\r\nexport interface BidsPerAuction {\r\n  account: string\r\n  amount: ethers.BigNumber\r\n}\r\n\r\nexport type ViewBidsPerAuctionResponse = [BidsPerAuction[], ethers.BigNumber]\r\n\r\n// [auctionId, bids, claimed, nextCursor]\r\nexport type ViewBidderAuctionsResponse = [ethers.BigNumber[], ethers.BigNumber[], boolean[], ethers.BigNumber]\r\n\r\ntype GetWhitelistedAddressesResponse = [\r\n  {\r\n    account: string\r\n    lpToken: string\r\n    token: string\r\n  }[],\r\n  ethers.BigNumber,\r\n]\r\n\r\ninterface AuctionsHistoryResponse {\r\n  totalAmount: ethers.BigNumber\r\n  hasClaimed: boolean\r\n}\r\n\r\nexport interface FarmAuctionContract extends Contract {\r\n  currentAuctionId: ContractFunction<ethers.BigNumber>\r\n  viewBidders: ContractFunction<[string[], ethers.BigNumber]>\r\n  totalCollected: ContractFunction<ethers.BigNumber>\r\n  auctions: ContractFunction<AuctionsResponse>\r\n  claimable: ContractFunction<boolean>\r\n  viewBidsPerAuction: ContractFunction<ViewBidsPerAuctionResponse>\r\n  viewBidderAuctions: ContractFunction<ViewBidderAuctionsResponse>\r\n  whitelisted: ContractFunction<boolean>\r\n  getWhitelistedAddresses: ContractFunction<GetWhitelistedAddressesResponse>\r\n  auctionsHistory: ContractFunction<AuctionsHistoryResponse>\r\n}\r\n\r\n// Profile contract\r\n// [userId, points, teamId, tokenId, collectionAddress isActive]\r\nexport type GetUserProfileResponse = [\r\n  ethers.BigNumber,\r\n  ethers.BigNumber,\r\n  ethers.BigNumber,\r\n  string,\r\n  ethers.BigNumber,\r\n  boolean,\r\n]\r\n\r\nexport interface PancakeProfileContract extends Contract {\r\n  getUserProfile: ContractFunction<GetUserProfileResponse>\r\n  hasRegistered: ContractFunction<boolean>\r\n}\r\n","import getLpAddress from 'utils/getLpAddress'\r\nimport tokens from './tokens'\r\nimport { FarmAuctionBidderConfig } from './types'\r\n\r\nexport const whitelistedBidders: FarmAuctionBidderConfig[] = [\r\n  {\r\n    account: '0x9Ed5a62535A5Dd2dB2d9bB21bAc42035Af47F630',\r\n    farmName: 'NAV-BNB',\r\n    tokenAddress: '0xBFEf6cCFC830D3BaCA4F6766a0d4AaA242Ca9F3D',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Navcoin',\r\n    projectSite: 'https://navcoin.org/en',\r\n  },\r\n  {\r\n    account: '0x33723811B0FCa2a751f3912B80603Fe11499D894',\r\n    farmName: 'WSG-BNB',\r\n    tokenAddress: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Wall Street Games',\r\n    projectSite: 'https://wsg.gg/',\r\n  },\r\n  {\r\n    account: '0xD1C35C3F5D9d373A3F7c0668Fbe75801886e060f',\r\n    farmName: 'SWIRGE-BNB',\r\n    tokenAddress: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Swirge Network',\r\n    projectSite: 'https://swirge.com/',\r\n  },\r\n  {\r\n    account: '0x58092273a044D6e1d23B5095AE873F6E24E906ed',\r\n    farmName: 'rUSD-BUSD',\r\n    tokenAddress: '0x07663837218A003e66310a01596af4bf4e44623D',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'RAMP DEFI',\r\n    projectSite: 'https://www.rampdefi.com/',\r\n  },\r\n  {\r\n    account: '0xfAd3B5FeAC1aAF86B3f66D105F2fa9607164D86b',\r\n    farmName: 'FEED-BNB',\r\n    tokenAddress: '0x67d66e8Ec1Fd25d98B3Ccd3B19B7dc4b4b7fC493',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Feeder Finance',\r\n    projectSite: 'https://www.feeder.finance/',\r\n  },\r\n  {\r\n    account: '0x6a2d41c87c3F28C2C0b466424DE8e08FC2E23eDc',\r\n    farmName: 'BBT-BNB',\r\n    tokenAddress: '0xD48474E7444727bF500a32D5AbE01943f3A59A64',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'BitBook',\r\n    projectSite: 'https://www.bitbook.network/',\r\n  },\r\n  {\r\n    account: '0xAe126B90d2835c5A2D720b0687EC59f59b768183',\r\n    farmName: 'WOW-BUSD',\r\n    tokenAddress: '0x4DA996C5Fe84755C80e108cf96Fe705174c5e36A',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'WOWswap',\r\n    projectSite: 'https://wowswap.io/',\r\n  },\r\n  {\r\n    account: '0x88F0A6cb89909838d69E4E6e76eC21e2a7bdcA66',\r\n    farmName: 'BREW-BNB',\r\n    tokenAddress: '0x790Be81C3cA0e53974bE2688cDb954732C9862e1',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'CafeSwap Finance',\r\n    projectSite: 'https://app.cafeswap.finance/',\r\n  },\r\n  {\r\n    account: '0x0Cf86283ad1a1B7D04669696eD13BAE3d5925a0a',\r\n    farmName: 'SAKE-BNB',\r\n    tokenAddress: '0x8BD778B12b15416359A227F0533Ce2D91844e1eD',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'SakeSwap',\r\n    projectSite: 'https://bsc.sakeswap.finance/',\r\n  },\r\n  {\r\n    account: '0xCe059E8af96a654d4afe630Fa325FBF70043Ab11',\r\n    farmName: 'XBLZD-BNB',\r\n    tokenAddress: '0x9a946c3Cb16c08334b69aE249690C236Ebd5583E',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Blizzard',\r\n    projectSite: 'https://www.blizzard.money/',\r\n  },\r\n  {\r\n    account: '0x3069270fE50c6dc9c5D1B38Ec7b767B2FE7B981D',\r\n    farmName: 'HERO-BNB',\r\n    tokenAddress: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Metahero',\r\n    projectSite: 'https://metahero.io/',\r\n  },\r\n  {\r\n    account: '0x46D8e47b9A6487FDAB0a700b269A452cFeED49Aa',\r\n    farmName: 'MCRN-BNB',\r\n    tokenAddress: '0xacb2d47827C9813AE26De80965845D80935afd0B',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'MacaronSwap',\r\n    projectSite: 'https://www.macaronswap.finance/',\r\n  },\r\n  {\r\n    account: '0x1bA962acab22Be9e49C4cEBE7710c9201A72dFcc',\r\n    farmName: 'BABYCAKE-BNB',\r\n    tokenAddress: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Babycake',\r\n    projectSite: 'https://babycake.app/',\r\n  },\r\n  {\r\n    account: '0xCCcC0b22799E82A79007814Dbc6A194410DCcEA5',\r\n    farmName: 'BMON-BNB',\r\n    tokenAddress: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Binamon',\r\n    projectSite: 'https://binamon.org/',\r\n  },\r\n  {\r\n    account: '0x71eE6DE14c90700eE06C81aaBdBacD684cfe30fe',\r\n    farmName: 'BMON-BUSD',\r\n    tokenAddress: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'Binamon',\r\n    projectSite: 'https://binamon.org/',\r\n  },\r\n  {\r\n    account: '0x6cfA3ff4e96abe93a290dc3d7A911A483C194758',\r\n    farmName: 'ANY-BNB',\r\n    tokenAddress: '0xF68C9Df95a18B2A5a5fa1124d79EEEffBaD0B6Fa',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Anyswap',\r\n    projectSite: 'https://anyswap.exchange/',\r\n  },\r\n  {\r\n    account: '0xe596470D291Cb2D32ec111afC314B07006690c72',\r\n    farmName: 'PHX-BNB',\r\n    tokenAddress: '0xac86e5f9bA48d680516df50C72928c2ec50F3025',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Phoenix Finance',\r\n    projectSite: 'https://www.phoenixprotocol.net/',\r\n  },\r\n  {\r\n    account: '0x8f8c77987C0ea9dd2400383b623d9cbcBbAf98CF',\r\n    farmName: 'GMR-BNB',\r\n    tokenAddress: '0x0523215DCafbF4E4aA92117d13C6985a3BeF27D7',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'GMR Finance',\r\n    projectSite: 'https://www.gmr.finance/',\r\n  },\r\n  {\r\n    account: '0x786B313b01A25eddbF7f7461b48D60AF680d758C',\r\n    farmName: 'BP-BNB',\r\n    tokenAddress: '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'BunnyPark',\r\n    projectSite: 'https://www.bunnypark.com/',\r\n  },\r\n  {\r\n    account: '0x70d7eCEE276Ad5fDFc91B3C30d2c1cDb9dD442Fb',\r\n    farmName: 'DPET-BNB',\r\n    tokenAddress: '0xfb62AE373acA027177D1c18Ee0862817f9080d08',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'MyDefiPet',\r\n    projectSite: 'https://mydefipet.com/',\r\n  },\r\n  {\r\n    account: '0x8aC06b55C9812e3E574CF5A5F3b49619dF33099C',\r\n    farmName: 'NMX-BUSD',\r\n    tokenAddress: '0xd32d01A43c869EdcD1117C640fBDcfCFD97d9d65',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'Nominex',\r\n    projectSite: 'https://nominex.io/',\r\n  },\r\n  {\r\n    account: '0xd27E57Ff5dD3d78B03c85e2A2bB8dc37E67c5140',\r\n    farmName: 'POOLZ-BNB',\r\n    tokenAddress: '0x77018282fD033DAF370337A5367E62d8811Bc885',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Poolz Finance',\r\n    projectSite: 'https://poolz.finance/',\r\n  },\r\n  {\r\n    account: '0x0767a2f9c644b364Bc88Eea5a535afE506Ba6802',\r\n    farmName: 'ODDZ-BNB',\r\n    tokenAddress: '0xCD40F2670CF58720b694968698A5514e924F742d',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Oddz Finance',\r\n    projectSite: 'https://oddz.fi',\r\n  },\r\n  {\r\n    account: '0x2B6b2701d7F7b65BA2E1ec2d2dAa17d46B85A4fe',\r\n    farmName: 'UBXT-BUSD',\r\n    tokenAddress: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'UpBots',\r\n    projectSite: 'https://upbots.com/',\r\n  },\r\n  {\r\n    account: '0x875831249bA511a6f1E49c84D66E1A6F5601f7C6',\r\n    farmName: 'DND-BUSD',\r\n    tokenAddress: '0x14c358b573a4cE45364a3DBD84BBb4Dae87af034',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'DungeonSwap',\r\n    projectSite: 'https://dungeonswap.app/',\r\n  },\r\n  {\r\n    account: '0xb7d303BbaE2573513801C5F94aE0B61Fa5b3426F',\r\n    farmName: 'ZOON-BNB',\r\n    tokenAddress: '0x9D173E6c594f479B4d47001F8E6A95A7aDDa42bC',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'CryptoZoon',\r\n    projectSite: 'https://cryptozoon.io/',\r\n  },\r\n  {\r\n    account: '0x22d56946c6cc1d4ed09f02858ddb990fcc981c55',\r\n    farmName: 'HGET-BUSD',\r\n    tokenAddress: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'Hedget',\r\n    projectSite: 'https://www.hedget.com/',\r\n  },\r\n  {\r\n    account: '0x027D50F36fe3b64630170B3ba82FC64BfC9bc088',\r\n    farmName: 'FAN-BNB',\r\n    tokenAddress: '0xFAc3A1ED2480Da8F5c34576C0Da13F245239717d',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Fanadise',\r\n    projectSite: 'https://fanadise.com/',\r\n  },\r\n  {\r\n    account: '0x73f9eb8eB7109b171396C8cbffcb29839c8b3064',\r\n    farmName: 'PKMON-BUSD',\r\n    tokenAddress: '0x609D183Fb91a0fce59550b62ab7d2c931b0Bb1BE',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'PolkaMonster',\r\n    projectSite: 'https://polkamonster.game/',\r\n  },\r\n  {\r\n    account: '0x88Dba2cF8911A80cc50A1B392b5fF6b47B930330',\r\n    farmName: 'SFUND-BNB',\r\n    tokenAddress: '0x477bC8d23c634C154061869478bce96BE6045D12',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Seedify',\r\n    projectSite: 'https://launchpad.seedify.fund/',\r\n  },\r\n  {\r\n    account: '0xf1dD352EF3a94F60b3047B607C2Bd976401F538c',\r\n    farmName: 'GNT-BNB',\r\n    tokenAddress: '0xF750A26EB0aCf95556e8529E72eD530f3b60f348',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'GreenTrust',\r\n    projectSite: 'https://www.greentrusttoken.com/',\r\n  },\r\n  {\r\n    account: '0x3992D7D9Ed721257d8bD7501d280b857eD7F9C24',\r\n    farmName: 'TT-BUSD',\r\n    tokenAddress: '0x990E7154bB999FAa9b2fa5Ed29E822703311eA85',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'ThunderCore',\r\n    projectSite: 'https://www.thundercore.com/',\r\n  },\r\n  {\r\n    account: '0x2Ef317299888DD4a4F57FFf99FF2685D544fEAf1',\r\n    farmName: 'TT-BNB',\r\n    tokenAddress: '0x990E7154bB999FAa9b2fa5Ed29E822703311eA85',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'ThunderCore',\r\n    projectSite: 'https://www.thundercore.com/',\r\n  },\r\n  {\r\n    account: '0xB9a32da7F33731FfDa8e7ecCB91325eee8A524AC',\r\n    farmName: 'SMG-BNB',\r\n    tokenAddress: '0x6bfd576220e8444CA4Cc5f89Efbd7f02a4C94C16',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Smaugs NFT',\r\n    projectSite: 'https://smaugs.com',\r\n  },\r\n  {\r\n    account: '0x5ed6B80F0e8b1c7fdB783202d4a926BbED2d49ee',\r\n    farmName: 'TENFI-BNB',\r\n    tokenAddress: '0xd15C444F1199Ae72795eba15E8C1db44E47abF62',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'TEN Finance',\r\n    projectSite: 'https://ten.finance/',\r\n  },\r\n  {\r\n    account: '0x75015B56dA228A5367d313866f6520495344C65c',\r\n    farmName: 'BNX-BUSD',\r\n    tokenAddress: '0x8C851d1a123Ff703BD1f9dabe631b69902Df5f97',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'BinaryX',\r\n    projectSite: 'https://www.binaryx.pro/#/',\r\n  },\r\n  {\r\n    account: '0xCbD932aC66f645a3764733aACD30Ce50e522Fac1',\r\n    farmName: 'DVI-BNB',\r\n    tokenAddress: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Dvision',\r\n    projectSite: 'https://dvision.network/',\r\n  },\r\n  {\r\n    account: '0xeA96c1970b9E3d4258620F68Af95ddDEB5fbD68F',\r\n    farmName: 'SALE-BNB',\r\n    tokenAddress: '0x97bb08ba41f033beaac315169fc566ac9e0daf52',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'DxSale Network',\r\n    projectSite: 'https://dxsale.app',\r\n  },\r\n  {\r\n    account: '0xaDB2d11817Cd16595E4454aD03F95575c3B388f2',\r\n    farmName: 'MONI-BNB',\r\n    tokenAddress: '0x9573c88ae3e37508f87649f87c4dd5373c9f31e0',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Monsta Infinite',\r\n    projectSite: 'https://monstainfinite.com/',\r\n  },\r\n  {\r\n    account: '0xDa6e741A7f7d4d88d4210340069348704FDf21bf',\r\n    farmName: 'PROS-BNB',\r\n    tokenAddress: '0xed8c8aa8299c10f067496bb66f8cc7fb338a3405',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Prosper',\r\n    projectSite: 'https://prosper.so/',\r\n  },\r\n  {\r\n    account: '0xB651A851819638Cb120A46Db0E01Fa89006eE290',\r\n    farmName: 'CART-BNB',\r\n    tokenAddress: '0x5c8c8d560048f34e5f7f8ad71f2f81a89dbd273e',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Cryptoart.ai',\r\n    projectSite: 'https://cryptoart.ai/',\r\n  },\r\n  {\r\n    account: '0x73a4C2d21282dd9f9f2DF2aD3e06fd25aB487C9c',\r\n    farmName: 'XWIN-BNB',\r\n    tokenAddress: '0xd88ca08d8eec1E9E09562213Ae83A7853ebB5d28',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'xWIN Finance',\r\n    projectSite: 'https://xwin.finance/',\r\n  },\r\n  {\r\n    account: '0x7Db4456a73a9C94a381d244E9dfC76E83C05913E',\r\n    farmName: 'SWAPP-BNB',\r\n    tokenAddress: '0x0efe961c733ff46ce34c56a73eba0c6a0e18e0f5',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Swapp Protocol',\r\n    projectSite: 'https://swapp.ee',\r\n  },\r\n  {\r\n    account: '0xB93A33f4cA46c1E1D65387313706cB8728B75703',\r\n    farmName: 'AIRT-BNB',\r\n    tokenAddress: '0x016cf83732f1468150d87dcc5bdf67730b3934d3',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'AirNFTs',\r\n    projectSite: 'https://airnfts.com/',\r\n  },\r\n  {\r\n    account: '0x377056416332d017D2c2d140A097Ba8c2872bb60',\r\n    farmName: 'XMS-BNB',\r\n    tokenAddress: '0x7859b01bbf675d67da8cd128a50d155cd881b576',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Mars Ecosystem',\r\n    projectSite: 'https://marsecosystem.com/',\r\n  },\r\n  {\r\n    account: '0x6ff9B88eb94A976b0e1Db7713d8D765B8bE437a7',\r\n    farmName: 'LIGHT-BNB',\r\n    tokenAddress: '0x037838b556d9c9d654148a284682C55bB5f56eF4',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Lightning',\r\n    projectSite: 'https://lightningprotocol.finance/',\r\n  },\r\n  {\r\n    account: '0x235540Bd639308E51Efa89AbF2A9AF8bC1DEc877',\r\n    farmName: 'GENS-BUSD',\r\n    tokenAddress: '0x2CD14cbA3F26254beeD1d78158cd2B6F91809600',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'Genshiro',\r\n    projectSite: 'https://genshiro.equilibrium.io/en',\r\n  },\r\n  {\r\n    account: '0xc55A7183F6D060271010A4441c106f6a81D46E34',\r\n    farmName: 'WSPP-BNB',\r\n    tokenAddress: '0x46d502fac9aea7c5bc7b13c8ec9d02378c33d36f',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'WolfSafePoorPeople',\r\n    projectSite: 'https://wolfsafepoorpeople.com',\r\n  },\r\n  {\r\n    account: '0xC1d204015268CD808B765f024e04CE01d5Bff58D',\r\n    farmName: 'SHEESHA-BNB',\r\n    tokenAddress: '0x232fb065d9d24c34708eedbf03724f2e95abe768',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Sheesha Finance',\r\n    projectSite: 'https://sheeshafinance.io',\r\n  },\r\n  {\r\n    account: '0xb2bef43cb487bFc89770e2e88C23f6a2163133EE',\r\n    farmName: 'BSCS-BNB',\r\n    tokenAddress: '0xbcb24afb019be7e93ea9c43b7e22bb55d5b7f45d',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'BSCStation',\r\n    projectSite: 'https://bscstation.finance/',\r\n  },\r\n  {\r\n    account: '0x47e947F01A17F8004D486fC7E37222B205a4c20b',\r\n    farmName: 'ARV-BNB',\r\n    tokenAddress: '0x6679eB24F59dFe111864AEc72B443d1Da666B360',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Ariva',\r\n    projectSite: 'https://ariva.digital/',\r\n  },\r\n  {\r\n    account: '0x8595c4Ad15D51c5Bf920c249869Ec5b3250c2D4d',\r\n    farmName: 'ULTI-BNB',\r\n    tokenAddress: '0x42BFE4A3E023f2C90aEBFfbd9B667599Fa38514F',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'ULTI Arena',\r\n    projectSite: 'https://ultiarena.com',\r\n  },\r\n  {\r\n    account: '0x1723D77Afde343323b769271a83d5Aecada25e01',\r\n    farmName: 'ZOO-BUSD',\r\n    tokenAddress: '0x1D229B958D5DDFca92146585a8711aECbE56F095',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'ZOO Crypto World',\r\n    projectSite: 'https://zoogame.finance/',\r\n  },\r\n  {\r\n    account: '0x8b519cD36b6a3179a4C560FcE987203E33df0366',\r\n    farmName: 'HERA-BNB',\r\n    tokenAddress: '0x49c7295ff86eabf5bf58c6ebc858db4805738c01',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Hero Arena',\r\n    projectSite: 'https://heroarena.app/',\r\n  },\r\n  {\r\n    account: '0xaCc34268f5D7Cb9B11BfB1ba4D8bD2bc2B49EE4E',\r\n    farmName: 'DPS-BNB',\r\n    tokenAddress: '0xf275e1AC303a4C9D987a2c48b8E555A77FeC3F1C',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'DEEPSPACE',\r\n    projectSite: 'https://deepspace.game',\r\n  },\r\n  {\r\n    account: '0x050F559cD756cA09FC46988B6cf19ebF01256268',\r\n    farmName: 'BCOIN-BUSD',\r\n    tokenAddress: '0x00e1656e45f18ec6747F5a8496Fd39B50b38396D',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'Bomb Crypto',\r\n    projectSite: 'https://bombcrypto.io/',\r\n  },\r\n  {\r\n    account: '0x6524b3B11979D5b5c354D5A804be9711d767f38F',\r\n    farmName: 'XEUS-BUSD',\r\n    tokenAddress: '0x4E141769366634D9c4e498257Fa7EC204d22b634',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'XEUS',\r\n    projectSite: 'https://xeus.finance/',\r\n  },\r\n  {\r\n    account: '0x1Aa800bE7e9829DDF97C54EF750F5E42C2a6a884',\r\n    farmName: 'SHARPEI-BNB',\r\n    tokenAddress: '0xfE3AF7376e412a377358d5894C790bB3e00D0dc1',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'Shar Pei',\r\n    projectSite: 'https://sharpeitoken.io/',\r\n  },\r\n  {\r\n    account: '0x2c32E56756964aCdB650521c1F10bdb939D5Ff7B',\r\n    farmName: 'PID-BUSD',\r\n    tokenAddress: '0x1215Ed20aa507578ca352E195016F289e7A17f3A',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'PIDAO',\r\n    projectSite: 'https://www.pidao.finance/',\r\n  },\r\n  {\r\n    account: '0x4AD72A0841808b431525de29a7781d948675bAC7',\r\n    farmName: 'HTD-BUSD',\r\n    tokenAddress: '0x5E2689412Fae5c29BD575fbe1d5C1CD1e0622A8f',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'HeroesTD',\r\n    projectSite: 'https://heroestd.io/',\r\n  },\r\n  {\r\n    account: '0xFfD8457466bAa1f11Bb585c7fD772Ad1A8b82b64',\r\n    farmName: 'GMEE-BNB',\r\n    tokenAddress: '0x84e9a6F9D240FdD33801f7135908BfA16866939A',\r\n    quoteToken: tokens.wbnb,\r\n    tokenName: 'GAMEE',\r\n    projectSite: 'https://token.gamee.com/',\r\n  },\r\n  {\r\n    account: '0x820E53c3198dB5904938Bec31B3Ec3864a754c31',\r\n    farmName: 'ANTEX-BUSD',\r\n    tokenAddress: '0xCA1aCAB14e85F30996aC83c64fF93Ded7586977C',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'Antex',\r\n    projectSite: 'https://antex.org/',\r\n  },\r\n  {\r\n    account: '0x5905A1F7BAf19844874B8B16E5FC4cde639b7a32',\r\n    farmName: 'SIP-BUSD',\r\n    tokenAddress: '0x9e5965d28E8D44CAE8F9b809396E0931F9Df71CA',\r\n    quoteToken: tokens.busd,\r\n    tokenName: 'Space Sip',\r\n    projectSite: 'https://sip.space/',\r\n  },\r\n].map((bidderConfig) => ({\r\n  ...bidderConfig,\r\n  lpAddress: getLpAddress(bidderConfig.tokenAddress, bidderConfig.quoteToken),\r\n}))\r\n\r\nconst UNKNOWN_BIDDER: FarmAuctionBidderConfig = {\r\n  account: '',\r\n  tokenAddress: '',\r\n  quoteToken: tokens.wbnb,\r\n  farmName: 'Unknown',\r\n  tokenName: 'Unknown',\r\n}\r\n\r\nexport const getBidderInfo = (account: string): FarmAuctionBidderConfig => {\r\n  const matchingBidder = whitelistedBidders.find((bidder) => bidder.account.toLowerCase() === account.toLowerCase())\r\n  if (matchingBidder) {\r\n    return matchingBidder\r\n  }\r\n  return { ...UNKNOWN_BIDDER, account }\r\n}\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Card, Flex, Box, Spinner } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Auction, AuctionStatus, Bidder } from 'config/constants/types'\r\nimport { TabToggleGroup, TabToggle } from 'components/TabToggle'\r\nimport AuctionHistory from '../AuctionHistory'\r\nimport AuctionProgress from './AuctionProgress'\r\nimport AuctionRibbon from './AuctionRibbon'\r\nimport AuctionLeaderboardTable from './AuctionLeaderboardTable'\r\n\r\nconst AuctionLeaderboardCard = styled(Card)`\r\n  width: 100%;\r\n  flex: 2;\r\n`\r\n\r\ninterface AuctionLeaderboardProps {\r\n  auction: Auction\r\n  bidders: Bidder[]\r\n}\r\n\r\nenum Tabs {\r\n  Latest,\r\n  Archive,\r\n}\r\n\r\nconst getMostRecentClosedAuctionId = (latestAuctionId: number, latestAuctionStatus: AuctionStatus) => {\r\n  if (latestAuctionStatus === AuctionStatus.Closed) {\r\n    return latestAuctionId\r\n  }\r\n  if (latestAuctionId === 0) {\r\n    return null\r\n  }\r\n  return latestAuctionId - 1\r\n}\r\n\r\nconst CurrentAuctionCard: React.FC<AuctionLeaderboardProps> = ({ auction, bidders }) => {\r\n  const { t } = useTranslation()\r\n  const [activeTab, setActiveTab] = useState(Tabs.Latest)\r\n\r\n  if (!auction || !bidders) {\r\n    return (\r\n      <AuctionLeaderboardCard>\r\n        <TabToggleGroup>\r\n          <TabToggle isActive={activeTab === Tabs.Latest} onClick={() => setActiveTab(Tabs.Latest)}>\r\n            {t('Latest')}\r\n          </TabToggle>\r\n          <TabToggle isActive={activeTab === Tabs.Archive} onClick={() => setActiveTab(Tabs.Archive)}>\r\n            {t('Archive')}\r\n          </TabToggle>\r\n        </TabToggleGroup>\r\n        <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" height=\"320px\">\r\n          <Spinner />\r\n        </Flex>\r\n      </AuctionLeaderboardCard>\r\n    )\r\n  }\r\n  const { id, status } = auction\r\n\r\n  return (\r\n    <AuctionLeaderboardCard>\r\n      <TabToggleGroup>\r\n        <TabToggle isActive={activeTab === Tabs.Latest} onClick={() => setActiveTab(Tabs.Latest)}>\r\n          {t('Latest')}\r\n        </TabToggle>\r\n        <TabToggle isActive={activeTab === Tabs.Archive} onClick={() => setActiveTab(Tabs.Archive)}>\r\n          {t('Archive')}\r\n        </TabToggle>\r\n      </TabToggleGroup>\r\n      {activeTab === Tabs.Latest ? (\r\n        <Box position=\"relative\">\r\n          <Text bold fontSize=\"20px\" py=\"24px\" px={['12px', '24px']}>\r\n            {t('Auction #%auctionId%', { auctionId: id })}\r\n          </Text>\r\n          <AuctionRibbon auction={auction} noAuctionHistory={getMostRecentClosedAuctionId(id, status) === null} />\r\n          <AuctionProgress auction={auction} />\r\n          <AuctionLeaderboardTable bidders={bidders} noBidsText={t('No bids yet')} />\r\n        </Box>\r\n      ) : (\r\n        <AuctionHistory mostRecentClosedAuctionId={getMostRecentClosedAuctionId(id, status)} />\r\n      )}\r\n    </AuctionLeaderboardCard>\r\n  )\r\n}\r\n\r\nexport default CurrentAuctionCard\r\n","import { toDate, add, differenceInHours } from 'date-fns'\r\nimport { BSC_BLOCK_TIME, DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport { getBidderInfo } from 'config/constants/farmAuctions'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { AuctionsResponse, FarmAuctionContractStatus, BidsPerAuction, ViewBidderAuctionsResponse } from 'utils/types'\r\nimport { Auction, AuctionStatus, Bidder, BidderAuction } from 'config/constants/types'\r\nimport { ethersToBigNumber } from 'utils/bigNumber'\r\n\r\nexport const FORM_ADDRESS =\r\n  'https://docs.google.com/forms/d/e/1FAIpQLScUkwbsMWwg7L5jjGjEcmv6RsoCNhFDkV3xEpRu2KcJrr47Sw/viewform'\r\n\r\n// Sorts bidders received from smart contract by bid amount in descending order (biggest -> smallest)\r\n// Also amends bidder information with getBidderInfo\r\n// auction is required if data will be used for table display, hence in reclaim and congratulations card its omitted\r\nexport const sortAuctionBidders = (bidders: BidsPerAuction[], auction?: Auction): Bidder[] => {\r\n  const sortedBidders = [...bidders]\r\n    .sort((a, b) => {\r\n      if (a.amount.lt(b.amount)) {\r\n        return 1\r\n      }\r\n      if (a.amount.gt(b.amount)) {\r\n        return -1\r\n      }\r\n      return 0\r\n    })\r\n    .map((bidder, index) => {\r\n      const bidderInfo = getBidderInfo(bidder.account)\r\n      return {\r\n        ...bidderInfo,\r\n        position: index + 1,\r\n        account: bidder.account,\r\n        amount: bidder.amount,\r\n      }\r\n    })\r\n\r\n  // Positions need to be adjusted in case 2 bidders has the same bid amount\r\n  // adjustedPosition will always increase by 1 in the following block for the first bidder\r\n  let adjustedPosition = 0\r\n\r\n  return sortedBidders.map((bidder, index, unadjustedBidders) => {\r\n    const amount = ethersToBigNumber(bidder.amount)\r\n    const samePositionAsAbove = index === 0 ? false : bidder.amount.eq(unadjustedBidders[index - 1].amount)\r\n    adjustedPosition = samePositionAsAbove ? adjustedPosition : adjustedPosition + 1\r\n    // Reclaim and congratulations card don't need auction data or isTopPosition\r\n    // in this case it is set to false just to avoid TS errors\r\n    let isTopPosition = auction ? index + 1 <= auction.topLeaderboard : false\r\n    // This is here in case we closed auction with less/more winners for some reason\r\n    if (auction && auction.leaderboardThreshold.gt(0)) {\r\n      isTopPosition = auction.leaderboardThreshold.lte(amount)\r\n    }\r\n    return {\r\n      ...bidder,\r\n      position: adjustedPosition,\r\n      isTopPosition,\r\n      samePositionAsAbove,\r\n      amount,\r\n    }\r\n  })\r\n}\r\n\r\n// Determine if the auction is:\r\n// - Live and biddable\r\n// - Has been scheduled for specific future date\r\n// - Not announced yet\r\n// - Recently Finished/Closed\r\nconst getAuctionStatus = (\r\n  currentBlock: number,\r\n  startBlock: number,\r\n  endBlock: number,\r\n  contractStatus: FarmAuctionContractStatus,\r\n) => {\r\n  if (contractStatus === FarmAuctionContractStatus.Pending && !startBlock && !endBlock) {\r\n    return AuctionStatus.ToBeAnnounced\r\n  }\r\n  if (contractStatus === FarmAuctionContractStatus.Close) {\r\n    return AuctionStatus.Closed\r\n  }\r\n  if (currentBlock >= endBlock) {\r\n    return AuctionStatus.Finished\r\n  }\r\n  if (contractStatus === FarmAuctionContractStatus.Open && currentBlock < startBlock) {\r\n    return AuctionStatus.Pending\r\n  }\r\n  if (contractStatus === FarmAuctionContractStatus.Open && currentBlock > startBlock) {\r\n    return AuctionStatus.Open\r\n  }\r\n  return AuctionStatus.ToBeAnnounced\r\n}\r\n\r\nconst getDateForBlock = async (currentBlock: number, block: number) => {\r\n  const blocksUntilBlock = block - currentBlock\r\n  const secondsUntilStart = blocksUntilBlock * BSC_BLOCK_TIME\r\n  // if block already happened we can get timestamp via .getBlock(block)\r\n  if (currentBlock > block) {\r\n    try {\r\n      const { timestamp } = await simpleRpcProvider.getBlock(block)\r\n      return toDate(timestamp * 1000)\r\n    } catch {\r\n      add(new Date(), { seconds: secondsUntilStart })\r\n    }\r\n  }\r\n  return add(new Date(), { seconds: secondsUntilStart })\r\n}\r\n\r\n// Get additional auction information based on the date received from smart contract\r\nexport const processAuctionData = async (auctionId: number, auctionResponse: AuctionsResponse): Promise<Auction> => {\r\n  const processedAuctionData = {\r\n    ...auctionResponse,\r\n    topLeaderboard: auctionResponse.leaderboard.toNumber(),\r\n    initialBidAmount: ethersToBigNumber(auctionResponse.initialBidAmount).div(DEFAULT_TOKEN_DECIMAL).toNumber(),\r\n    leaderboardThreshold: ethersToBigNumber(auctionResponse.leaderboardThreshold),\r\n    startBlock: auctionResponse.startBlock.toNumber(),\r\n    endBlock: auctionResponse.endBlock.toNumber(),\r\n  }\r\n\r\n  // Get all required data and blocks\r\n  const currentBlock = await simpleRpcProvider.getBlockNumber()\r\n  const startDate = await getDateForBlock(currentBlock, processedAuctionData.startBlock)\r\n  const endDate = await getDateForBlock(currentBlock, processedAuctionData.endBlock)\r\n\r\n  const auctionStatus = getAuctionStatus(\r\n    currentBlock,\r\n    processedAuctionData.startBlock,\r\n    processedAuctionData.endBlock,\r\n    processedAuctionData.status,\r\n  )\r\n\r\n  return {\r\n    id: auctionId,\r\n    startDate,\r\n    endDate,\r\n    auctionDuration: differenceInHours(endDate, startDate),\r\n    ...processedAuctionData,\r\n    status: auctionStatus,\r\n  }\r\n}\r\n\r\nexport const processBidderAuctions = (\r\n  bidderAuctions: ViewBidderAuctionsResponse,\r\n): { auctions: BidderAuction[]; nextCursor: number } => {\r\n  const [auctionIds, bids, claimed, nextCursor] = bidderAuctions\r\n  const auctions = auctionIds.map((auctionId, index) => ({\r\n    id: auctionId.toNumber(),\r\n    amount: ethersToBigNumber(bids[index]),\r\n    claimed: claimed[index],\r\n  }))\r\n  return { auctions, nextCursor: nextCursor.toNumber() }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, Card, CardHeader, CardBody, Flex, Link, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport FoldableText from 'components/FoldableSection/FoldableText'\r\nimport { FORM_ADDRESS } from '../helpers'\r\n\r\nconst StyledCard = styled(Card)`\r\n  flex: 1;\r\n  height: fit-content;\r\n`\r\n\r\nconst InlineLink = styled(Link)`\r\n  display: inline;\r\n`\r\n\r\nconst List = styled.ul`\r\n  list-style-position: outside;\r\n  padding: 0 24px;\r\n\r\n  li {\r\n    line-height: 1.5;\r\n    margin-bottom: 4px;\r\n  }\r\n\r\n  li::marker {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst FaqLi = styled.li`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n`\r\n\r\nconst FAQs = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Heading as=\"h1\" scale=\"xxl\" mb=\"40px\">\r\n        {t('FAQs')}\r\n      </Heading>\r\n      <Flex flexDirection={['column', null, null, null, 'row']}>\r\n        <StyledCard mr={[null, null, null, null, '24px']} mb={['24px', null, null, null, '0']}>\r\n          <CardHeader>\r\n            <Heading>{t('How does it work?')}</Heading>\r\n          </CardHeader>\r\n          <CardBody p=\"0 24px 24px\">\r\n            <FoldableText title={t('Step 1: Submit application')} mt=\"24px\">\r\n              <Box display=\"inline\">\r\n                <Text display=\"inline\" color=\"textSubtle\">\r\n                  {t('Projects can submit an application to sponsor a yield farm and/or pool on MintySwap via the ')}\r\n                </Text>\r\n                <InlineLink href={FORM_ADDRESS} external>\r\n                  {t('Application Form')}\r\n                </InlineLink>\r\n              </Box>\r\n            </FoldableText>\r\n            <FoldableText title={t('Step 2: Await whitelisting')} mt=\"24px\">\r\n              <Box color=\"textSubtle\">\r\n                <Text color=\"textSubtle\" mb=\"4px\">\r\n                  {t('The MintySwap team will try to respond within a week.')}\r\n                </Text>\r\n                <List>\r\n                  <FaqLi>\r\n                    {t(\r\n                      'Community Farm qualifiers will be asked to provide the address of the wallet which you’ll use for bidding $MINTS in the auction.',\r\n                    )}\r\n                  </FaqLi>\r\n                  <FaqLi>{t('Core Farm/Pool qualifiers will receive further directions separately.')}</FaqLi>\r\n                </List>\r\n              </Box>\r\n            </FoldableText>\r\n            <FoldableText title={t('Step 3: During the auction')} mt=\"24px\">\r\n              <Text color=\"textSubtle\">\r\n                {t(\r\n                  'During the auction period, if you connect your project’s whitelisted wallet to the Auction page, you’ll see a “Place Bid” button during when the auction is live.',\r\n                )}\r\n              </Text>\r\n              <Text color=\"textSubtle\">\r\n                {t(\r\n                  'You can then commit $MINTS to bid during the auction, competing against other project for one of the available farms.',\r\n                )}\r\n              </Text>\r\n            </FoldableText>\r\n            <FoldableText title={t('Step 4: After the auction')} mt=\"24px\">\r\n              <Text color=\"textSubtle\">\r\n                {t('If your bid was not successful, you can reclaim your $MINTS on this page.')}\r\n              </Text>\r\n              <Text color=\"textSubtle\">\r\n                {t(\r\n                  'If your bid was successful, your farm will begin at the specified time. The $MINTS you bid will not be returned to you and will be added to our weekly $MINTS burn.',\r\n                )}\r\n              </Text>\r\n              <Text color=\"textSubtle\">\r\n                {t('So long as you are whitelisted, you’ll be able to participate in each new auction.')}\r\n              </Text>\r\n              <Text color=\"textSubtle\">\r\n                {t(\r\n                  'If two or more projects bid the exact same $MINTS amount and are contending for a spot in the winning bidders, their bids may be invalidated.',\r\n                )}\r\n              </Text>\r\n            </FoldableText>\r\n          </CardBody>\r\n        </StyledCard>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default FAQs\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { Modal, Text, Flex, BalanceInput, Box, Button, PancakeRoundIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { formatNumber, getBalanceAmount, getBalanceNumber } from 'utils/formatBalance'\r\nimport { ethersToBigNumber } from 'utils/bigNumber'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useTokenBalance, { FetchStatus } from 'hooks/useTokenBalance'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { useCake, useFarmAuctionContract } from 'hooks/useContract'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport useToast from 'hooks/useToast'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport ApproveConfirmButtons, { ButtonArrangement } from 'components/ApproveConfirmButtons'\r\nimport { ConnectedBidder } from 'config/constants/types'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport tokens from 'config/constants/tokens'\r\n\r\nconst StyledModal = styled(Modal)`\r\n  min-width: 280px;\r\n  max-width: 320px;\r\n  & > div:nth-child(2) {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ExistingInfo = styled(Box)`\r\n  padding: 24px;\r\n  background-color: ${({ theme }) => theme.colors.dropdown};\r\n`\r\n\r\nconst InnerContent = styled(Box)`\r\n  padding: 24px;\r\n`\r\n\r\ninterface PlaceBidModalProps {\r\n  onDismiss?: () => void\r\n  // undefined initialBidAmount is passed only if auction is not loaded\r\n  // in this case modal will not be possible to open\r\n  initialBidAmount?: number\r\n  connectedBidder: ConnectedBidder\r\n  refreshBidders: () => void\r\n}\r\n\r\nconst PlaceBidModal: React.FC<PlaceBidModalProps> = ({\r\n  onDismiss,\r\n  initialBidAmount,\r\n  connectedBidder,\r\n  refreshBidders,\r\n}) => {\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const [bid, setBid] = useState('')\r\n  const [isMultipleOfTen, setIsMultipleOfTen] = useState(false)\r\n  const [isMoreThanInitialBidAmount, setIsMoreThanInitialBidAmount] = useState(false)\r\n  const [userNotEnoughCake, setUserNotEnoughCake] = useState(false)\r\n  const [errorText, setErrorText] = useState(null)\r\n\r\n  const { balance: userCake, fetchStatus } = useTokenBalance(tokens.cake.address)\r\n  const userCakeBalance = getBalanceAmount(userCake)\r\n\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const farmAuctionContract = useFarmAuctionContract()\r\n  const cakeContract = useCake()\r\n\r\n  const { toastSuccess } = useToast()\r\n\r\n  const { bidderData } = connectedBidder\r\n  const { amount, position } = bidderData\r\n  const isFirstBid = amount.isZero()\r\n  const isInvalidFirstBid = isFirstBid && !isMoreThanInitialBidAmount\r\n\r\n  useEffect(() => {\r\n    setIsMoreThanInitialBidAmount(parseFloat(bid) >= initialBidAmount)\r\n    setIsMultipleOfTen(parseFloat(bid) % 10 === 0 && parseFloat(bid) !== 0)\r\n    if (fetchStatus === FetchStatus.SUCCESS && userCakeBalance.lt(bid)) {\r\n      setUserNotEnoughCake(true)\r\n    } else {\r\n      setUserNotEnoughCake(false)\r\n    }\r\n  }, [bid, initialBidAmount, fetchStatus, userCakeBalance])\r\n\r\n  useEffect(() => {\r\n    if (userNotEnoughCake) {\r\n      setErrorText(t('Insufficient $MINTS balance'))\r\n    } else if (!isMoreThanInitialBidAmount && isFirstBid) {\r\n      setErrorText(t('First bid must be %initialBidAmount% $MINTS or more.', { initialBidAmount }))\r\n    } else if (!isMultipleOfTen) {\r\n      setErrorText(t('Bid must be a multiple of 10'))\r\n    } else {\r\n      setErrorText(null)\r\n    }\r\n  }, [isMultipleOfTen, isMoreThanInitialBidAmount, userNotEnoughCake, initialBidAmount, t, isFirstBid])\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        try {\r\n          const response = await cakeContract.allowance(account, farmAuctionContract.address)\r\n          const currentAllowance = ethersToBigNumber(response)\r\n          return currentAllowance.gt(0)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return callWithGasPrice(cakeContract, 'approve', [farmAuctionContract.address, ethers.constants.MaxUint256])\r\n      },\r\n      onApproveSuccess: async ({ receipt }) => {\r\n        toastSuccess(\r\n          t('Contract approved - you can now place your bid!'),\r\n          <ToastDescriptionWithTx txHash={receipt.transactionHash} />,\r\n        )\r\n      },\r\n      onConfirm: () => {\r\n        const bidAmount = new BigNumber(bid).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n        return callWithGasPrice(farmAuctionContract, 'bid', [bidAmount])\r\n      },\r\n      onSuccess: async ({ receipt }) => {\r\n        refreshBidders()\r\n        onDismiss()\r\n        toastSuccess(t('Bid placed!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\r\n      },\r\n    })\r\n\r\n  const handleInputChange = (input: string) => {\r\n    setBid(input)\r\n  }\r\n\r\n  const setPercentageValue = (percentage: number) => {\r\n    const rounding = percentage === 1 ? BigNumber.ROUND_FLOOR : BigNumber.ROUND_CEIL\r\n    const valueToSet = getBalanceAmount(userCake.times(percentage)).div(10).integerValue(rounding).times(10)\r\n    setBid(valueToSet.toString())\r\n  }\r\n  return (\r\n    <StyledModal title={t('Place a Bid')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\r\n      <ExistingInfo>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text>{t('Your existing bid')}</Text>\r\n          <Text>{t('%num% $MINTS', { num: getBalanceNumber(amount).toLocaleString() })}</Text>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text>{t('Your position')}</Text>\r\n          <Text>{position ? `#${position}` : '-'}</Text>\r\n        </Flex>\r\n      </ExistingInfo>\r\n      <InnerContent>\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" pb=\"8px\">\r\n          <Text>{t('Bid a multiple of 10')}</Text>\r\n          <Flex>\r\n            <PancakeRoundIcon width=\"24px\" height=\"24px\" mr=\"4px\" />\r\n            <Text bold>$MINTS</Text>\r\n          </Flex>\r\n        </Flex>\r\n        {isFirstBid && (\r\n          <Text pb=\"8px\" small>\r\n            {t('First bid must be %initialBidAmount% $MINTS or more.', { initialBidAmount })}\r\n          </Text>\r\n        )}\r\n        <BalanceInput\r\n          isWarning={!isMultipleOfTen || isInvalidFirstBid}\r\n          placeholder=\"0\"\r\n          value={bid}\r\n          onUserInput={handleInputChange}\r\n          currencyValue={\r\n            cakePriceBusd.gt(0) &&\r\n            `~${bid ? cakePriceBusd.times(new BigNumber(bid)).toNumber().toLocaleString() : '0.00'} USD`\r\n          }\r\n        />\r\n        <Flex justifyContent=\"flex-end\" mt=\"8px\">\r\n          <Text fontSize=\"12px\" color=\"textSubtle\" mr=\"8px\">\r\n            {t('Balance')}:\r\n          </Text>\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            {formatNumber(userCakeBalance.toNumber(), 3, 3)}\r\n          </Text>\r\n        </Flex>\r\n        {errorText && (\r\n          <Text color=\"failure\" textAlign=\"right\" fontSize=\"12px\">\r\n            {errorText}\r\n          </Text>\r\n        )}\r\n        <Flex justifyContent=\"space-between\" mt=\"8px\" mb=\"24px\">\r\n          <Button\r\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\r\n            scale=\"xs\"\r\n            mx=\"2px\"\r\n            p=\"4px 16px\"\r\n            variant=\"tertiary\"\r\n            onClick={() => setPercentageValue(0.25)}\r\n          >\r\n            25%\r\n          </Button>\r\n          <Button\r\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\r\n            scale=\"xs\"\r\n            mx=\"2px\"\r\n            p=\"4px 16px\"\r\n            variant=\"tertiary\"\r\n            onClick={() => setPercentageValue(0.5)}\r\n          >\r\n            50%\r\n          </Button>\r\n          <Button\r\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\r\n            scale=\"xs\"\r\n            mx=\"2px\"\r\n            p=\"4px 16px\"\r\n            variant=\"tertiary\"\r\n            onClick={() => setPercentageValue(0.75)}\r\n          >\r\n            75%\r\n          </Button>\r\n          <Button\r\n            disabled={fetchStatus !== FetchStatus.SUCCESS}\r\n            scale=\"xs\"\r\n            mx=\"2px\"\r\n            p=\"4px 16px\"\r\n            variant=\"tertiary\"\r\n            onClick={() => setPercentageValue(1)}\r\n          >\r\n            MAX\r\n          </Button>\r\n        </Flex>\r\n        <Flex flexDirection=\"column\">\r\n          {account ? (\r\n            <ApproveConfirmButtons\r\n              isApproveDisabled={isApproved}\r\n              isApproving={isApproving}\r\n              isConfirmDisabled={\r\n                !isMultipleOfTen ||\r\n                getBalanceAmount(userCake).lt(bid) ||\r\n                isConfirmed ||\r\n                isInvalidFirstBid ||\r\n                userNotEnoughCake\r\n              }\r\n              isConfirming={isConfirming}\r\n              onApprove={handleApprove}\r\n              onConfirm={handleConfirm}\r\n              buttonArrangement={ButtonArrangement.SEQUENTIAL}\r\n            />\r\n          ) : (\r\n            <ConnectWalletButton />\r\n          )}\r\n        </Flex>\r\n        <Text color=\"textSubtle\" small mt=\"24px\">\r\n          {t('If your bid is unsuccessful, you’ll be able to reclaim your $MINTS after the auction.')}\r\n        </Text>\r\n      </InnerContent>\r\n    </StyledModal>\r\n  )\r\n}\r\n\r\nexport default PlaceBidModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Box } from '@pancakeswap/uikit'\r\nimport { Auction, AuctionStatus } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ScheduleInner = styled(Flex)`\r\n  flex-direction: column;\r\n  padding: 16px;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  border: 1px ${({ theme }) => theme.colors.cardBorder} solid;\r\n`\r\n\r\ninterface ScheduleProps {\r\n  auction: Auction\r\n  showForClosedAuction?: boolean\r\n}\r\n\r\nconst AuctionSchedule: React.FC<ScheduleProps> = ({ auction }) => {\r\n  const { startBlock, endBlock, auctionDuration, startDate, endDate, status } = auction\r\n  const {\r\n    t,\r\n    currentLanguage: { locale },\r\n  } = useTranslation()\r\n\r\n  const noLiveOrPendingAuction = status === AuctionStatus.ToBeAnnounced || status === AuctionStatus.Closed\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"12px\" bold color=\"secondary\" textTransform=\"uppercase\" mb=\"8px\">\r\n        {t('Auction Schedule')}\r\n      </Text>\r\n      <ScheduleInner>\r\n        {!noLiveOrPendingAuction && (\r\n          <Flex justifyContent=\"space-between\" mb=\"8px\">\r\n            <Text small color=\"textSubtle\">\r\n              {t('Auction duration')}\r\n            </Text>\r\n            <Text small>{t('%numHours% hours', { numHours: `~${auctionDuration.toString()}` })}</Text>\r\n          </Flex>\r\n        )}\r\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\r\n          <Text small color=\"textSubtle\">\r\n            {t('Start')}\r\n          </Text>\r\n          {noLiveOrPendingAuction ? (\r\n            <Text small>{t('To be announced')}</Text>\r\n          ) : (\r\n            <Box>\r\n              <Text small>\r\n                {startDate.toLocaleString(locale, {\r\n                  year: 'numeric',\r\n                  month: 'long',\r\n                  day: '2-digit',\r\n                  hour: '2-digit',\r\n                  minute: '2-digit',\r\n                })}\r\n              </Text>\r\n              <Text small textAlign=\"right\">\r\n                {t('Block %num%', { num: startBlock })}\r\n              </Text>\r\n            </Box>\r\n          )}\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text small color=\"textSubtle\">\r\n            {t('End')}\r\n          </Text>\r\n          {noLiveOrPendingAuction ? (\r\n            <Text small>{t('To be announced')}</Text>\r\n          ) : (\r\n            <Box>\r\n              <Text small>\r\n                {endDate.toLocaleString(locale, {\r\n                  year: 'numeric',\r\n                  month: 'long',\r\n                  day: '2-digit',\r\n                  hour: '2-digit',\r\n                  minute: '2-digit',\r\n                })}\r\n              </Text>\r\n              <Text small textAlign=\"right\">\r\n                {t('Block %num%', { num: endBlock })}\r\n              </Text>\r\n            </Box>\r\n          )}\r\n        </Flex>\r\n      </ScheduleInner>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AuctionSchedule\r\n","import React from 'react'\r\nimport { Text, Flex, HelpIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst CannotBidMessage: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { tooltip, targetRef, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text mb=\"16px\">{t('Only whitelisted project wallets can bid in the auction to create Community Farms.')}</Text>\r\n      <Text mb=\"16px\">{t('Bidding is only possible while the auction is live.')}</Text>\r\n      <Text>\r\n        {t(\r\n          'If you’re sure your project should be able to bid in this auction, make sure you’re connected with the correct (whitelisted) wallet.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'bottom' },\r\n  )\r\n  return (\r\n    <Flex justifyContent=\"center\" alignItems=\"center\">\r\n      <Text color=\"textSubtle\" small mr=\"8px\">\r\n        {t('Why cant I bid for a farm?')}\r\n      </Text>\r\n      <span ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" height=\"16px\" width=\"16px\" />\r\n      </span>\r\n      {tooltipVisible && tooltip}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CannotBidMessage\r\n","import { useState, useEffect } from 'react'\r\nimport { useFarmAuctionContract } from 'hooks/useContract'\r\nimport { getBidderInfo } from 'config/constants/farmAuctions'\r\nimport { FarmAuctionBidderConfig } from 'config/constants/types'\r\nimport { AUCTION_WHITELISTED_BIDDERS_TO_FETCH } from 'config'\r\n\r\nconst useWhitelistedAddresses = () => {\r\n  const [whitelistedAddresses, setWhitelistedAddresses] = useState<FarmAuctionBidderConfig[] | null>(null)\r\n  const farmAuctionContract = useFarmAuctionContract()\r\n\r\n  useEffect(() => {\r\n    const fetchWhitelistedAddresses = async () => {\r\n      try {\r\n        const [bidderAddresses] = await farmAuctionContract.viewBidders(0, AUCTION_WHITELISTED_BIDDERS_TO_FETCH)\r\n        const bidders = bidderAddresses.map((address) => getBidderInfo(address))\r\n        setWhitelistedAddresses(bidders)\r\n      } catch (error) {\r\n        console.error('Failed to fetch list of whitelisted addresses', error)\r\n      }\r\n    }\r\n    if (!whitelistedAddresses) {\r\n      fetchWhitelistedAddresses()\r\n    }\r\n  }, [farmAuctionContract, whitelistedAddresses])\r\n\r\n  return whitelistedAddresses\r\n}\r\n\r\nexport default useWhitelistedAddresses\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Box, Text, Flex, Input, OpenNewIcon, useMatchBreakpoints, Spinner } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { FarmAuctionBidderConfig } from 'config/constants/types'\r\nimport truncateHash from 'utils/truncateHash'\r\nimport useWhitelistedAddresses from '../hooks/useWhitelistedAddresses'\r\n\r\ninterface WhitelistedBiddersModalProps {\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledModal = styled(Modal)`\r\n  & > div:nth-child(2) {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst InputContainer = styled(Flex)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n`\r\n\r\nconst AddressRowContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 3fr 5fr 0.5fr;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 8px 24px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n  }\r\n`\r\n\r\nconst AddressRow: React.FC<{ bidder: FarmAuctionBidderConfig; isMobile: boolean }> = ({ bidder, isMobile }) => {\r\n  const { farmName, tokenName, account, projectSite } = bidder\r\n  return (\r\n    <a href={projectSite} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      <AddressRowContainer>\r\n        <Flex flexDirection=\"column\" flex=\"3\">\r\n          <Text>{farmName}</Text>\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            {tokenName}\r\n          </Text>\r\n        </Flex>\r\n        <Flex justifyContent={['center', null, 'flex-start']} alignItems=\"center\" flex=\"6\">\r\n          <Text mr=\"8px\">{isMobile ? truncateHash(account) : account}</Text>\r\n        </Flex>\r\n        <OpenNewIcon color=\"primary\" />\r\n      </AddressRowContainer>\r\n    </a>\r\n  )\r\n}\r\n\r\nconst WhitelistedBiddersModal: React.FC<WhitelistedBiddersModalProps> = ({ onDismiss }) => {\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { isMobile } = useMatchBreakpoints()\r\n  const bidders = useWhitelistedAddresses()\r\n\r\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(e.target.value)\r\n  }\r\n\r\n  const filteredBidders = bidders\r\n    ? bidders.filter(\r\n        ({ farmName, tokenName, account }) =>\r\n          farmName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n          tokenName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n          account.toLowerCase().includes(searchTerm.toLowerCase()),\r\n      )\r\n    : []\r\n\r\n  const modalContent = bidders ? (\r\n    filteredBidders.map((bidder) => <AddressRow key={bidder.account} bidder={bidder} isMobile={isMobile} />)\r\n  ) : (\r\n    <Flex justifyContent=\"center\" alignItems=\"center\" py=\"24px\">\r\n      <Spinner />\r\n    </Flex>\r\n  )\r\n\r\n  return (\r\n    <StyledModal\r\n      p=\"0\"\r\n      title={t('All Whitelisted Project Wallets')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <InputContainer py=\"16px\" px=\"24px\">\r\n        <Input placeholder={t('Search address or token')} value={searchTerm} onChange={handleSearchChange} />\r\n      </InputContainer>\r\n\r\n      <Box pb=\"24px\" overflow=\"scroll\" maxHeight=\"245px\">\r\n        {modalContent}\r\n      </Box>\r\n    </StyledModal>\r\n  )\r\n}\r\n\r\nexport default WhitelistedBiddersModal\r\n","import React from 'react'\r\nimport { useModal, Button, Skeleton } from '@pancakeswap/uikit'\r\nimport WhitelistedBiddersModal from './WhitelistedBiddersModal'\r\nimport useWhitelistedAddresses from '../hooks/useWhitelistedAddresses'\r\n\r\nconst WhitelistedBiddersButton: React.FC = () => {\r\n  const whitelistedBidders = useWhitelistedAddresses()\r\n  const [onShowWhitelistedBidders] = useModal(<WhitelistedBiddersModal />)\r\n\r\n  return whitelistedBidders ? (\r\n    <Button p=\"0\" variant=\"text\" scale=\"sm\" onClick={onShowWhitelistedBidders}>\r\n      {whitelistedBidders.length}\r\n    </Button>\r\n  ) : (\r\n    <Skeleton height=\"24px\" width=\"46px\" />\r\n  )\r\n}\r\n\r\nexport default WhitelistedBiddersButton\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Auction, AuctionStatus } from 'config/constants/types'\r\nimport WhitelistedBiddersButton from '../WhitelistedBiddersButton'\r\n\r\nconst FooterInner = styled(Box)`\r\n  background-color: ${({ theme }) => theme.colors.dropdown};\r\n`\r\n\r\nconst AuctionFooter: React.FC<{ auction: Auction }> = ({ auction }) => {\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { topLeaderboard, status } = auction\r\n\r\n  const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\r\n\r\n  return (\r\n    <CardFooter p=\"0\">\r\n      {isExpanded && (\r\n        <FooterInner>\r\n          <Flex p=\"16px\" flexDirection=\"column\">\r\n            {isLiveOrPendingAuction && (\r\n              <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\r\n                <Text color=\"textSubtle\">{t('Farms available')}</Text>\r\n                <Text>\r\n                  {topLeaderboard} ({t('top %num% bidders', { num: topLeaderboard })})\r\n                </Text>\r\n              </Flex>\r\n            )}\r\n            <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\r\n              <Text color=\"textSubtle\">{t('Multiplier per farm')}</Text>\r\n              <Text>1x {t('each')}</Text>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\r\n              <Text color=\"textSubtle\">{t('Total whitelisted bidders')}</Text>\r\n              <WhitelistedBiddersButton />\r\n            </Flex>\r\n          </Flex>\r\n        </FooterInner>\r\n      )}\r\n      <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\r\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\r\n          {isExpanded ? t('Hide') : t('Details')}\r\n        </ExpandableLabel>\r\n      </Flex>\r\n    </CardFooter>\r\n  )\r\n}\r\n\r\nexport default AuctionFooter\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Text,\r\n  Heading,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Flex,\r\n  Spinner,\r\n  Skeleton,\r\n  Tag,\r\n  Button,\r\n  CheckmarkCircleIcon,\r\n  useModal,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Auction, AuctionStatus, ConnectedBidder } from 'config/constants/types'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport PlaceBidModal from '../PlaceBidModal'\r\nimport AuctionSchedule from './AuctionSchedule'\r\nimport CannotBidMessage from './CannotBidMessage'\r\nimport AuctionFooter from './AuctionFooter'\r\n\r\nconst AuctionDetailsCard = styled(Card)`\r\n  flex: 1;\r\n`\r\n\r\ninterface AuctionDetailsProps {\r\n  auction: Auction\r\n  connectedBidder: ConnectedBidder\r\n  refreshBidders: () => void\r\n}\r\n\r\nconst AuctionDetails: React.FC<AuctionDetailsProps> = ({ auction, connectedBidder, refreshBidders }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const [onPresentPlaceBid] = useModal(\r\n    <PlaceBidModal\r\n      connectedBidder={connectedBidder}\r\n      refreshBidders={refreshBidders}\r\n      initialBidAmount={auction?.initialBidAmount}\r\n    />,\r\n  )\r\n\r\n  if (!auction) {\r\n    return (\r\n      <AuctionDetailsCard mb={['24px', null, null, '0']}>\r\n        <CardHeader>\r\n          <Heading>{t('Current Auction')}</Heading>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Flex justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\r\n            <Spinner />\r\n          </Flex>\r\n        </CardBody>\r\n      </AuctionDetailsCard>\r\n    )\r\n  }\r\n\r\n  const getBidSection = () => {\r\n    const notConnectedOrNotWhitelisted = !connectedBidder || (connectedBidder && !connectedBidder.isWhitelisted)\r\n    const whitelistedAndReadyToBid = !notConnectedOrNotWhitelisted && connectedBidder.bidderData\r\n    if (notConnectedOrNotWhitelisted || auction.status !== AuctionStatus.Open) {\r\n      return <CannotBidMessage />\r\n    }\r\n    if (whitelistedAndReadyToBid) {\r\n      const { amount, position } = connectedBidder.bidderData\r\n      return (\r\n        <>\r\n          <Tag outline variant=\"success\" startIcon={<CheckmarkCircleIcon />}>\r\n            {t('Connected as %projectName%', { projectName: connectedBidder.bidderData.tokenName })}\r\n          </Tag>\r\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"24px\">\r\n            <Text small color=\"textSubtle\">\r\n              {t('Your existing bid')}\r\n            </Text>\r\n            <Text small>{getBalanceNumber(amount).toLocaleString()} $MINTS</Text>\r\n          </Flex>\r\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\">\r\n            <Text small color=\"textSubtle\">\r\n              {t('Your position')}\r\n            </Text>\r\n            <Text small>{position ? `#${position}` : '-'}</Text>\r\n          </Flex>\r\n          <Button my=\"24px\" width=\"100%\" onClick={onPresentPlaceBid}>\r\n            {t('Place bid')}\r\n          </Button>\r\n          <Text color=\"textSubtle\" small>\r\n            {t('If your bid is unsuccessful, you’ll be able to reclaim your $MINTS after the auction.')}\r\n          </Text>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <Skeleton width=\"200px\" height=\"28px\" />\r\n        <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"24px\" px=\"8px\">\r\n          <Skeleton width=\"120px\" height=\"24px\" />\r\n          <Skeleton width=\"86px\" height=\"24px\" />\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\r\n          <Skeleton width=\"96px\" height=\"24px\" />\r\n          <Skeleton width=\"42px\" height=\"24px\" />\r\n        </Flex>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const cardTitle = auction.status === AuctionStatus.Closed ? t('Next Auction') : t('Current Auction')\r\n\r\n  return (\r\n    <AuctionDetailsCard mb={['24px', null, null, '0']}>\r\n      <CardHeader>\r\n        <Heading>{cardTitle}</Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <AuctionSchedule auction={auction} />\r\n        <Flex mt=\"24px\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n          {getBidSection()}\r\n        </Flex>\r\n      </CardBody>\r\n      <AuctionFooter auction={auction} />\r\n    </AuctionDetailsCard>\r\n  )\r\n}\r\n\r\nexport default AuctionDetails\r\n","import { useState, useEffect } from 'react'\r\nimport { useFarmAuctionContract } from 'hooks/useContract'\r\nimport { Auction, Bidder } from 'config/constants/types'\r\nimport { AUCTION_BIDDERS_TO_FETCH } from 'config'\r\nimport { processAuctionData, sortAuctionBidders } from '../helpers'\r\n\r\ninterface AuctionHistoryMap {\r\n  [key: number]: {\r\n    auction: Auction\r\n    bidders: Bidder[]\r\n  }\r\n}\r\n\r\nconst useAuctionHistory = (auctionId: number) => {\r\n  const [auctionHistory, setAuctionHistory] = useState<AuctionHistoryMap>({})\r\n\r\n  const farmAuctionContract = useFarmAuctionContract()\r\n\r\n  // Get past auction data\r\n  useEffect(() => {\r\n    const fetchAuction = async () => {\r\n      try {\r\n        const auctionData = await farmAuctionContract.auctions(auctionId)\r\n        const processedAuctionData = await processAuctionData(auctionId, auctionData)\r\n\r\n        const [auctionBidders] = await farmAuctionContract.viewBidsPerAuction(auctionId, 0, AUCTION_BIDDERS_TO_FETCH)\r\n        const sortedBidders = sortAuctionBidders(auctionBidders, processedAuctionData)\r\n        setAuctionHistory((prev) => ({\r\n          ...prev,\r\n          [auctionId]: { auction: processedAuctionData, bidders: sortedBidders },\r\n        }))\r\n      } catch (error) {\r\n        console.error('Failed to fetch auction history', error)\r\n      }\r\n    }\r\n    if (!auctionHistory[auctionId] && auctionId > 0) {\r\n      fetchAuction()\r\n    }\r\n  }, [farmAuctionContract, auctionHistory, auctionId])\r\n\r\n  return auctionHistory\r\n}\r\n\r\nexport default useAuctionHistory\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport {\r\n  Text,\r\n  Flex,\r\n  Box,\r\n  BunnyPlaceholderIcon,\r\n  Skeleton,\r\n  Button,\r\n  useMatchBreakpoints,\r\n  useModal,\r\n  SubMenu,\r\n  SubMenuItem,\r\n  EllipsisIcon,\r\n  LinkExternal,\r\n} from '@pancakeswap/uikit'\r\nimport { getBscScanLink } from 'utils'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { Bidder } from 'config/constants/types'\r\nimport WhitelistedBiddersModal from '../WhitelistedBiddersModal'\r\n\r\nconst LeaderboardContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 5fr 3fr 1fr;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: 3fr 5fr 5fr 1fr;\r\n  }\r\n`\r\n\r\nconst GridCell = styled(Flex)<{ isTopPosition: boolean }>`\r\n  height: 65px;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n\r\n  ${({ theme, isTopPosition }) => isTopPosition && `background-color: ${theme.colors.warning}2D;`}\r\n`\r\n\r\ninterface LeaderboardRowProps {\r\n  bidder: Bidder\r\n  cakePriceBusd: BigNumber\r\n  isMobile: boolean\r\n}\r\n\r\nconst LeaderboardRow: React.FC<LeaderboardRowProps> = ({ bidder, cakePriceBusd, isMobile }) => {\r\n  const { t } = useTranslation()\r\n  const { isTopPosition, position, samePositionAsAbove, farmName, tokenName, amount, projectSite, lpAddress, account } =\r\n    bidder\r\n  return (\r\n    <>\r\n      <GridCell isTopPosition={isTopPosition} pl={['12px', '24px']}>\r\n        <Flex>\r\n          <Text bold={isTopPosition} color={samePositionAsAbove ? 'textDisabled' : 'text'} textTransform=\"uppercase\">\r\n            #{position}\r\n          </Text>\r\n        </Flex>\r\n      </GridCell>\r\n      <GridCell isTopPosition={isTopPosition}>\r\n        <Flex flexDirection=\"column\" pl={['8px']}>\r\n          <Flex>\r\n            <Text bold={isTopPosition} mr=\"4px\">\r\n              {farmName}\r\n            </Text>\r\n            {!isMobile && <Text>(1x)</Text>}\r\n          </Flex>\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            {tokenName}\r\n          </Text>\r\n        </Flex>\r\n      </GridCell>\r\n      <GridCell isTopPosition={isTopPosition}>\r\n        <Flex flexDirection=\"column\" width=\"100%\" justifyContent=\"flex-end\" pr={[null, null, '24px']}>\r\n          <Text bold textTransform=\"uppercase\" width=\"100%\" textAlign=\"right\">\r\n            {getBalanceNumber(amount).toLocaleString()}\r\n          </Text>\r\n          {cakePriceBusd.gt(0) ? (\r\n            <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"right\">\r\n              ~${getBalanceNumber(amount.times(cakePriceBusd)).toLocaleString('en', { maximumFractionDigits: 0 })}\r\n            </Text>\r\n          ) : (\r\n            <Flex justifyContent=\"flex-end\">\r\n              <Skeleton width=\"48px\" />\r\n            </Flex>\r\n          )}\r\n        </Flex>\r\n      </GridCell>\r\n      <GridCell isTopPosition={isTopPosition}>\r\n        <SubMenu component={<EllipsisIcon height=\"16px\" width=\"16px\" />}>\r\n          {projectSite && (\r\n            <SubMenuItem as={LinkExternal} href={projectSite} bold={false} color=\"text\">\r\n              {t('Project Site')}\r\n            </SubMenuItem>\r\n          )}\r\n          {lpAddress && (\r\n            <SubMenuItem as={LinkExternal} href={`/info/pool/${lpAddress}`} bold={false} color=\"text\">\r\n              {t('LP Info')}\r\n            </SubMenuItem>\r\n          )}\r\n          {account && (\r\n            <SubMenuItem as={LinkExternal} href={getBscScanLink(account, 'address')} bold={false} color=\"text\">\r\n              {t('Bidder Address')}\r\n            </SubMenuItem>\r\n          )}\r\n        </SubMenu>\r\n      </GridCell>\r\n    </>\r\n  )\r\n}\r\n\r\nconst AuctionLeaderboardTable: React.FC<{ bidders: Bidder[]; noBidsText: string }> = ({ bidders, noBidsText }) => {\r\n  const [visibleBidders, setVisibleBidders] = useState(10)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const { t } = useTranslation()\r\n\r\n  const { isMobile } = useMatchBreakpoints()\r\n  const [onShowWhitelistedBidders] = useModal(<WhitelistedBiddersModal />)\r\n\r\n  const totalBidders = bidders.length\r\n\r\n  if (totalBidders === 0) {\r\n    return (\r\n      <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" py=\"24px\">\r\n        <Text mb=\"8px\">{noBidsText}</Text>\r\n        <BunnyPlaceholderIcon height=\"64px\" width=\"64px\" />\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <LeaderboardContainer>\r\n        <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\" pl={['12px', '24px']} py=\"16px\">\r\n          {t('Position')}\r\n        </Text>\r\n        <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\" pl={['8px']} py=\"16px\">\r\n          {t('Farm')}\r\n        </Text>\r\n        <Text\r\n          color=\"secondary\"\r\n          bold\r\n          fontSize=\"12px\"\r\n          textTransform=\"uppercase\"\r\n          textAlign=\"right\"\r\n          pr={[null, null, '24px']}\r\n          py=\"16px\"\r\n        >\r\n          {t('$MINTS bid')}\r\n        </Text>\r\n        <Box />\r\n        {/* Rows */}\r\n        {bidders.slice(0, visibleBidders).map((bidder) => (\r\n          <LeaderboardRow key={bidder.account} bidder={bidder} cakePriceBusd={cakePriceBusd} isMobile={isMobile} />\r\n        ))}\r\n      </LeaderboardContainer>\r\n      <Flex mt=\"16px\" px=\"24px\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n        {visibleBidders <= 10 && totalBidders > 10 && (\r\n          <Text color=\"textSubtle\" textAlign=\"center\">\r\n            {t('Showing top 10 bids only.')}{' '}\r\n            <Button px=\"0\" variant=\"text\" onClick={onShowWhitelistedBidders}>\r\n              {t('See all whitelisted bidders')}\r\n            </Button>\r\n          </Text>\r\n        )}\r\n        {visibleBidders < totalBidders && (\r\n          <Button\r\n            mt=\"16px\"\r\n            variant=\"text\"\r\n            onClick={() =>\r\n              setVisibleBidders((prev) => {\r\n                if (totalBidders - prev > 10) {\r\n                  return prev + 10\r\n                }\r\n                return totalBidders\r\n              })\r\n            }\r\n          >\r\n            {t('Show More')}\r\n          </Button>\r\n        )}\r\n      </Flex>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AuctionLeaderboardTable\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Text,\r\n  Flex,\r\n  Box,\r\n  Input,\r\n  ArrowBackIcon,\r\n  ArrowForwardIcon,\r\n  ArrowLastIcon,\r\n  IconButton,\r\n  BunnyPlaceholderIcon,\r\n  Spinner,\r\n  useMatchBreakpoints,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useAuctionHistory from '../hooks/useAuctionHistory'\r\nimport AuctionLeaderboardTable from './AuctionLeaderboard/AuctionLeaderboardTable'\r\n\r\ninterface AuctionHistoryProps {\r\n  mostRecentClosedAuctionId: number\r\n}\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  width: 32px;\r\n\r\n  :disabled {\r\n    background: none;\r\n\r\n    svg {\r\n      fill: ${({ theme }) => theme.colors.textDisabled};\r\n\r\n      path {\r\n        fill: ${({ theme }) => theme.colors.textDisabled};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst AuctionHistory: React.FC<AuctionHistoryProps> = ({ mostRecentClosedAuctionId }) => {\r\n  const [historyAuctionId, setHistoryAuctionId] = useState(\r\n    mostRecentClosedAuctionId ? mostRecentClosedAuctionId.toString() : '0',\r\n  )\r\n  const historyAuctionIdAsInt = parseInt(historyAuctionId, 10)\r\n\r\n  const {\r\n    t,\r\n    currentLanguage: { locale },\r\n  } = useTranslation()\r\n\r\n  const { isXs, isSm, isMd, isLg, isXl, isXxl } = useMatchBreakpoints()\r\n  const isLargerScreen = isLg || isXl || isXxl\r\n  const isSmallerScreen = isXs || isSm || isMd\r\n\r\n  const auctionHistory = useAuctionHistory(historyAuctionIdAsInt)\r\n  const selectedAuction = Object.values(auctionHistory).find(\r\n    (auctionData) => auctionData.auction.id === historyAuctionIdAsInt,\r\n  )\r\n\r\n  let auctionTable = selectedAuction ? (\r\n    <AuctionLeaderboardTable bidders={selectedAuction.bidders} noBidsText=\"No bids were placed in this auction\" />\r\n  ) : (\r\n    <Flex justifyContent=\"center\" alignItems=\"center\" p=\"24px\" height=\"250px\">\r\n      <Spinner />\r\n    </Flex>\r\n  )\r\n\r\n  if (Number.isNaN(historyAuctionIdAsInt)) {\r\n    auctionTable = (\r\n      <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" p=\"24px\" height=\"250px\">\r\n        <Text mb=\"8px\">{t('Please specify auction ID')}</Text>\r\n        <BunnyPlaceholderIcon height=\"64px\" width=\"64px\" />\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  const endDate = selectedAuction\r\n    ? selectedAuction.auction.endDate.toLocaleString(locale, {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n      })\r\n    : null\r\n\r\n  const handleHistoryAuctionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.currentTarget.validity.valid) {\r\n      const {\r\n        target: { value },\r\n      } = event\r\n      const valueAsNumber = +value\r\n      const newAuctionId =\r\n        valueAsNumber >= mostRecentClosedAuctionId\r\n          ? mostRecentClosedAuctionId.toString()\r\n          : valueAsNumber <= 0\r\n          ? ''\r\n          : value\r\n      setHistoryAuctionId(newAuctionId)\r\n    }\r\n  }\r\n\r\n  const handleArrowPress = (auctionId: number) => {\r\n    if (auctionId) {\r\n      setHistoryAuctionId(auctionId.toString())\r\n    } else {\r\n      // auctionId is NaN when the input is empty, the only button press that will trigger this func is 'forward one'\r\n      setHistoryAuctionId('1')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box py=\"24px\">\r\n      <Flex px={['12px', '24px']} justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex flex=\"3\" alignItems=\"center\">\r\n          <Text bold fontSize={isLargerScreen ? '20px' : '16px'} mr={['4px', '8px']}>\r\n            {t('Auction #')}\r\n          </Text>\r\n          <Box width=\"62px\" mr={['4px', '16px']}>\r\n            <Input\r\n              disabled={!mostRecentClosedAuctionId}\r\n              type=\"text\"\r\n              inputMode=\"numeric\"\r\n              pattern=\"^[0-9]+$\"\r\n              value={historyAuctionId}\r\n              onChange={handleHistoryAuctionChange}\r\n            />\r\n          </Box>\r\n          <StyledIconButton\r\n            disabled={!historyAuctionIdAsInt || historyAuctionIdAsInt <= 1}\r\n            variant=\"text\"\r\n            scale=\"sm\"\r\n            mr={['8px', '12px']}\r\n            onClick={() => handleArrowPress(historyAuctionIdAsInt - 1)}\r\n          >\r\n            <ArrowBackIcon />\r\n          </StyledIconButton>\r\n          <StyledIconButton\r\n            disabled={historyAuctionIdAsInt >= mostRecentClosedAuctionId}\r\n            variant=\"text\"\r\n            scale=\"sm\"\r\n            mr={['8px', '12px']}\r\n            onClick={() => handleArrowPress(historyAuctionIdAsInt + 1)}\r\n          >\r\n            <ArrowForwardIcon />\r\n          </StyledIconButton>\r\n          <StyledIconButton\r\n            disabled={historyAuctionIdAsInt >= mostRecentClosedAuctionId}\r\n            variant=\"text\"\r\n            scale=\"sm\"\r\n            onClick={() => handleArrowPress(mostRecentClosedAuctionId)}\r\n          >\r\n            <ArrowLastIcon />\r\n          </StyledIconButton>\r\n        </Flex>\r\n        {isLargerScreen && (\r\n          <Flex flex=\"2\" justifyContent=\"flex-end\">\r\n            {endDate && <Text>{t('Ended %date%', { date: endDate })}</Text>}\r\n          </Flex>\r\n        )}\r\n      </Flex>\r\n      {isSmallerScreen && (\r\n        <Flex px={['12px', '24px']} pt=\"8px\">\r\n          {endDate && <Text>{t('Ended %date%', { date: endDate })}</Text>}\r\n        </Flex>\r\n      )}\r\n      {mostRecentClosedAuctionId ? (\r\n        auctionTable\r\n      ) : (\r\n        <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" p=\"24px\" height=\"250px\">\r\n          <Text mb=\"8px\">{t('No history yet')}</Text>\r\n          <BunnyPlaceholderIcon height=\"64px\" width=\"64px\" />\r\n        </Flex>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AuctionHistory\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Progress } from '@pancakeswap/uikit'\r\nimport { differenceInSeconds } from 'date-fns'\r\nimport { Auction, AuctionStatus } from 'config/constants/types'\r\nimport useRefresh from 'hooks/useRefresh'\r\n\r\nconst AuctionProgress: React.FC<{ auction: Auction }> = ({ auction }) => {\r\n  const [progress, setProgress] = useState<number>(0)\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  // Note: opted to base it on date rather than block number to reduce the amount of calls and async handling\r\n  useEffect(() => {\r\n    if (auction.status === AuctionStatus.ToBeAnnounced || auction.status === AuctionStatus.Pending) {\r\n      setProgress(0)\r\n    } else {\r\n      const now = new Date()\r\n      const auctionDuration = differenceInSeconds(auction.endDate, auction.startDate)\r\n      const secondsPassed = differenceInSeconds(now, auction.startDate)\r\n      const percentagePassed = (secondsPassed * 100) / auctionDuration\r\n      setProgress(percentagePassed < 100 ? percentagePassed : 100)\r\n    }\r\n  }, [slowRefresh, auction])\r\n\r\n  return <Progress variant=\"flat\" primaryStep={progress} />\r\n}\r\n\r\nexport default AuctionProgress\r\n","import { Text } from '@pancakeswap/uikit'\r\nimport { Auction, AuctionStatus } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledRibbon = styled.div<{ color: string }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: ${({ theme, color }) => theme.colors[color]};\r\n  color: white;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  text-align: center;\r\n  width: 94px;\r\n  height: 94px;\r\n  z-index: 1;\r\n  clip-path: polygon(0 0, 40% 0, 100% 60%, 100% 100%);\r\n\r\n  & > div {\r\n    padding-top: 23%;\r\n    overflow: hidden;\r\n    transform: rotate(45deg);\r\n  }\r\n`\r\n\r\nconst AuctionRibbon: React.FC<{ auction: Auction; noAuctionHistory: boolean }> = ({ auction, noAuctionHistory }) => {\r\n  const { t } = useTranslation()\r\n  const { status } = auction\r\n\r\n  // Don't show Live or Finished in case of fresh contract with no history\r\n  if (noAuctionHistory) {\r\n    return null\r\n  }\r\n\r\n  let ribbonText = t('Finished')\r\n  let color = 'textDisabled'\r\n  if (status === AuctionStatus.Open) {\r\n    ribbonText = `${t('Live')}!`\r\n    color = 'success'\r\n  }\r\n  if (status === AuctionStatus.Pending) {\r\n    ribbonText = `${t('Get ready')}!`\r\n    color = 'warning'\r\n  }\r\n  return (\r\n    <StyledRibbon color={color}>\r\n      <Text color=\"white\" textTransform=\"uppercase\">\r\n        {ribbonText}\r\n      </Text>\r\n    </StyledRibbon>\r\n  )\r\n}\r\n\r\nexport default AuctionRibbon\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { isAfter, differenceInSeconds } from 'date-fns'\r\nimport { Text, Flex, PocketWatchIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { Auction, AuctionStatus } from 'config/constants/types'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst AuctionCountDown = styled(Flex)`\r\n  align-items: flex-end;\r\n  margin: 0 16px 0 16px;\r\n`\r\n\r\nconst AuctionTimer: React.FC<{ auction: Auction }> = ({ auction }) => {\r\n  const { t } = useTranslation()\r\n  if (!auction) {\r\n    return (\r\n      <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"48px\">\r\n        <Skeleton width=\"256px\" height=\"40px\" />\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  if (auction.status === AuctionStatus.ToBeAnnounced || auction.status === AuctionStatus.Closed) {\r\n    return null\r\n  }\r\n  if (auction.status === AuctionStatus.Finished) {\r\n    return (\r\n      <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"48px\">\r\n        <Text bold>{t('Closing')}...</Text>\r\n        <PocketWatchIcon height=\"40px\" width=\"40px\" />\r\n      </Flex>\r\n    )\r\n  }\r\n  const { startDate, endDate } = auction\r\n  const timerUntil = isAfter(startDate, new Date()) ? startDate : endDate\r\n  const timerTitle = timerUntil === endDate ? t('Ending in') : t('Next auction')\r\n  const secondsRemaining = differenceInSeconds(timerUntil, new Date())\r\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\r\n  return (\r\n    <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"48px\">\r\n      <Text bold>{timerTitle}: </Text>\r\n      <AuctionCountDown>\r\n        {days !== 0 && (\r\n          <>\r\n            <Text verticalAlign=\"baseline\" lineHeight=\"28px\" fontSize=\"24px\" bold color=\"secondary\" mr=\"4px\">\r\n              {days}\r\n            </Text>\r\n            <Text verticalAlign=\"baseline\" bold mr=\"4px\">\r\n              {t('d')}\r\n            </Text>\r\n          </>\r\n        )}\r\n        <Text verticalAlign=\"baseline\" lineHeight=\"28px\" fontSize=\"24px\" bold color=\"secondary\" mr=\"4px\">\r\n          {hours}\r\n        </Text>\r\n        <Text verticalAlign=\"baseline\" bold mr=\"4px\">\r\n          {t('h')}\r\n        </Text>\r\n        <Text verticalAlign=\"baseline\" lineHeight=\"28px\" fontSize=\"24px\" bold color=\"secondary\" mr=\"4px\">\r\n          {minutes}\r\n        </Text>\r\n        <Text verticalAlign=\"baseline\" bold>\r\n          {t('m')}\r\n        </Text>\r\n      </AuctionCountDown>\r\n      <PocketWatchIcon height=\"40px\" width=\"40px\" />\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AuctionTimer\r\n","import { useEffect, useReducer } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BidderAuction } from 'config/constants/types'\r\nimport { useFarmAuctionContract } from 'hooks/useContract'\r\nimport { RECLAIM_AUCTIONS_TO_FETCH } from 'config'\r\nimport { processBidderAuctions, sortAuctionBidders } from '../helpers'\r\n\r\ninterface ReclaimableAuction {\r\n  id: number\r\n  amount: BigNumber\r\n  position: number\r\n}\r\n\r\ninterface ReclaimReducerState {\r\n  auctions: BidderAuction[]\r\n  currentCursor: number\r\n  nextCursor: number\r\n  nextAuctionToCheck: number // nextAuctionToCheck is array index in auctions\r\n  auctionToReclaim: ReclaimableAuction | null\r\n  loading: boolean\r\n}\r\n\r\nconst initialState: ReclaimReducerState = {\r\n  auctions: [],\r\n  currentCursor: 0,\r\n  nextCursor: 0,\r\n  nextAuctionToCheck: 0,\r\n  auctionToReclaim: null,\r\n  loading: false,\r\n}\r\n\r\nconst reclaimReducer = (state: ReclaimReducerState, action: { type: string; payload?: any }): ReclaimReducerState => {\r\n  switch (action.type) {\r\n    case 'setAuctions':\r\n      return {\r\n        auctions: action.payload.auctions,\r\n        currentCursor: state.currentCursor,\r\n        nextCursor: action.payload.nextCursor,\r\n        nextAuctionToCheck: 0,\r\n        auctionToReclaim: null,\r\n        loading: false,\r\n      }\r\n    case 'setAuctionToReclaim':\r\n      return {\r\n        ...state,\r\n        auctionToReclaim: action.payload.auctionToReclaim,\r\n        loading: false,\r\n      }\r\n    case 'checkNextAuction': {\r\n      const nextAuctionToCheck = state.nextAuctionToCheck + 1\r\n      if (nextAuctionToCheck === state.auctions.length) {\r\n        // Checked all auctions in the batch\r\n        return {\r\n          ...state,\r\n          auctions: [],\r\n          currentCursor: state.nextCursor,\r\n          auctionToReclaim: null,\r\n          loading: false,\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        nextAuctionToCheck,\r\n        auctionToReclaim: null,\r\n        loading: false,\r\n      }\r\n    }\r\n    case 'setLoading':\r\n      return { ...state, loading: action.payload.loading }\r\n    case 'reset':\r\n      return initialState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/**\r\n * This hook checks if user has participated in previous auctions and has some bids to claim back.\r\n */\r\nconst useReclaimAuctionBid = (): [ReclaimableAuction | null, () => void] => {\r\n  const { account } = useWeb3React()\r\n\r\n  const [state, dispatch] = useReducer(reclaimReducer, initialState)\r\n\r\n  const farmAuctionContract = useFarmAuctionContract()\r\n\r\n  const checkNextAuction = () => {\r\n    dispatch({ type: 'checkNextAuction' })\r\n  }\r\n\r\n  // Reset checking if account was switched\r\n  useEffect(() => {\r\n    dispatch({ type: 'reset' })\r\n  }, [account])\r\n\r\n  // Fetch auction data for auctions account has participated\r\n  useEffect(() => {\r\n    const fetchBidderAuctions = async () => {\r\n      try {\r\n        dispatch({ type: 'setLoading', payload: { loading: true } })\r\n\r\n        const bidderAuctionsResponse = await farmAuctionContract.viewBidderAuctions(\r\n          account,\r\n          state.currentCursor,\r\n          RECLAIM_AUCTIONS_TO_FETCH,\r\n        )\r\n\r\n        const { auctions, nextCursor } = processBidderAuctions(bidderAuctionsResponse)\r\n        if (auctions.length > 0) {\r\n          dispatch({ type: 'setAuctions', payload: { auctions, nextCursor } })\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch auctions for bidder', error)\r\n        dispatch({ type: 'setLoading', payload: { loading: false } })\r\n      }\r\n    }\r\n\r\n    if (!state.loading && account && state.currentCursor === state.nextCursor) {\r\n      fetchBidderAuctions()\r\n    }\r\n  }, [account, state, farmAuctionContract])\r\n\r\n  useEffect(() => {\r\n    const checkIfAuctionIsClaimable = async (auctionToCheck: BidderAuction) => {\r\n      dispatch({ type: 'setLoading', payload: { loading: true } })\r\n      try {\r\n        const isClaimable = await farmAuctionContract.claimable(auctionToCheck.id, account)\r\n        if (isClaimable) {\r\n          const [auctionBidders] = await farmAuctionContract.viewBidsPerAuction(auctionToCheck.id, 0, 500)\r\n          const sortedBidders = sortAuctionBidders(auctionBidders)\r\n          const accountBidderData = sortedBidders.find((bidder) => bidder.account === account)\r\n          const position = accountBidderData?.position\r\n          const auctionToReclaim = { id: auctionToCheck.id, amount: auctionToCheck.amount, position }\r\n          dispatch({ type: 'setAuctionToReclaim', payload: { auctionToReclaim } })\r\n        } else {\r\n          dispatch({ type: 'checkNextAuction' })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'setLoading', payload: { loading: false } })\r\n        console.error('Failed to check for unclaim bids', error)\r\n      }\r\n    }\r\n    const { auctions, nextAuctionToCheck, loading } = state\r\n    if (auctions.length > 0 && account && !loading) {\r\n      const auctionToCheck = auctions[nextAuctionToCheck]\r\n      checkIfAuctionIsClaimable(auctionToCheck)\r\n    }\r\n  }, [account, state, farmAuctionContract])\r\n\r\n  return [state.auctionToReclaim, checkNextAuction]\r\n}\r\n\r\nexport default useReclaimAuctionBid\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, Card, CardHeader, CardBody, Flex } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { useCake, useFarmAuctionContract } from 'hooks/useContract'\r\nimport { ethersToBigNumber } from 'utils/bigNumber'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport useToast from 'hooks/useToast'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { ethers } from 'ethers'\r\nimport ApproveConfirmButtons, { ButtonArrangement } from 'components/ApproveConfirmButtons'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport useReclaimAuctionBid from '../hooks/useReclaimAuctionBid'\r\n\r\nconst StyledReclaimBidCard = styled(Card)`\r\n  margin-top: 16px;\r\n  flex: 1;\r\n`\r\n\r\nconst ReclaimBidCard: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const [reclaimableAuction, checkForNextReclaimableAuction] = useReclaimAuctionBid()\r\n\r\n  const cakeContract = useCake()\r\n  const farmAuctionContract = useFarmAuctionContract()\r\n\r\n  const { toastSuccess } = useToast()\r\n\r\n  const { isApproving, isApproved, isConfirming, handleApprove, handleConfirm } = useApproveConfirmTransaction({\r\n    onRequiresApproval: async () => {\r\n      try {\r\n        const response = await cakeContract.allowance(account, farmAuctionContract.address)\r\n        const currentAllowance = ethersToBigNumber(response)\r\n        return currentAllowance.gt(0)\r\n      } catch (error) {\r\n        return false\r\n      }\r\n    },\r\n    onApprove: () => {\r\n      return callWithGasPrice(cakeContract, 'approve', [farmAuctionContract.address, ethers.constants.MaxUint256])\r\n    },\r\n    onApproveSuccess: async ({ receipt }) => {\r\n      toastSuccess(\r\n        t('Contract approved - you can now reclaim your bid!'),\r\n        <ToastDescriptionWithTx txHash={receipt.transactionHash} />,\r\n      )\r\n    },\r\n    onConfirm: () => {\r\n      return callWithGasPrice(farmAuctionContract, 'claimAuction', [reclaimableAuction.id])\r\n    },\r\n    onSuccess: async ({ receipt }) => {\r\n      checkForNextReclaimableAuction()\r\n      toastSuccess(t('Bid reclaimed!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\r\n    },\r\n  })\r\n\r\n  if (!reclaimableAuction) {\r\n    return null\r\n  }\r\n\r\n  const { position, amount } = reclaimableAuction\r\n\r\n  return (\r\n    <StyledReclaimBidCard mb={['24px', null, null, '0']}>\r\n      <CardHeader>\r\n        <Heading>{t('Reclaim Bid')}</Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Text mb=\"16px\">\r\n          {t('Your bid in Auction #%auctionId% was unsuccessful.', { auctionId: reclaimableAuction.id })}\r\n        </Text>\r\n        <Text bold mb=\"16px\">\r\n          {t('Reclaim your $MINTS now.')}\r\n        </Text>\r\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\r\n          <Text color=\"textSubtle\">{t('Your total bid')}</Text>\r\n          <Text>{t('%num% $MINTS', { num: getBalanceNumber(amount).toLocaleString() })}</Text>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\" mb=\"24px\">\r\n          <Text color=\"textSubtle\">{t('Your position')}</Text>\r\n          <Text>#{position}</Text>\r\n        </Flex>\r\n        {account ? (\r\n          <ApproveConfirmButtons\r\n            isApproveDisabled={isApproved}\r\n            isApproving={isApproving}\r\n            isConfirmDisabled={false}\r\n            isConfirming={isConfirming}\r\n            onApprove={handleApprove}\r\n            onConfirm={handleConfirm}\r\n            buttonArrangement={ButtonArrangement.SEQUENTIAL}\r\n            confirmLabel={t('Reclaim')}\r\n          />\r\n        ) : (\r\n          <ConnectWalletButton />\r\n        )}\r\n      </CardBody>\r\n    </StyledReclaimBidCard>\r\n  )\r\n}\r\n\r\nexport default ReclaimBidCard\r\n","import React from 'react'\r\nimport { Text, Flex, Message, Box, HelpIcon } from '@pancakeswap/uikit'\r\nimport { Auction, ConnectedBidder } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst NotWhitelistedNotice: React.FC<{ connectedBidder: ConnectedBidder; auction: Auction }> = ({\r\n  connectedBidder,\r\n  auction,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  if ((connectedBidder && connectedBidder.isWhitelisted) || !auction) {\r\n    return null\r\n  }\r\n  return (\r\n    <Flex mb=\"24px\" justifyContent=\"center\">\r\n      <Message variant=\"warning\" icon={<HelpIcon width=\"24px\" />}>\r\n        <Box maxWidth=\"800px\">\r\n          <Text bold>{t('Notice')}</Text>\r\n          <Text>{t('This page is a functional page, for projects to bid for farms.')}</Text>\r\n          <Text>\r\n            {t(\r\n              'If you’re not a whitelisted project, you won’t be able to participate, but you can still view the auction bids in real time!',\r\n            )}\r\n          </Text>\r\n          <Text>{t('Connect a whitelisted project wallet to participate in Auctions.')}</Text>\r\n        </Box>\r\n      </Message>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default NotWhitelistedNotice\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Auction, AuctionStatus, Bidder } from 'config/constants/types'\r\nimport { useFarmAuctionContract } from 'hooks/useContract'\r\nimport { processAuctionData, sortAuctionBidders } from '../helpers'\r\n\r\ninterface WonAuction {\r\n  auction: Auction\r\n  bidderData: Bidder\r\n}\r\n\r\nconst useCongratulateAuctionWinner = (currentAuction: Auction, bidders: Bidder[]): WonAuction => {\r\n  const [wonAuction, setWonAuction] = useState<WonAuction | null>(null)\r\n\r\n  const { account } = useWeb3React()\r\n\r\n  const farmAuctionContract = useFarmAuctionContract()\r\n\r\n  useEffect(() => {\r\n    const checkIfWonPreviousAuction = async (previousAuctionId: number) => {\r\n      const auctionData = await farmAuctionContract.auctions(previousAuctionId)\r\n      const processedAuctionData = await processAuctionData(previousAuctionId, auctionData)\r\n      const [auctionBidders] = await farmAuctionContract.viewBidsPerAuction(previousAuctionId, 0, 500)\r\n      const sortedBidders = sortAuctionBidders(auctionBidders)\r\n      const { leaderboardThreshold } = processedAuctionData\r\n      const winnerAddresses = sortedBidders\r\n        .filter((bidder) => leaderboardThreshold.lte(bidder.amount))\r\n        .map((bidder) => bidder.account)\r\n      if (winnerAddresses.includes(account)) {\r\n        const accountBidderData = sortedBidders.find((bidder) => bidder.account === account)\r\n        setWonAuction({\r\n          auction: processedAuctionData,\r\n          bidderData: accountBidderData,\r\n        })\r\n      }\r\n    }\r\n\r\n    const winnerAddresses = bidders\r\n      .filter((bidder) => currentAuction.leaderboardThreshold.lte(bidder.amount))\r\n      .map((bidder) => bidder.account)\r\n    const previousAuctionId = currentAuction.id - 1\r\n    if (currentAuction.status === AuctionStatus.Closed && winnerAddresses.includes(account)) {\r\n      const accountBidderData = bidders.find((bidder) => bidder.account === account)\r\n      setWonAuction({\r\n        auction: currentAuction,\r\n        bidderData: accountBidderData,\r\n      })\r\n    } else if (previousAuctionId > 0) {\r\n      checkIfWonPreviousAuction(previousAuctionId)\r\n    }\r\n  }, [currentAuction, bidders, account, farmAuctionContract])\r\n\r\n  return wonAuction\r\n}\r\n\r\nexport default useCongratulateAuctionWinner\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, Card, CardHeader, CardBody, Flex } from '@pancakeswap/uikit'\r\nimport { Auction, Bidder } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useCongratulateAuctionWinner from '../hooks/useCongratulateAuctionWinner'\r\nimport WhitelistedBiddersButton from './WhitelistedBiddersButton'\r\n\r\nconst StyledReclaimBidCard = styled(Card)`\r\n  margin-top: 16px;\r\n  flex: 1;\r\n`\r\n\r\nconst CongratulationsCard: React.FC<{ currentAuction: Auction; bidders: Bidder[] }> = ({ currentAuction, bidders }) => {\r\n  const { t } = useTranslation()\r\n  const wonAuction = useCongratulateAuctionWinner(currentAuction, bidders)\r\n\r\n  if (!wonAuction) {\r\n    return null\r\n  }\r\n\r\n  const { auction, bidderData } = wonAuction\r\n  const { amount, position } = bidderData\r\n  return (\r\n    <StyledReclaimBidCard mb={['24px', null, null, '0']}>\r\n      <CardHeader>\r\n        <Heading>{t('Congratulations!')}</Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Text mb=\"16px\">{t('Your bid in Auction #%auctionId% was successful.', { auctionId: auction.id })}</Text>\r\n        <Text>{t('Your Farm will be launched as follows:')}</Text>\r\n        <Flex flexDirection=\"column\" mb=\"24px\">\r\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\">\r\n            <Text color=\"textSubtle\">{t('Multiplier per farm')}</Text>\r\n            <Text>1x {t('each')}</Text>\r\n          </Flex>\r\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\">\r\n            <Text color=\"textSubtle\">{t('Total whitelisted bidders')}</Text>\r\n            <WhitelistedBiddersButton />\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\r\n          <Text color=\"textSubtle\">{t('Your total bid')}</Text>\r\n          <Text>{getBalanceNumber(amount).toLocaleString()} $MINTS</Text>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text color=\"textSubtle\">{t('Your position')}</Text>\r\n          <Text>#{position}</Text>\r\n        </Flex>\r\n      </CardBody>\r\n    </StyledReclaimBidCard>\r\n  )\r\n}\r\n\r\nexport default CongratulationsCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Text, Flex, Skeleton, Image } from '@pancakeswap/uikit'\r\nimport { useFarmAuctionContract } from 'hooks/useContract'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { ethersToBigNumber } from 'utils/bigNumber'\r\nimport Balance from 'components/Balance'\r\nimport styled from 'styled-components'\r\n\r\nconst BurnedText = styled(Text)`\r\n  font-size: 52px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 64px;\r\n  }\r\n`\r\n\r\nconst AuctionCakeBurn: React.FC = () => {\r\n  const [burnedCakeAmount, setBurnedCakeAmount] = useState(0)\r\n  const { t } = useTranslation()\r\n  const farmAuctionContract = useFarmAuctionContract()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n\r\n  const burnedAmountAsUSD = cakePriceBusd.times(burnedCakeAmount)\r\n\r\n  useEffect(() => {\r\n    const fetchBurnedCakeAmount = async () => {\r\n      try {\r\n        const amount = await farmAuctionContract.totalCollected()\r\n        const amountAsBN = ethersToBigNumber(amount)\r\n        setBurnedCakeAmount(getBalanceNumber(amountAsBN))\r\n      } catch (error) {\r\n        console.error('Failed to fetch burned auction cake', error)\r\n      }\r\n    }\r\n    if (burnedCakeAmount === 0) {\r\n      fetchBurnedCakeAmount()\r\n    }\r\n  }, [burnedCakeAmount, farmAuctionContract])\r\n  return (\r\n    <Flex flexDirection={['column-reverse', null, 'row']}>\r\n      <Flex flexDirection=\"column\" flex=\"2\">\r\n        {burnedCakeAmount !== 0 ? (\r\n          <Balance fontSize=\"64px\" bold value={burnedCakeAmount} decimals={0} unit=\" $MINTS\" />\r\n        ) : (\r\n          <Skeleton width=\"256px\" height=\"64px\" />\r\n        )}\r\n        <BurnedText textTransform=\"uppercase\" bold color=\"secondary\">\r\n          {t('Burned')}\r\n        </BurnedText>\r\n        <Text fontSize=\"24px\" bold>\r\n          {t('through community auctions so far!')}\r\n        </Text>\r\n        {!burnedAmountAsUSD.isNaN() && !burnedAmountAsUSD.isZero() ? (\r\n          <Text color=\"textSubtle\">\r\n            ~${burnedAmountAsUSD.toNumber().toLocaleString('en', { maximumFractionDigits: 0 })}\r\n          </Text>\r\n        ) : (\r\n          <Skeleton width=\"128px\" />\r\n        )}\r\n      </Flex>\r\n      <Image width={350} height={320} src=\"/images/burnt-cake.png\" alt={t('Burnt $MINTS')} />\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AuctionCakeBurn\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { Button, Heading, Text, Flex, Link, Breadcrumbs } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport PageHeader from 'components/PageHeader'\r\nimport PageSection from 'components/PageSection'\r\nimport useTheme from 'hooks/useTheme'\r\nimport FAQs from './components/FAQs'\r\nimport AuctionDetails from './components/AuctionDetailsCard'\r\nimport AuctionLeaderboard from './components/AuctionLeaderboard'\r\nimport { FORM_ADDRESS } from './helpers'\r\nimport { useCurrentFarmAuction } from './hooks/useCurrentFarmAuction'\r\nimport AuctionTimer from './components/AuctionTimer'\r\nimport ReclaimBidCard from './components/ReclaimBidCard'\r\nimport NotWhitelistedNotice from './components/NotWhitelistedNotice'\r\nimport CongratulationsCard from './components/CongratulationsCard'\r\nimport AuctionCakeBurn from './components/AuctionCakeBurn'\r\n\r\nconst StyledHeader = styled(PageHeader)`\r\n  max-height: max-content;\r\n  margin-bottom: -40px;\r\n  padding-bottom: 40px;\r\n  overflow: hidden;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    max-height: 600px;\r\n  }\r\n`\r\n\r\nconst Left = styled(Flex)`\r\n  flex-direction: column;\r\n  flex: 1;\r\n`\r\n\r\nconst Right = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 0.5;\r\n  & img {\r\n    height: 50%;\r\n    width: 50%;\r\n    max-height: 330px;\r\n    margin-top: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & img {\r\n      height: auto;\r\n      width: auto;\r\n    }\r\n  }\r\n`\r\n\r\nconst AuctionContainer = styled(Flex)`\r\n  width: 100%;\r\n  align-items: flex-start;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    gap: 24px;\r\n  }\r\n`\r\n\r\nconst FarmAuction = () => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n\r\n  const { currentAuction, bidders, connectedBidder, refreshBidders } = useCurrentFarmAuction(account)\r\n  const FAQS_BG_LIGHT = 'linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%)'\r\n  const FAQ_BG_DARK = 'linear-gradient(180deg, #434575 0%, #66578D 100%)'\r\n  const CAKE_BURN_BG_LIGHT = 'radial-gradient(50% 79.31% at 50% 50%, #FAF9FA 0%, #EAECF4 100%)'\r\n  const CAKE_BURN_TOP_FILL_LIGHT = 'radial-gradient(ellipse at bottom, #f0f1f6, #EAECF4)'\r\n  const CAKE_BURN_BG_DARK = 'radial-gradient(103.12% 50% at 50% 50%, #152534 0%, #191326 100%)'\r\n  const CAKE_BURN_TOP_FILL_DARK = '#191326'\r\n\r\n  return (\r\n    <>\r\n      <StyledHeader>\r\n        <Breadcrumbs>\r\n          <RouterLink to=\"/\" color=\"primary\" style={{ fontWeight: 400 }}>\r\n            {t('Home')}\r\n          </RouterLink>\r\n          <RouterLink to=\"/farms\" color=\"primary\" style={{ fontWeight: 400 }}>\r\n            {t('Farms')}\r\n          </RouterLink>\r\n          <Text>{t('Community Farm Auction')}</Text>\r\n        </Breadcrumbs>\r\n        <Flex flexDirection={['column-reverse', null, 'row']}>\r\n          <Left>\r\n            <Heading as=\"h1\" scale=\"xxl\" my=\"24px\">\r\n              {t('Community Farm Auction')}\r\n            </Heading>\r\n            <Text color=\"textSubtle\" mb=\"24px\">\r\n              {t('Each week, qualifying projects can bid $MINTS for the right to host a 7-day Farm on MintySwap.')}\r\n            </Text>\r\n            <Text color=\"textSubtle\">{t('This page is for projects to bid for farms.')}</Text>\r\n            <Text color=\"textSubtle\" mb=\"24px\">\r\n              {t(\r\n                'If you’re not a whitelisted project, you won’t be able to participate, but you can still view what’s going on!',\r\n              )}\r\n            </Text>\r\n            <Link external href={FORM_ADDRESS}>\r\n              <Button>\r\n                <Text color=\"white\" bold fontSize=\"16px\" mr=\"4px\">\r\n                  {t('Apply for a Farm/Pool')}\r\n                </Text>\r\n              </Button>\r\n            </Link>\r\n          </Left>\r\n          <Right>\r\n            <img src=\"/images/decorations/auction-bunny.png\" alt={t('auction bunny')} />\r\n          </Right>\r\n        </Flex>\r\n      </StyledHeader>\r\n      <>\r\n        <PageSection\r\n          innerProps={{ style: { margin: '0', width: '100%' } }}\r\n          background={theme.colors.background}\r\n          p=\"24px 0\"\r\n          index={2}\r\n          concaveDivider\r\n          dividerPosition=\"top\"\r\n        >\r\n          <NotWhitelistedNotice connectedBidder={connectedBidder} auction={currentAuction} />\r\n          <AuctionTimer auction={currentAuction} />\r\n          <AuctionContainer flexDirection={['column', null, null, 'row']}>\r\n            <Flex flex=\"1\" flexDirection=\"column\" width=\"100%\" minWidth=\"288px\">\r\n              <AuctionDetails\r\n                auction={currentAuction}\r\n                connectedBidder={connectedBidder}\r\n                refreshBidders={refreshBidders}\r\n              />\r\n              {connectedBidder?.isWhitelisted && bidders && currentAuction && (\r\n                <CongratulationsCard currentAuction={currentAuction} bidders={bidders} />\r\n              )}\r\n              {connectedBidder?.isWhitelisted && <ReclaimBidCard />}\r\n            </Flex>\r\n            <AuctionLeaderboard auction={currentAuction} bidders={bidders} />\r\n          </AuctionContainer>\r\n        </PageSection>\r\n        <PageSection\r\n          background={theme.isDark ? CAKE_BURN_BG_DARK : CAKE_BURN_BG_LIGHT}\r\n          index={2}\r\n          innerProps={{ style: { width: '100%' } }}\r\n          dividerPosition=\"top\"\r\n          dividerFill={{ light: CAKE_BURN_TOP_FILL_LIGHT, dark: CAKE_BURN_TOP_FILL_DARK }}\r\n        >\r\n          <AuctionCakeBurn />\r\n        </PageSection>\r\n        <PageSection\r\n          background={theme.isDark ? FAQ_BG_DARK : FAQS_BG_LIGHT}\r\n          clipFill={{ light: '#CBD7EF', dark: '#434575' }}\r\n          dividerFill={{ light: CAKE_BURN_BG_LIGHT, dark: CAKE_BURN_BG_DARK }}\r\n          concaveDivider\r\n          index={3}\r\n          dividerPosition=\"top\"\r\n        >\r\n          <FAQs />\r\n        </PageSection>\r\n      </>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FarmAuction\r\n","import { useState, useEffect } from 'react'\r\nimport isEqual from 'lodash/isEqual'\r\nimport { useFarmAuctionContract } from 'hooks/useContract'\r\nimport { Auction, ConnectedBidder, Bidder } from 'config/constants/types'\r\nimport { getBidderInfo } from 'config/constants/farmAuctions'\r\nimport useLastUpdated from 'hooks/useLastUpdated'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { AUCTION_BIDDERS_TO_FETCH } from 'config'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { sortAuctionBidders, processAuctionData } from '../helpers'\r\n\r\nexport const useCurrentFarmAuction = (account: string) => {\r\n  const [currentAuction, setCurrentAuction] = useState<Auction | null>(null)\r\n  const [bidders, setBidders] = useState<Bidder[] | null>(null)\r\n  const [connectedBidder, setConnectedBidder] = useState<ConnectedBidder | null>(null)\r\n  // Used to force-refresh bidders after successful bid\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  const farmAuctionContract = useFarmAuctionContract()\r\n\r\n  // Get latest auction id and its data\r\n  useEffect(() => {\r\n    const fetchCurrentAuction = async () => {\r\n      try {\r\n        const auctionId = await farmAuctionContract.currentAuctionId()\r\n        const auctionData = await farmAuctionContract.auctions(auctionId)\r\n        const processedAuctionData = await processAuctionData(auctionId.toNumber(), auctionData)\r\n        setCurrentAuction(processedAuctionData)\r\n      } catch (error) {\r\n        console.error('Failed to fetch current auction', error)\r\n      }\r\n    }\r\n    fetchCurrentAuction()\r\n  }, [farmAuctionContract, fastRefresh])\r\n\r\n  // Fetch bidders for current auction\r\n  useEffect(() => {\r\n    const fetchBidders = async () => {\r\n      try {\r\n        const [currentAuctionBidders] = await farmAuctionContract.viewBidsPerAuction(\r\n          currentAuction.id,\r\n          0,\r\n          AUCTION_BIDDERS_TO_FETCH,\r\n        )\r\n        const sortedBidders = sortAuctionBidders(currentAuctionBidders, currentAuction)\r\n        setBidders(sortedBidders)\r\n      } catch (error) {\r\n        console.error('Failed to fetch bidders', error)\r\n      }\r\n    }\r\n    if (currentAuction) {\r\n      fetchBidders()\r\n    }\r\n  }, [currentAuction, farmAuctionContract, lastUpdated, fastRefresh])\r\n\r\n  // Check if connected wallet is whitelisted\r\n  useEffect(() => {\r\n    const checkAccount = async () => {\r\n      try {\r\n        const whitelistedStatus = await farmAuctionContract.whitelisted(account)\r\n        setConnectedBidder({\r\n          account,\r\n          isWhitelisted: whitelistedStatus,\r\n        })\r\n      } catch (error) {\r\n        console.error('Failed to check if account is whitelisted', error)\r\n      }\r\n    }\r\n    if (account && (!connectedBidder || connectedBidder.account !== account)) {\r\n      checkAccount()\r\n    }\r\n    // Refresh UI if user logs out\r\n    if (!account) {\r\n      setConnectedBidder(null)\r\n    }\r\n  }, [account, connectedBidder, farmAuctionContract])\r\n\r\n  // Attach bidder data to connectedBidder object\r\n  useEffect(() => {\r\n    const getBidderData = () => {\r\n      if (bidders && bidders.length > 0) {\r\n        const bidderData = bidders.find((bidder) => bidder.account === account)\r\n        if (bidderData) {\r\n          return bidderData\r\n        }\r\n      }\r\n      const bidderInfo = getBidderInfo(account)\r\n      const defaultBidderData = {\r\n        position: null,\r\n        samePositionAsAbove: false,\r\n        isTopPosition: false,\r\n        amount: BIG_ZERO,\r\n        ...bidderInfo,\r\n      }\r\n      return defaultBidderData\r\n    }\r\n    if (connectedBidder && connectedBidder.isWhitelisted) {\r\n      const bidderData = getBidderData()\r\n      if (!isEqual(bidderData, connectedBidder.bidderData)) {\r\n        setConnectedBidder({\r\n          account,\r\n          isWhitelisted: true,\r\n          bidderData,\r\n        })\r\n      }\r\n    }\r\n  }, [account, connectedBidder, bidders])\r\n\r\n  return {\r\n    currentAuction,\r\n    bidders,\r\n    connectedBidder,\r\n    refreshBidders: setLastUpdated,\r\n  }\r\n}\r\n","import { useEffect, useReducer, useRef } from 'react'\r\nimport { noop } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers } from 'ethers'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\r\n\r\ntype Action =\r\n  | { type: 'requires_approval' }\r\n  | { type: 'approve_sending' }\r\n  | { type: 'approve_receipt' }\r\n  | { type: 'approve_error' }\r\n  | { type: 'confirm_sending' }\r\n  | { type: 'confirm_receipt' }\r\n  | { type: 'confirm_error' }\r\n\r\ninterface State {\r\n  approvalState: LoadingState\r\n  confirmState: LoadingState\r\n}\r\n\r\nconst initialState: State = {\r\n  approvalState: 'idle',\r\n  confirmState: 'idle',\r\n}\r\n\r\nconst reducer = (state: State, actions: Action): State => {\r\n  switch (actions.type) {\r\n    case 'requires_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_sending':\r\n      return {\r\n        ...state,\r\n        approvalState: 'loading',\r\n      }\r\n    case 'approve_receipt':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_error':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n      }\r\n    case 'confirm_sending':\r\n      return {\r\n        ...state,\r\n        confirmState: 'loading',\r\n      }\r\n    case 'confirm_receipt':\r\n      return {\r\n        ...state,\r\n        confirmState: 'success',\r\n      }\r\n    case 'confirm_error':\r\n      return {\r\n        ...state,\r\n        confirmState: 'fail',\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ninterface OnSuccessProps {\r\n  state: State\r\n  receipt: ethers.providers.TransactionReceipt\r\n}\r\n\r\ninterface ApproveConfirmTransaction {\r\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\r\n  onConfirm: (params?) => Promise<ethers.providers.TransactionResponse>\r\n  onRequiresApproval?: () => Promise<boolean>\r\n  onSuccess: ({ state, receipt }: OnSuccessProps) => void\r\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\r\n}\r\n\r\nconst useApproveConfirmTransaction = ({\r\n  onApprove,\r\n  onConfirm,\r\n  onRequiresApproval,\r\n  onSuccess = noop,\r\n  onApproveSuccess = noop,\r\n}: ApproveConfirmTransaction) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const handlePreApprove = useRef(onRequiresApproval)\r\n  const { toastError } = useToast()\r\n\r\n  // Check if approval is necessary, re-check if account changes\r\n  useEffect(() => {\r\n    if (account && handlePreApprove.current) {\r\n      handlePreApprove.current().then((result) => {\r\n        if (result) {\r\n          dispatch({ type: 'requires_approval' })\r\n        }\r\n      })\r\n    }\r\n  }, [account, handlePreApprove, dispatch])\r\n\r\n  return {\r\n    isApproving: state.approvalState === 'loading',\r\n    isApproved: state.approvalState === 'success',\r\n    isConfirming: state.confirmState === 'loading',\r\n    isConfirmed: state.confirmState === 'success',\r\n    hasApproveFailed: state.approvalState === 'fail',\r\n    hasConfirmFailed: state.confirmState === 'fail',\r\n    handleApprove: async () => {\r\n      try {\r\n        const tx = await onApprove()\r\n        dispatch({ type: 'approve_sending' })\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          dispatch({ type: 'approve_receipt' })\r\n          onApproveSuccess({ state, receipt })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'approve_error' })\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    },\r\n    handleConfirm: async (params = {}) => {\r\n      dispatch({ type: 'confirm_sending' })\r\n      try {\r\n        const tx = await onConfirm(params)\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          dispatch({ type: 'confirm_receipt' })\r\n          onSuccess({ state, receipt })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'confirm_error' })\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\nexport default useApproveConfirmTransaction\r\n"],"sourceRoot":""}
{"version":3,"sources":["views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx","components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx","views/Voting/CreateProposal/styles.tsx","views/Voting/CreateProposal/Choice.tsx","views/Voting/CreateProposal/Choices.tsx","views/Voting/CreateProposal/helpers.ts","views/Voting/components/VoteDetailsModal.tsx","views/Voting/CreateProposal/index.tsx","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","utils/getGasPrice.ts","views/Voting/helpers.ts","views/Voting/config.ts"],"names":["VotingBox","styled","div","theme","colors","cardBorder","ModalInner","props","mb","maxWidth","Layout","mediaQueries","lg","DetailsView","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","ifoPoolBalance","t","useTranslation","as","fontSize","color","textTransform","bold","formatNumber","alignItems","justifyContent","textAlign","initialState","verificationHash","useGetVotingPower","block","isActive","useWeb3React","account","useState","votingPower","setVotingPower","isLoading","setIsLoading","useEffect","a","simpleRpcProvider","getBlockNumber","blockNumber","getActivePools","eligiblePools","poolAddresses","map","contractAddress","getAddress","getVotingPower","IFOPoolBalance","prevVotingPower","parseFloat","fetchVotingPower","Table","table","text","TableBox","ThemedComponent","Title","scale","my","markdownComponents","h1","h2","h3","h4","h5","h6","p","children","ol","ul","pre","ReactMarkdown","remarkPlugins","gfm","components","BaseLabel","label","Label","SecondaryLabel","FormError","FormErrors","errors","mt","error","Choice","onRemove","onTextInput","isWarning","setIsWarning","isDirty","setIsDirty","position","onChange","evt","value","currentTarget","length","right","top","zIndex","variant","onClick","makeChoice","id","uniqueId","Choices","choices","hasMinimumChoices","filter","choice","index","newValue","newChoices","choiceIndex","findIndex","newChoice","placeholder","newPrevChoice","undefined","type","disabled","combineDateAndTime","date","time","isValid","dateStr","format","timeStr","parseISO","getTime","VoteDetailsModal","onDismiss","modalIsOpen","setModalIsOpen","useTheme","title","headerBackground","gradients","cardHeader","width","height","size","EasyMde","lazy","CreateProposal","name","body","times","startDate","startTime","endDate","endTime","snapshot","state","setState","fieldsState","setFieldsState","initialBlock","useInitialBlock","push","useHistory","library","useWeb3Provider","useToast","toastSuccess","toastError","useModal","onPresentVoteDetailsModal","formErrors","formData","field","num","hasEmptyChoice","some","Array","isArray","startDateTimestamp","getFormErrors","handleSubmit","preventDefault","proposal","JSON","stringify","generatePayloadData","SnapshotCommand","PROPOSAL","payload","start","end","metadata","generateMetaData","signMessage","sig","msg","address","sendSnapshotData","data","ipfsHash","message","console","updateValue","key","prevState","prevFieldsState","handleDateChange","options","useMemo","hideIcons","ADMINS","includes","toLowerCase","Container","py","Page","to","onSubmit","htmlFor","inputName","required","onTextChange","px","DatePicker","selected","placeholderText","mr","href","getBscScanLink","truncateHash","endIcon","spin","isEmpty","count","VOTE_THRESHOLD","ConnectWalletButton","estimateGas","contract","methodName","methodArgs","gasMarginPer10000","Error","rawGasEstimation","gasEstimation","mul","ethers","BigNumber","from","add","callWithEstimateGas","overrides","gasLimit","tx","DEFAULT_GAS_LIMIT","stakeFarm","masterChefContract","pid","amount","gasPrice","getGasPrice","DEFAULT_TOKEN_DECIMAL","toString","enterStaking","wait","receipt","status","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","pools","pool","sousId","isFinished","startBlockCalls","endBlockCalls","multicall","sousChefV2","startBlocks","endBlocks","reduce","accum","poolCheck","startBlock","endBlock","gte","lte","userGas","store","getState","user","GAS_PRICE_GWEI","default","process","ChainId","MAINNET","testnet","isCoreProposal","author","filterProposalsByType","proposals","proposalType","ProposalType","COMMUNITY","CORE","ALL","filterProposalsByState","plugins","network","strategies","params","symbol","tokens","cake","decimals","version","SNAPSHOT_VERSION","timestamp","Date","now","toFixed","space","PANCAKE_SPACE","fetch","SNAPSHOT_HUB_API","method","headers","Accept","response","ok","json","error_description","SNAPSHOT_VOTING_API","calculateVoteResults","votes","vote","choiceText","getTotalFromVotes","power","PROPOSALS_TO_SHOW","IPFS_GATEWAY"],"mappings":"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","file":"static/js/18.916282e5.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Box, BoxProps } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nexport const VotingBox = styled.div`\r\n  align-items: center;\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: 12px;\r\n  display: flex;\r\n  height: 64px;\r\n  justify-content: space-between;\r\n  margin-bottom: 24px;\r\n  padding: 0 16px;\r\n`\r\n\r\nexport const ModalInner: React.FC<BoxProps> = (props) => {\r\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Layout = styled.div`\r\n  align-items: start;\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: minmax(0, 1fr);\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    grid-template-columns: 1fr 332px;\r\n  }\r\n`\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport { Text, Flex } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport { VotingBox, ModalInner } from './styles'\r\n\r\ninterface DetailsViewProps {\r\n  total: number\r\n  cakeBalance: number\r\n  cakeVaultBalance: number\r\n  cakePoolBalance: number\r\n  poolsBalance: number\r\n  cakeBnbLpBalance: number\r\n  ifoPoolBalance: number\r\n}\r\n\r\nconst DetailsView: React.FC<DetailsViewProps> = ({\r\n  total,\r\n  cakeBalance,\r\n  cakeVaultBalance,\r\n  cakePoolBalance,\r\n  poolsBalance,\r\n  cakeBnbLpBalance,\r\n  ifoPoolBalance,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <ModalInner mb=\"0\">\r\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\r\n        {t(\r\n          'Your voting power is determined by the amount of CAKE you held at the block detailed below. CAKE held in other places does not contribute to your voting power.',\r\n        )}\r\n      </Text>\r\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\r\n        {t('Overview')}\r\n      </Text>\r\n      <VotingBox>\r\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\r\n        <Text bold fontSize=\"20px\">\r\n          {formatNumber(total, 0, 3)}\r\n        </Text>\r\n      </VotingBox>\r\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\r\n        {t('Your Cake Held Now')}\r\n      </Text>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Wallet')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(cakeBalance, 0, 3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Manual CAKE Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(cakePoolBalance, 0, 3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Auto CAKE Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(cakeVaultBalance, 0, 3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('IFO Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(ifoPoolBalance, 0, 3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Other Syrup Pools')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(poolsBalance, 0, 3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('CAKE BNB LP')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{formatNumber(cakeBnbLpBalance, 0, 3)}</Text>\r\n      </Flex>\r\n    </ModalInner>\r\n  )\r\n}\r\n\r\nexport default DetailsView\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getActivePools } from 'utils/calls'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { getVotingPower } from '../helpers'\r\n\r\ninterface State {\r\n  verificationHash: string\r\n  cakeBalance: number\r\n  cakeVaultBalance: number\r\n  cakePoolBalance: number\r\n  poolsBalance: number\r\n  cakeBnbLpBalance: number\r\n  ifoPoolBalance: number\r\n  total: number\r\n}\r\n\r\nconst initialState: State = {\r\n  verificationHash: null,\r\n  cakeBalance: 0,\r\n  cakeVaultBalance: 0,\r\n  cakePoolBalance: 0,\r\n  poolsBalance: 0,\r\n  cakeBnbLpBalance: 0,\r\n  ifoPoolBalance: 0,\r\n  total: 0,\r\n}\r\n\r\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\r\n  const { account } = useWeb3React()\r\n  const [votingPower, setVotingPower] = useState(initialState)\r\n  const [isLoading, setIsLoading] = useState(!!account)\r\n\r\n  useEffect(() => {\r\n    const fetchVotingPower = async () => {\r\n      setIsLoading(true)\r\n\r\n      try {\r\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n        const eligiblePools = await getActivePools(blockNumber)\r\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\r\n        const {\r\n          cakeBalance,\r\n          cakeBnbLpBalance,\r\n          cakePoolBalance,\r\n          total,\r\n          poolsBalance,\r\n          cakeVaultBalance,\r\n          verificationHash,\r\n          IFOPoolBalance,\r\n        } = await getVotingPower(account, poolAddresses, blockNumber)\r\n\r\n        if (isActive) {\r\n          setVotingPower((prevVotingPower) => ({\r\n            ...prevVotingPower,\r\n            verificationHash,\r\n            cakeBalance: parseFloat(cakeBalance),\r\n            cakeBnbLpBalance: parseFloat(cakeBnbLpBalance),\r\n            cakePoolBalance: parseFloat(cakePoolBalance),\r\n            poolsBalance: parseFloat(poolsBalance),\r\n            cakeVaultBalance: parseFloat(cakeVaultBalance),\r\n            ifoPoolBalance: IFOPoolBalance ? parseFloat(IFOPoolBalance) : 0,\r\n            total: parseFloat(total),\r\n          }))\r\n        }\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (account && isActive) {\r\n      fetchVotingPower()\r\n    }\r\n  }, [account, block, setVotingPower, isActive, setIsLoading])\r\n\r\n  return { ...votingPower, isLoading }\r\n}\r\n\r\nexport default useGetVotingPower\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\r\nimport styled from 'styled-components'\r\n\r\nconst Table = styled.table`\r\n  margin-bottom: 32px;\r\n  margin-top: 32px;\r\n  width: 100%;\r\n\r\n  td,\r\n  th {\r\n    color: ${({ theme }) => theme.colors.text};\r\n    padding: 8px;\r\n  }\r\n`\r\nconst TableBox = styled.div`\r\n  width: 100%;\r\n  overflow: auto;\r\n  -webkit-overflow-scrolling: touch;\r\n`\r\n\r\nconst ThemedComponent = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n  margin-top: 16px;\r\n\r\n  li {\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\nconst Pre = styled.pre`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n  margin-top: 16px;\r\n  max-width: 100%;\r\n  overflow-x: auto;\r\n`\r\n\r\nconst AStyle = styled.a`\r\n  word-break: break-all;\r\n`\r\n\r\nconst Title = (props) => {\r\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\r\n}\r\n\r\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\r\n  h1: Title,\r\n  h2: Title,\r\n  h3: Title,\r\n  h4: Title,\r\n  h5: Title,\r\n  h6: Title,\r\n  p: (props) => {\r\n    return <Text as=\"p\" my=\"16px\" {...props} />\r\n  },\r\n  table: ({ ...props }) => {\r\n    return (\r\n      <TableBox>\r\n        <Table>{props.children}</Table>\r\n      </TableBox>\r\n    )\r\n  },\r\n  ol: (props) => {\r\n    return <ThemedComponent as=\"ol\" {...props} />\r\n  },\r\n  ul: (props) => {\r\n    return <ThemedComponent as=\"ul\" {...props} />\r\n  },\r\n  pre: Pre,\r\n  a: AStyle,\r\n}\r\n\r\nexport default markdownComponents\r\n","import React from 'react'\r\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\r\nimport gfm from 'remark-gfm'\r\nimport markdownComponents from './styles'\r\n\r\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\r\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\r\n}\r\n\r\nexport default ReactMarkdown\r\n","import React from 'react'\r\nimport { Box, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseLabel = styled.label`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: block;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nexport const Label = styled(BaseLabel)`\r\n  font-size: 20px;\r\n`\r\n\r\nexport const SecondaryLabel = styled(BaseLabel)`\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n`\r\n\r\nexport const FormError: React.FC = ({ children }) => (\r\n  <Text color=\"failure\" mb=\"4px\">\r\n    {children}\r\n  </Text>\r\n)\r\n\r\nexport const FormErrors: React.FC<{ errors: string[] }> = ({ errors }) => {\r\n  return (\r\n    <Box mt=\"8px\">\r\n      {errors.map((error) => {\r\n        return <FormError key={error}>{error}</FormError>\r\n      })}\r\n    </Box>\r\n  )\r\n}\r\n","import React, { ChangeEvent, InputHTMLAttributes, useState } from 'react'\r\nimport { Box, CloseIcon, IconButton, Input, InputProps } from '@pancakeswap/uikit'\r\n\r\ninterface ChoiceProps extends InputProps, InputHTMLAttributes<HTMLInputElement> {\r\n  onTextInput: (value: string) => void\r\n  onRemove?: () => void\r\n}\r\n\r\nconst Choice: React.FC<ChoiceProps> = ({ onRemove, onTextInput, ...props }) => {\r\n  const [isWarning, setIsWarning] = useState(false)\r\n  const [isDirty, setIsDirty] = useState(false)\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = evt.currentTarget\r\n\r\n    setIsWarning(isDirty && value.length === 0)\r\n    setIsDirty(true)\r\n    onTextInput(value)\r\n  }\r\n\r\n  return (\r\n    <Box position=\"relative\" mb=\"16px\">\r\n      <Input {...props} onChange={handleChange} isWarning={isWarning} />\r\n      {onRemove && (\r\n        <Box position=\"absolute\" right=\"8px\" top=\"0px\" zIndex={30}>\r\n          <IconButton variant=\"text\" onClick={onRemove}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Choice\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit'\r\nimport uniqueId from 'lodash/uniqueId'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Choice from './Choice'\r\n\r\nexport interface Choice {\r\n  id: string\r\n  value: string\r\n}\r\n\r\ninterface ChoicesProps {\r\n  choices: Choice[]\r\n  onChange: (newChoices: Choice[]) => void\r\n}\r\n\r\nexport const MINIMUM_CHOICES = 2\r\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\r\n\r\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\r\n  const { t } = useTranslation()\r\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\r\n\r\n  const addChoice = () => {\r\n    onChange([...choices, makeChoice()])\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Heading as=\"h3\" scale=\"md\">\r\n          {t('Choices')}\r\n        </Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {choices.map(({ id, value }, index) => {\r\n          const handleTextInput = (newValue: string) => {\r\n            const newChoices = [...choices]\r\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\r\n\r\n            newChoices[choiceIndex].value = newValue\r\n\r\n            onChange(newChoices)\r\n          }\r\n\r\n          const handleRemove = () => {\r\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\r\n          }\r\n\r\n          return (\r\n            <Choice\r\n              key={id}\r\n              scale=\"lg\"\r\n              onTextInput={handleTextInput}\r\n              placeholder={t('Input choice text')}\r\n              value={value}\r\n              onRemove={index > 1 ? handleRemove : undefined}\r\n            />\r\n          )\r\n        })}\r\n\r\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\r\n          {t('Add Choice')}\r\n        </Button>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Choices\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport { format, parseISO, isValid } from 'date-fns'\r\nimport { MINIMUM_CHOICES } from './Choices'\r\nimport { FormState } from './types'\r\n\r\nexport const combineDateAndTime = (date: Date, time: Date) => {\r\n  if (!isValid(date) || !isValid(time)) {\r\n    return null\r\n  }\r\n\r\n  const dateStr = format(date, 'yyyy-MM-dd')\r\n  const timeStr = format(time, 'HH:mm:ss')\r\n\r\n  return parseISO(`${dateStr}T${timeStr}`).getTime() / 1e3\r\n}\r\n\r\nexport const getFormErrors = (formData: FormState, t: ContextApi['t']) => {\r\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = formData\r\n  const errors: { [key: string]: string[] } = {}\r\n\r\n  if (!name) {\r\n    errors.name = [t('%field% is required', { field: 'Title' })]\r\n  }\r\n\r\n  if (!body) {\r\n    errors.body = [t('%field% is required', { field: 'Body' })]\r\n  }\r\n\r\n  if (choices.length < MINIMUM_CHOICES) {\r\n    errors.choices = [t('Please create a minimum of %num% choices', { num: MINIMUM_CHOICES })]\r\n  }\r\n\r\n  const hasEmptyChoice = choices.some((choice) => !choice.value)\r\n  if (choices.length === MINIMUM_CHOICES && hasEmptyChoice) {\r\n    errors.choices = Array.isArray(errors.choices)\r\n      ? [...errors.choices, t('Choices must not be empty')]\r\n      : (errors.choices = [t('Choices must not be empty')])\r\n  }\r\n\r\n  if (!isValid(startDate)) {\r\n    errors.startDate = [t('Please select a valid date')]\r\n  }\r\n\r\n  if (!isValid(startTime)) {\r\n    errors.startTime = [t('Please select a valid time')]\r\n  }\r\n\r\n  if (!isValid(endDate)) {\r\n    errors.endDate = [t('Please select a valid date')]\r\n  }\r\n\r\n  if (!isValid(endTime)) {\r\n    errors.endTime = [t('Please select a valid time')]\r\n  }\r\n\r\n  const startDateTimestamp = combineDateAndTime(startDate, startTime)\r\n  const endDateTimestamp = combineDateAndTime(endDate, endTime)\r\n\r\n  if (endDateTimestamp < startDateTimestamp) {\r\n    errors.endDate = Array.isArray(errors.endDate)\r\n      ? [...errors.endDate, t('End date must be after the start date')]\r\n      : (errors.endDate = [t('End date must be after the start date')])\r\n  }\r\n\r\n  if (snapshot === 0) {\r\n    errors.snapshot = [t('Invalid snapshot')]\r\n  }\r\n\r\n  return errors\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useGetVotingPower from '../hooks/useGetVotingPower'\r\nimport DetailsView from './CastVoteModal/DetailsView'\r\n\r\ninterface VoteDetailsModalProps extends InjectedModalProps {\r\n  block: number\r\n}\r\n\r\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const [modalIsOpen, setModalIsOpen] = useState(true)\r\n  const {\r\n    isLoading,\r\n    total,\r\n    cakeBalance,\r\n    cakeVaultBalance,\r\n    cakePoolBalance,\r\n    poolsBalance,\r\n    cakeBnbLpBalance,\r\n    ifoPoolBalance,\r\n  } = useGetVotingPower(block, modalIsOpen)\r\n  const { theme } = useTheme()\r\n\r\n  const handleDismiss = () => {\r\n    setModalIsOpen(false)\r\n    onDismiss()\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\r\n      <Box mb=\"24px\" width=\"320px\">\r\n        {isLoading ? (\r\n          <Flex height=\"450px\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Spinner size={80} />\r\n          </Flex>\r\n        ) : (\r\n          <>\r\n            <DetailsView\r\n              total={total}\r\n              cakeBalance={cakeBalance}\r\n              cakeVaultBalance={cakeVaultBalance}\r\n              cakePoolBalance={cakePoolBalance}\r\n              poolsBalance={poolsBalance}\r\n              ifoPoolBalance={ifoPoolBalance}\r\n              cakeBnbLpBalance={cakeBnbLpBalance}\r\n            />\r\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\r\n              {t('Close')}\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VoteDetailsModal\r\n","import React, { ChangeEvent, FormEvent, lazy, useEffect, useState, useMemo } from 'react'\r\nimport {\r\n  AutoRenewIcon,\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Flex,\r\n  Heading,\r\n  Input,\r\n  LinkExternal,\r\n  Text,\r\n  useModal,\r\n} from '@pancakeswap/uikit'\r\nimport { useHistory } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport times from 'lodash/times'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { useInitialBlock } from 'state/block/hooks'\r\nimport { SnapshotCommand } from 'state/types'\r\nimport useToast from 'hooks/useToast'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport truncateHash from 'utils/truncateHash'\r\nimport { signMessage } from 'utils/web3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport { DatePicker, TimePicker } from 'components/DatePicker'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport ReactMarkdown from 'components/ReactMarkdown'\r\nimport { PageMeta } from 'components/Layout/Page'\r\nimport { sendSnapshotData, Message, generateMetaData, generatePayloadData } from '../helpers'\r\nimport Layout from '../components/Layout'\r\nimport { FormErrors, Label, SecondaryLabel } from './styles'\r\nimport Choices, { Choice, makeChoice, MINIMUM_CHOICES } from './Choices'\r\nimport { combineDateAndTime, getFormErrors } from './helpers'\r\nimport { FormState } from './types'\r\nimport { ADMINS, VOTE_THRESHOLD } from '../config'\r\nimport VoteDetailsModal from '../components/VoteDetailsModal'\r\n\r\nconst EasyMde = lazy(() => import('components/EasyMde'))\r\n\r\nconst CreateProposal = () => {\r\n  const [state, setState] = useState<FormState>({\r\n    name: '',\r\n    body: '',\r\n    choices: times(MINIMUM_CHOICES).map(makeChoice),\r\n    startDate: null,\r\n    startTime: null,\r\n    endDate: null,\r\n    endTime: null,\r\n    snapshot: 0,\r\n  })\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [fieldsState, setFieldsState] = useState<{ [key: string]: boolean }>({})\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const initialBlock = useInitialBlock()\r\n  const { push } = useHistory()\r\n  const { library } = useWeb3Provider()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [onPresentVoteDetailsModal] = useModal(<VoteDetailsModal block={state.snapshot} />)\r\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = state\r\n  const formErrors = getFormErrors(state, t)\r\n\r\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n\r\n    try {\r\n      setIsLoading(true)\r\n      const proposal = JSON.stringify({\r\n        ...generatePayloadData(),\r\n        type: SnapshotCommand.PROPOSAL,\r\n        payload: {\r\n          name,\r\n          body,\r\n          snapshot,\r\n          start: combineDateAndTime(startDate, startTime),\r\n          end: combineDateAndTime(endDate, endTime),\r\n          choices: choices\r\n            .filter((choice) => choice.value)\r\n            .map((choice) => {\r\n              return choice.value\r\n            }),\r\n          metadata: generateMetaData(),\r\n          type: 'single-choice',\r\n        },\r\n      })\r\n\r\n      const sig = await signMessage(library, account, proposal)\r\n\r\n      if (sig) {\r\n        const msg: Message = { address: account, msg: proposal, sig }\r\n\r\n        // Save proposal to snapshot\r\n        const data = await sendSnapshotData(msg)\r\n\r\n        // Redirect user to newly created proposal page\r\n        push(`/voting/proposal/${data.ipfsHash}`)\r\n\r\n        toastSuccess(t('Proposal created!'))\r\n      } else {\r\n        toastError(t('Error'), t('Unable to sign payload'))\r\n      }\r\n    } catch (error) {\r\n      toastError(t('Error'), error?.message || error?.error)\r\n      console.error(error)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const updateValue = (key: string, value: string | Choice[] | Date) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [key]: value,\r\n    }))\r\n\r\n    // Keep track of what fields the user has attempted to edit\r\n    setFieldsState((prevFieldsState) => ({\r\n      ...prevFieldsState,\r\n      [key]: true,\r\n    }))\r\n  }\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { name: inputName, value } = evt.currentTarget\r\n    updateValue(inputName, value)\r\n  }\r\n\r\n  const handleEasyMdeChange = (value: string) => {\r\n    updateValue('body', value)\r\n  }\r\n\r\n  const handleChoiceChange = (newChoices: Choice[]) => {\r\n    updateValue('choices', newChoices)\r\n  }\r\n\r\n  const handleDateChange = (key: string) => (value: Date) => {\r\n    updateValue(key, value)\r\n  }\r\n\r\n  const options = useMemo(() => {\r\n    return {\r\n      hideIcons:\r\n        account && ADMINS.includes(account.toLowerCase())\r\n          ? []\r\n          : ['guide', 'fullscreen', 'preview', 'side-by-side', 'image'],\r\n    }\r\n  }, [account])\r\n\r\n  useEffect(() => {\r\n    if (initialBlock > 0) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        snapshot: initialBlock,\r\n      }))\r\n    }\r\n  }, [initialBlock, setState])\r\n\r\n  return (\r\n    <Container py=\"40px\">\r\n      <PageMeta />\r\n      <Box mb=\"48px\">\r\n        <Breadcrumbs>\r\n          <Link to=\"/\">{t('Home')}</Link>\r\n          <Link to=\"/voting\">{t('Voting')}</Link>\r\n          <Text>{t('Make a Proposal')}</Text>\r\n        </Breadcrumbs>\r\n      </Box>\r\n      <form onSubmit={handleSubmit}>\r\n        <Layout>\r\n          <Box>\r\n            <Box mb=\"24px\">\r\n              <Label htmlFor=\"name\">{t('Title')}</Label>\r\n              <Input id=\"name\" name=\"name\" value={name} scale=\"lg\" onChange={handleChange} required />\r\n              {formErrors.name && fieldsState.name && <FormErrors errors={formErrors.name} />}\r\n            </Box>\r\n            <Box mb=\"24px\">\r\n              <Label htmlFor=\"body\">{t('Content')}</Label>\r\n              <Text color=\"textSubtle\" mb=\"8px\">\r\n                {t('Tip: write in Markdown!')}\r\n              </Text>\r\n              <EasyMde\r\n                id=\"body\"\r\n                name=\"body\"\r\n                onTextChange={handleEasyMdeChange}\r\n                value={body}\r\n                options={options}\r\n                required\r\n              />\r\n              {formErrors.body && fieldsState.body && <FormErrors errors={formErrors.body} />}\r\n            </Box>\r\n            {body && (\r\n              <Box mb=\"24px\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <Heading as=\"h3\" scale=\"md\">\r\n                      {t('Preview')}\r\n                    </Heading>\r\n                  </CardHeader>\r\n                  <CardBody p=\"0\" px=\"24px\">\r\n                    <ReactMarkdown>{body}</ReactMarkdown>\r\n                  </CardBody>\r\n                </Card>\r\n              </Box>\r\n            )}\r\n            <Choices choices={choices} onChange={handleChoiceChange} />\r\n            {formErrors.choices && fieldsState.choices && <FormErrors errors={formErrors.choices} />}\r\n          </Box>\r\n          <Box>\r\n            <Card>\r\n              <CardHeader>\r\n                <Heading as=\"h3\" scale=\"md\">\r\n                  {t('Actions')}\r\n                </Heading>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('Start Date')}</SecondaryLabel>\r\n                  <DatePicker\r\n                    name=\"startDate\"\r\n                    onChange={handleDateChange('startDate')}\r\n                    selected={startDate}\r\n                    placeholderText=\"YYYY/MM/DD\"\r\n                  />\r\n                  {formErrors.startDate && fieldsState.startDate && <FormErrors errors={formErrors.startDate} />}\r\n                </Box>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('Start Time')}</SecondaryLabel>\r\n                  <TimePicker\r\n                    name=\"startTime\"\r\n                    onChange={handleDateChange('startTime')}\r\n                    selected={startTime}\r\n                    placeholderText=\"00:00\"\r\n                  />\r\n                  {formErrors.startTime && fieldsState.startTime && <FormErrors errors={formErrors.startTime} />}\r\n                </Box>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('End Date')}</SecondaryLabel>\r\n                  <DatePicker\r\n                    name=\"endDate\"\r\n                    onChange={handleDateChange('endDate')}\r\n                    selected={endDate}\r\n                    placeholderText=\"YYYY/MM/DD\"\r\n                  />\r\n                  {formErrors.endDate && fieldsState.endDate && <FormErrors errors={formErrors.endDate} />}\r\n                </Box>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('End Time')}</SecondaryLabel>\r\n                  <TimePicker\r\n                    name=\"endTime\"\r\n                    onChange={handleDateChange('endTime')}\r\n                    selected={endTime}\r\n                    placeholderText=\"00:00\"\r\n                  />\r\n                  {formErrors.endTime && fieldsState.endTime && <FormErrors errors={formErrors.endTime} />}\r\n                </Box>\r\n                {account && (\r\n                  <Flex alignItems=\"center\" mb=\"8px\">\r\n                    <Text color=\"textSubtle\" mr=\"16px\">\r\n                      {t('Creator')}\r\n                    </Text>\r\n                    <LinkExternal href={getBscScanLink(account, 'address')}>{truncateHash(account)}</LinkExternal>\r\n                  </Flex>\r\n                )}\r\n                <Flex alignItems=\"center\" mb=\"16px\">\r\n                  <Text color=\"textSubtle\" mr=\"16px\">\r\n                    {t('Snapshot')}\r\n                  </Text>\r\n                  <LinkExternal href={getBscScanLink(snapshot, 'block')}>{snapshot}</LinkExternal>\r\n                </Flex>\r\n                {account ? (\r\n                  <>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      width=\"100%\"\r\n                      isLoading={isLoading}\r\n                      endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n                      disabled={!isEmpty(formErrors)}\r\n                      mb=\"16px\"\r\n                    >\r\n                      {t('Publish')}\r\n                    </Button>\r\n                    <Text color=\"failure\" as=\"p\" mb=\"4px\">\r\n                      {t('You need at least %count% voting power to publish a proposal.', { count: VOTE_THRESHOLD })}{' '}\r\n                    </Text>\r\n                    <Button scale=\"sm\" type=\"button\" variant=\"text\" onClick={onPresentVoteDetailsModal} p={0}>\r\n                      {t('Check voting power')}\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <ConnectWalletButton width=\"100%\" type=\"button\" />\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Box>\r\n        </Layout>\r\n      </form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CreateProposal\r\n","import { ethers, Contract, Overrides } from 'ethers'\r\n\r\n/**\r\n * Estimate the gas needed to call a function, and add a 10% margin\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the methode called\r\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\r\n * @param args An array of arguments to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const estimateGas = async (\r\n  contract: Contract,\r\n  methodName: string,\r\n  methodArgs: any[],\r\n  gasMarginPer10000: number,\r\n) => {\r\n  if (!contract[methodName]) {\r\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\r\n  }\r\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\r\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\r\n  const gasEstimation = rawGasEstimation\r\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\r\n    .div(ethers.BigNumber.from(10000))\r\n  return gasEstimation\r\n}\r\n\r\n/**\r\n * Perform a contract call with a gas value returned from estimateGas\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param methodArgs An array of arguments to pass to the method\r\n * @param overrides An overrides object to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const callWithEstimateGas = async (\r\n  contract: Contract,\r\n  methodName: string,\r\n  methodArgs: any[] = [],\r\n  overrides: Overrides = {},\r\n  gasMarginPer10000 = 1000,\r\n): Promise<ethers.providers.TransactionResponse> => {\r\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\r\n  const tx = await contract[methodName](...methodArgs, {\r\n    gasLimit: gasEstimation,\r\n    ...overrides,\r\n  })\r\n  return tx\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport getGasPrice from 'utils/getGasPrice'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const harvestFarm = async (masterChefContract, pid) => {\r\n  const gasPrice = getGasPrice()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n","/* eslint-disable import/prefer-default-export */\r\nimport BigNumber from 'bignumber.js'\r\nimport pools from 'config/constants/pools'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport multicall from '../multicall'\r\nimport { simpleRpcProvider } from '../providers'\r\nimport { getAddress } from '../addressHelpers'\r\n\r\n/**\r\n * Returns the total number of pools that were active at a given block\r\n */\r\nexport const getActivePools = async (block?: number) => {\r\n  const eligiblePools = pools\r\n    .filter((pool) => pool.sousId !== 0)\r\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'startBlock',\r\n  }))\r\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'bonusEndBlock',\r\n  }))\r\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\r\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\r\n\r\n  return eligiblePools.reduce((accum, poolCheck, index) => {\r\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\r\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\r\n\r\n    if (!startBlock || !endBlock) {\r\n      return accum\r\n    }\r\n\r\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\r\n      return accum\r\n    }\r\n\r\n    return [...accum, poolCheck]\r\n  }, [])\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport store from 'state'\r\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\r\n\r\n/**\r\n * Function to return gasPrice outwith a react component\r\n */\r\nconst getGasPrice = (): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const state = store.getState()\r\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\r\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\r\n}\r\n\r\nexport default getGasPrice\r\n","import { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { ADMINS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\r\n\r\nexport const isCoreProposal = (proposal: Proposal) => {\r\n  return ADMINS.includes(proposal.author.toLowerCase())\r\n}\r\n\r\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\r\n  switch (proposalType) {\r\n    case ProposalType.COMMUNITY:\r\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\r\n    case ProposalType.CORE:\r\n      return proposals.filter((proposal) => isCoreProposal(proposal))\r\n    case ProposalType.ALL:\r\n    default:\r\n      return proposals\r\n  }\r\n}\r\n\r\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\r\n  return proposals.filter((proposal) => proposal.state === state)\r\n}\r\n\r\nexport interface Message {\r\n  address: string\r\n  msg: string\r\n  sig: string\r\n}\r\n\r\n/**\r\n * Generates metadata required by snapshot to validate payload\r\n */\r\nexport const generateMetaData = () => {\r\n  return {\r\n    plugins: {},\r\n    network: 56,\r\n    strategies: [{ name: 'cake', params: { symbol: 'CAKE', address: tokens.cake.address, decimals: 18 } }],\r\n  }\r\n}\r\n\r\n/**\r\n * Returns data that is required on all snapshot payloads\r\n */\r\nexport const generatePayloadData = () => {\r\n  return {\r\n    version: SNAPSHOT_VERSION,\r\n    timestamp: (Date.now() / 1e3).toFixed(),\r\n    space: PANCAKE_SPACE,\r\n  }\r\n}\r\n\r\n/**\r\n * General function to send commands to the snapshot api\r\n */\r\nexport const sendSnapshotData = async (message: Message) => {\r\n  const response = await fetch(SNAPSHOT_HUB_API, {\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(message),\r\n  })\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json()\r\n    throw new Error(error?.error_description)\r\n  }\r\n\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      address: account,\r\n      block: blockNumber,\r\n      poolAddresses,\r\n    }),\r\n  })\r\n  const data = await response.json()\r\n  return data.data\r\n}\r\n\r\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\r\n  return votes.reduce((accum, vote) => {\r\n    const choiceText = vote.proposal.choices[vote.choice - 1]\r\n\r\n    return {\r\n      ...accum,\r\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getTotalFromVotes = (votes: Vote[]) => {\r\n  return votes.reduce((accum, vote) => {\r\n    let power = parseFloat(vote.metadata?.votingPower)\r\n\r\n    if (!power) {\r\n      power = 0\r\n    }\r\n\r\n    return accum + power\r\n  }, 0)\r\n}\r\n","export const PROPOSALS_TO_SHOW = 10\r\nexport const ADMINS = [\r\n  '0x842B508681eE336E74600974B4623B709477d29D', // TARO\r\n  '0x977e0c1005dff8749f8cac22f4df0bd5f013d1a7', // CHUNGUS\r\n  '0x6eaf1b33b8672c5dc40ab8f4ba3a0111723126c7', // HOPS\r\n].map((address) => address.toLowerCase())\r\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\r\nexport const SNAPSHOT_VERSION = '0.1.3'\r\nexport const PANCAKE_SPACE = 'cake.eth'\r\nexport const VOTE_THRESHOLD = 10\r\n"],"sourceRoot":""}
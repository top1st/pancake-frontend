{"version":3,"sources":["components/FoldableSection/FoldableText.tsx","components/AddressInputSelect/index.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx","views/Nft/market/components/GridPlaceholder.tsx","views/Nft/market/components/SearchBar.tsx","components/FoldableSection/SectionsWithFoldableText.tsx","views/Nft/market/Home/Collections.tsx","views/Nft/market/Home/Newest.tsx","views/Nft/market/Home/config.ts","views/Nft/market/Home/index.tsx"],"names":["Wrapper","styled","Flex","StyledExpandableLabelWrapper","StyledChildrenFlex","isExpanded","theme","colors","inputSecondary","FoldableText","title","children","props","t","useTranslation","useState","setIsExpanded","flexDirection","onClick","justifyContent","alignItems","pb","fontWeight","expanded","ResultStatus","SubMenu","div","input","radii","default","isOpen","AddressLink","Text","initialState","isFetching","resultFound","NOT_VALID","value","defaultValidAddressHandler","Promise","resolve","AddressInputSelect","onValidAddress","onAddressClick","state","setState","useEffect","isAddress","a","prevState","hasResults","FOUND","NOT_FOUND","validAddressHandler","position","placeholder","subject","toLowerCase","onChange","evt","newValue","target","style","zIndex","paddingRight","top","right","px","sharedStyles","clipPath","clipFill","css","isDark","dark","light","background","ConcaveContainer","Box","ConvexContainer","ConvexTop","width","height","id","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","dividerFill","index","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","getPadding","ChildrenWrapper","Container","mediaQueries","sm","lg","PageSection","svgFill","hasCurvedDivider","concaveDivider","containerProps","innerProps","GridPlaceholderItem","mb","GridPlaceholder","numItems","gridGap","gridTemplateColumns","times","map","itemKey","SearchBar","history","useHistory","push","nftsBaseUrl","SectionsWithFoldableText","header","config","maxWidth","scale","color","i","description","length","desc","as","Collections","collections","useGetCollections","orderedCollections","orderBy","collection","totalVolumeBNB","parseFloat","Link","to","variant","endIcon","slice","bgSrc","banner","small","avatarSrc","avatar","collectionName","name","url","address","fontSize","amount","disabled","Newest","nfts","newestNfts","setNewestNfts","getLatestListedNfts","nftsFromSg","getNftsFromDifferentCollectionsApi","nft","collectionAddress","tokenId","nftsFromApi","nftFromSg","nftFromApi","marketData","fetchNewestNfts","useNewestNfts","gridRowGap","gridColumnGap","currentAskPrice","pancakeBunniesAddress","isTradable","undefined","Gradient","gradients","cardHeader","StyledPageHeader","PageHeader","StyledHeaderInner","Home","account","useWeb3React","useTheme","Page","mt","margin","p","m"],"mappings":"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","file":"static/js/19.8507e334.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ExpandableLabel, Flex, FlexProps, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface FoldableTextProps extends FlexProps {\r\n  title?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  cursor: pointer;\r\n`\r\n\r\nconst StyledExpandableLabelWrapper = styled(Flex)`\r\n  button {\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n  }\r\n`\r\n\r\nconst StyledChildrenFlex = styled(Flex)<{ isExpanded?: boolean }>`\r\n  overflow: hidden;\r\n  height: ${({ isExpanded }) => (isExpanded ? '100%' : '0px')};\r\n  padding-bottom: ${({ isExpanded }) => (isExpanded ? '16px' : '0px')};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n`\r\n\r\nconst FoldableText: React.FC<FoldableTextProps> = ({ title, children, ...props }) => {\r\n  const { t } = useTranslation()\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n  return (\r\n    <Wrapper {...props} flexDirection=\"column\" onClick={() => setIsExpanded(!isExpanded)}>\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" pb=\"16px\">\r\n        <Text fontWeight=\"bold\">{title}</Text>\r\n        <StyledExpandableLabelWrapper>\r\n          <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n            {isExpanded ? t('Hide') : t('Details')}\r\n          </ExpandableLabel>\r\n        </StyledExpandableLabelWrapper>\r\n      </Flex>\r\n      <StyledChildrenFlex isExpanded={isExpanded} flexDirection=\"column\">\r\n        {children}\r\n      </StyledChildrenFlex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FoldableText\r\n","import React, { ChangeEvent, useState, useEffect } from 'react'\r\nimport { Box, BoxProps, Text, Input } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { isAddress } from 'utils'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CircleLoader from 'components/Loader/CircleLoader'\r\n\r\nenum ResultStatus {\r\n  NOT_VALID,\r\n  FOUND,\r\n  NOT_FOUND,\r\n}\r\n\r\ninterface AddressInputSelectProps extends BoxProps {\r\n  onValidAddress?: (value: string) => Promise<boolean>\r\n  onAddressClick: (value: string) => void\r\n}\r\n\r\nconst SubMenu = styled.div<{ isOpen: boolean }>`\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 0 0 ${({ theme }) => theme.radii.default} ${({ theme }) => theme.radii.default};\r\n  left: 0;\r\n  padding-bottom: 8px;\r\n  padding-top: 16px;\r\n  position: absolute;\r\n  top: calc(100% - 12px);\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  width: 100%;\r\n  z-index: 15;\r\n\r\n  ${({ isOpen }) =>\r\n    isOpen &&\r\n    `\r\n    height: auto;\r\n    opacity: 1;\r\n    transform: scaleY(1);\r\n  `}\r\n`\r\n\r\nconst AddressLink = styled(Text)`\r\n  cursor: pointer;\r\n  overflow-wrap: break-word;\r\n  font-weight: bold;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n`\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  resultFound: ResultStatus.NOT_VALID,\r\n  value: '',\r\n}\r\n\r\nconst defaultValidAddressHandler = () => Promise.resolve(true)\r\n\r\nconst AddressInputSelect: React.FC<AddressInputSelectProps> = ({\r\n  onValidAddress = defaultValidAddressHandler,\r\n  onAddressClick,\r\n  ...props\r\n}) => {\r\n  const [state, setState] = useState(initialState)\r\n  const { t } = useTranslation()\r\n  const { isFetching, resultFound, value } = state\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { value: newValue } = evt.target\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      value: newValue,\r\n    }))\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setState(initialState)\r\n    onAddressClick(state.value)\r\n  }\r\n\r\n  // When we have a valid address fetch the data\r\n  useEffect(() => {\r\n    const isValidAddress = isAddress(value) !== false\r\n\r\n    const validAddressHandler = async () => {\r\n      try {\r\n        setState((prevState) => ({ ...prevState, isFetching: true }))\r\n        const hasResults = await onValidAddress(value)\r\n\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          isFetching: false,\r\n          resultFound: hasResults ? ResultStatus.FOUND : ResultStatus.NOT_FOUND,\r\n        }))\r\n      } catch {\r\n        setState((prevState) => ({ ...prevState, isFetching: false }))\r\n      }\r\n    }\r\n\r\n    if (isValidAddress) {\r\n      validAddressHandler()\r\n    } else {\r\n      setState((prevState) => ({ ...prevState, resultFound: ResultStatus.NOT_VALID }))\r\n    }\r\n  }, [value, onValidAddress, setState])\r\n\r\n  return (\r\n    <Box position=\"relative\" {...props}>\r\n      <Input\r\n        placeholder={t('Search %subject%', { subject: t('Address').toLowerCase() })}\r\n        value={state.value}\r\n        onChange={handleChange}\r\n        style={{ position: 'relative', zIndex: 16, paddingRight: '40px' }}\r\n      />\r\n      {isFetching && (\r\n        <Box position=\"absolute\" top=\"12px\" right=\"16px\" style={{ zIndex: 17 }}>\r\n          <CircleLoader />\r\n        </Box>\r\n      )}\r\n      <SubMenu isOpen={resultFound !== ResultStatus.NOT_VALID}>\r\n        {resultFound === ResultStatus.FOUND ? (\r\n          <AddressLink onClick={handleClick}>{state.value}</AddressLink>\r\n        ) : (\r\n          <Text px=\"16px\" fontWeight=\"bold\">\r\n            {t('No results found.')}\r\n          </Text>\r\n        )}\r\n      </SubMenu>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AddressInputSelect\r\n","import React from 'react'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport { ClipFill } from '../types'\r\n\r\ninterface CurveProps {\r\n  clipFill?: ClipFill\r\n}\r\n\r\ninterface ContainerProps extends CurveProps {\r\n  clipPath: string\r\n}\r\n\r\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\r\n  width: 100%;\r\n  height: 20px;\r\n  clip-path: url(${clipPath});\r\n\r\n  background: ${() => {\r\n    if (theme.isDark) {\r\n      return clipFill?.dark || clipFill?.light || theme.colors.background\r\n    }\r\n    return clipFill?.light || theme.colors.background\r\n  }};\r\n\r\n  & svg {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ConcaveContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\r\n`\r\n\r\nconst ConvexContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\r\n`\r\n\r\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n\r\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\r\nimport { DividerFill, ClipFill } from './types'\r\n\r\ninterface CurvedDividerProps extends WrapperProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concave?: boolean\r\n  clipFill?: ClipFill\r\n}\r\ninterface WrapperProps {\r\n  index: number\r\n  dividerFill?: DividerFill\r\n}\r\n\r\nconst Wrapper = styled.div<WrapperProps>`\r\n  background: ${({ theme, dividerFill }) => {\r\n    if (theme.isDark) {\r\n      return dividerFill?.dark || dividerFill?.light || 'none'\r\n    }\r\n    return dividerFill?.light || dividerFill?.dark || 'none'\r\n  }};\r\n  z-index: ${({ index }) => index};\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\n\r\nconst ComponentWrapper = styled.div<WrapperProps>`\r\n  z-index: ${({ index }) => index + 1};\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`\r\n\r\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\r\n  index,\r\n  dividerPosition,\r\n  dividerComponent,\r\n  concave,\r\n  clipFill,\r\n  dividerFill,\r\n}) => {\r\n  const showConvexTop = dividerPosition === 'top' && !concave\r\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\r\n  const showConcaveTop = dividerPosition === 'top' && concave\r\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\r\n\r\n  const getConcaveDivider = () => {\r\n    return (\r\n      <>\r\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\r\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const getConvexDivider = () => {\r\n    return (\r\n      <>\r\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\r\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper index={index} dividerFill={dividerFill}>\r\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\r\n      {getConcaveDivider()}\r\n      {getConvexDivider()}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CurvedDivider\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\r\nimport Container from 'components/Layout/Container'\r\nimport CurvedDivider from './CurvedDivider'\r\nimport { ClipFill, DividerFill } from './types'\r\n\r\ninterface PageSectionProps extends BackgroundColorProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  hasCurvedDivider?: boolean\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concaveDivider?: boolean\r\n  containerProps?: BoxProps\r\n  innerProps?: BoxProps\r\n  clipFill?: ClipFill\r\n  dividerFill?: DividerFill\r\n}\r\n\r\ninterface BackgroundColorProps extends FlexProps {\r\n  index: number\r\n  background?: string\r\n  getPadding?: () => string\r\n}\r\n\r\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  z-index: ${({ index }) => index - 1};\r\n  background: ${({ background, theme }) => background || theme.colors.background};\r\n  padding: ${({ getPadding }) => getPadding()};\r\n`\r\n\r\nconst ChildrenWrapper = styled(Container)`\r\n  min-height: auto;\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 48px;\r\n    padding-bottom: 48px;\r\n  }\r\n`\r\n\r\nconst PageSection: React.FC<PageSectionProps> = ({\r\n  children,\r\n  background,\r\n  svgFill,\r\n  index = 1,\r\n  dividerComponent,\r\n  dividerPosition = 'bottom',\r\n  hasCurvedDivider = true,\r\n  concaveDivider = false,\r\n  clipFill,\r\n  dividerFill,\r\n  containerProps,\r\n  innerProps,\r\n  ...props\r\n}) => {\r\n  const getPadding = () => {\r\n    // No curved divider\r\n    if (!hasCurvedDivider) {\r\n      return '48px 0'\r\n    }\r\n    // Bottom curved divider\r\n    // Less bottom padding, as the divider is present there\r\n    if (dividerPosition === 'bottom') {\r\n      return '48px 0 14px'\r\n    }\r\n    // Top curved divider\r\n    // Less top padding, as the divider is present there\r\n    if (dividerPosition === 'top') {\r\n      return '14px 0 48px'\r\n    }\r\n    return '48px 0'\r\n  }\r\n\r\n  return (\r\n    <Box {...containerProps}>\r\n      {hasCurvedDivider && dividerPosition === 'top' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\r\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\r\n      </BackgroundColor>\r\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PageSection\r\n","import React from 'react'\r\nimport { Box, BoxProps, Grid, GridProps, Skeleton } from '@pancakeswap/uikit'\r\nimport times from 'lodash/times'\r\n\r\ninterface GridPlaceholderProps extends GridProps {\r\n  numItems?: number\r\n}\r\n\r\nexport const GridPlaceholderItem: React.FC<BoxProps> = (props) => (\r\n  <Box {...props}>\r\n    <Skeleton height=\"258px\" mb=\"8px\" />\r\n    <Skeleton width=\"30%\" mb=\"4px\" />\r\n    <Skeleton width=\"45%\" mb=\"16px\" />\r\n    <Skeleton />\r\n  </Box>\r\n)\r\n\r\nconst GridPlaceholder: React.FC<GridPlaceholderProps> = ({ numItems = 12, ...props }) => (\r\n  <Grid gridGap=\"16px\" gridTemplateColumns={['1fr', null, null, 'repeat(4, 1fr)']} {...props}>\r\n    {times(numItems).map((itemKey) => (\r\n      <GridPlaceholderItem key={itemKey} />\r\n    ))}\r\n  </Grid>\r\n)\r\n\r\nexport default GridPlaceholder\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AddressInputSelect from 'components/AddressInputSelect'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\n\r\nconst SearchBar: React.FC = (props) => {\r\n  const history = useHistory()\r\n\r\n  const handleAddressClick = (value: string) => {\r\n    history.push(`${nftsBaseUrl}/profile/${value}`)\r\n  }\r\n\r\n  return <AddressInputSelect onAddressClick={handleAddressClick} {...props} />\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react'\r\nimport { Text, Heading, Card, CardHeader, CardBody, Box, BoxProps } from '@pancakeswap/uikit'\r\nimport FoldableText from './FoldableText'\r\n\r\ninterface Props extends BoxProps {\r\n  header: string\r\n  config: { title: string; description: string[] }[]\r\n}\r\n\r\nconst SectionsWithFoldableText: React.FC<Props> = ({ header, config, ...props }) => {\r\n  return (\r\n    <Box maxWidth=\"888px\" {...props}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Heading scale=\"lg\" color=\"secondary\">\r\n            {header}\r\n          </Heading>\r\n        </CardHeader>\r\n        <CardBody>\r\n          {config.map(({ title, description }, i, { length }) => (\r\n            <FoldableText key={title} id={title} mb={i + 1 === length ? '' : '24px'} title={title}>\r\n              {description.map((desc) => {\r\n                return (\r\n                  <Text key={desc} color=\"textSubtle\" as=\"p\">\r\n                    {desc}\r\n                  </Text>\r\n                )\r\n              })}\r\n            </FoldableText>\r\n          ))}\r\n        </CardBody>\r\n      </Card>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default SectionsWithFoldableText\r\n","import React from 'react'\r\nimport orderBy from 'lodash/orderBy'\r\nimport { Button, ChevronRightIcon, Flex, Grid, Heading, Text } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useGetCollections } from 'state/nftMarket/hooks'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { HotCollectionCard } from '../components/CollectibleCard'\r\nimport { BNBAmountLabel } from '../components/CollectibleCard/styles'\r\n\r\nconst Collections = () => {\r\n  const { t } = useTranslation()\r\n  const collections = useGetCollections()\r\n\r\n  const orderedCollections = orderBy(\r\n    collections,\r\n    (collection) => (collection.totalVolumeBNB ? parseFloat(collection.totalVolumeBNB) : 0),\r\n    'desc',\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"32px\">\r\n        <Heading as=\"h3\" scale=\"lg\">\r\n          {t('Hot Collections')}\r\n        </Heading>\r\n        <Button\r\n          as={Link}\r\n          to={`${nftsBaseUrl}/collections/`}\r\n          variant=\"secondary\"\r\n          scale=\"sm\"\r\n          endIcon={<ChevronRightIcon color=\"primary\" width=\"24px\" />}\r\n        >\r\n          {t('View All')}\r\n        </Button>\r\n      </Flex>\r\n      <Grid gridGap=\"16px\" gridTemplateColumns={['1fr', '1fr', 'repeat(2, 1fr)', 'repeat(3, 1fr)']} mb=\"64px\">\r\n        {orderedCollections.slice(0, 5).map((collection) => {\r\n          return (\r\n            <HotCollectionCard\r\n              key={collection.address}\r\n              bgSrc={collection.banner.small}\r\n              avatarSrc={collection.avatar}\r\n              collectionName={collection.name}\r\n              url={`${nftsBaseUrl}/collections/${collection.address}`}\r\n            >\r\n              <Flex alignItems=\"center\">\r\n                <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                  {t('Volume')}\r\n                </Text>\r\n                <BNBAmountLabel amount={collection.totalVolumeBNB ? parseFloat(collection.totalVolumeBNB) : 0} />\r\n              </Flex>\r\n            </HotCollectionCard>\r\n          )\r\n        })}\r\n        <HotCollectionCard\r\n          disabled\r\n          bgSrc=\"/images/collections/no-collection-banner-sm.png\"\r\n          collectionName={t('Coming Soon')}\r\n        >\r\n          <Text color=\"textDisabled\" fontSize=\"12px\">\r\n            {t('More Collections are on their way!')}\r\n          </Text>\r\n        </HotCollectionCard>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Collections\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Heading, Flex, Button, Grid, ChevronRightIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Link } from 'react-router-dom'\r\nimport { NftToken } from 'state/nftMarket/types'\r\nimport { getLatestListedNfts, getNftsFromDifferentCollectionsApi } from 'state/nftMarket/helpers'\r\nimport { nftsBaseUrl, pancakeBunniesAddress } from 'views/Nft/market/constants'\r\nimport { CollectibleLinkCard } from '../components/CollectibleCard'\r\nimport GridPlaceholder from '../components/GridPlaceholder'\r\n\r\n/**\r\n * Fetch latest NFTs data from SG+API and combine them\r\n * @returns Array of NftToken\r\n */\r\nconst useNewestNfts = () => {\r\n  const [newestNfts, setNewestNfts] = useState<NftToken[]>(null)\r\n\r\n  useEffect(() => {\r\n    const fetchNewestNfts = async () => {\r\n      const nftsFromSg = await getLatestListedNfts(16)\r\n      const nftsFromApi = await getNftsFromDifferentCollectionsApi(\r\n        nftsFromSg.map((nft) => ({ collectionAddress: nft.collection.id, tokenId: nft.tokenId })),\r\n      )\r\n\r\n      const nfts = nftsFromSg.map((nftFromSg, index) => {\r\n        const nftFromApi = nftsFromApi[index]\r\n        return { ...nftFromApi, marketData: nftFromSg }\r\n      })\r\n      setNewestNfts(nfts)\r\n    }\r\n    fetchNewestNfts()\r\n  }, [])\r\n\r\n  return newestNfts\r\n}\r\n\r\nconst Newest: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const nfts = useNewestNfts()\r\n\r\n  return (\r\n    <div>\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"26px\">\r\n        <Heading>{t('Newest Arrivals')}</Heading>\r\n        <Button\r\n          as={Link}\r\n          to={`${nftsBaseUrl}/collections/`}\r\n          variant=\"secondary\"\r\n          scale=\"sm\"\r\n          endIcon={<ChevronRightIcon color=\"primary\" />}\r\n        >\r\n          {t('View All')}\r\n        </Button>\r\n      </Flex>\r\n      {nfts ? (\r\n        <Grid\r\n          gridRowGap=\"24px\"\r\n          gridColumnGap=\"16px\"\r\n          gridTemplateColumns={['1fr', 'repeat(2, 1fr)', 'repeat(2, 1fr)', 'repeat(4, 1fr)']}\r\n        >\r\n          {nfts.map((nft) => {\r\n            const isPBCollection = nft.collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\r\n            const currentAskPrice =\r\n              !isPBCollection && nft.marketData?.isTradable ? parseFloat(nft.marketData.currentAskPrice) : undefined\r\n            return (\r\n              <CollectibleLinkCard\r\n                key={nft.collectionAddress + nft.tokenId}\r\n                nft={nft}\r\n                currentAskPrice={currentAskPrice}\r\n              />\r\n            )\r\n          })}\r\n        </Grid>\r\n      ) : (\r\n        <GridPlaceholder numItems={8} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Newest\r\n","import { ContextApi } from 'contexts/Localization/types'\r\n\r\nconst config = (t: ContextApi['t']) => {\r\n  return [\r\n    {\r\n      title: t('I sold an NFT, where’s my BNB?'),\r\n      description: [\r\n        t(\r\n          'Trades are settled in WMATIC, which is a wrapped version of BNB used on Binance Smart Chain. That means that when you sell an item, WMATIC is sent to your wallet instead of BNB.',\r\n        ),\r\n        t('You can instantly swap your WMATIC for BNB with no trading fees on MintySwap.'),\r\n      ],\r\n    },\r\n    {\r\n      title: t('When can I trade other NFT Collections?'),\r\n      description: [\r\n        t(\r\n          'Soon! The current NFT Market is a basic version (phase 1), with early access to trading MintySwap NFTs only.',\r\n        ),\r\n        t('Other collections will be coming soon. We’ll make an announcement soon about the launch of the V2 Market.'),\r\n      ],\r\n    },\r\n    {\r\n      title: t('How can I list my NFT collection on the Market?'),\r\n      description: [\r\n        t('In Phase 2 of the NFT Marketplace, collections must be whitelisted before they may be listed.'),\r\n        t(\r\n          'We are now accepting applications from NFT collection owners seeking to list their collections. Please apply here: https://docs.pancakeswap.finance/contact-us/nft-market-applications',\r\n        ),\r\n      ],\r\n    },\r\n    {\r\n      title: t('What are the fees?'),\r\n      description: [\r\n        t(\r\n          '100% of all platform fees taken by MintySwap from sales are used to buy back and BURN CAKE tokens in our weekly CAKE burns.',\r\n        ),\r\n        t(\r\n          'Platform fees: 2% is subtracted from NFT sales on the market. Subject to change.Collection fees: Additional fees may be taken by collection creators, once those collections are live. These will not contribute to the CAKE burns.',\r\n        ),\r\n      ],\r\n    },\r\n  ]\r\n}\r\n\r\nexport default config\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, Button, Heading, Flex } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SectionsWithFoldableText from 'components/FoldableSection/SectionsWithFoldableText'\r\nimport PageSection from 'components/PageSection'\r\nimport { PageMeta } from 'components/Layout/Page'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\nimport useTheme from 'hooks/useTheme'\r\nimport SearchBar from '../components/SearchBar'\r\nimport Collections from './Collections'\r\nimport Newest from './Newest'\r\nimport config from './config'\r\n\r\nconst Gradient = styled(Box)`\r\n  background: ${({ theme }) => theme.colors.gradients.cardHeader};\r\n`\r\n\r\nconst StyledPageHeader = styled(PageHeader)`\r\n  margin-bottom: -40px;\r\n  padding-bottom: 40px;\r\n`\r\n\r\nconst StyledHeaderInner = styled(Flex)`\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  & div:nth-child(1) {\r\n    order: 1;\r\n  }\r\n  & div:nth-child(2) {\r\n    order: 0;\r\n    margin-bottom: 32px;\r\n    align-self: end;\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    & div:nth-child(1) {\r\n      order: 0;\r\n    }\r\n    & div:nth-child(2) {\r\n      order: 1;\r\n      margin-bottom: 0;\r\n      align-self: auto;\r\n    }\r\n  }\r\n`\r\n\r\nconst Home = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <>\r\n      <PageMeta />\r\n      <StyledPageHeader>\r\n        <StyledHeaderInner>\r\n          <div>\r\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n              {t('NFT Market')}\r\n            </Heading>\r\n            <Heading scale=\"lg\" color=\"text\">\r\n              {t('Buy and Sell NFTs on Binance Smart Chain')}\r\n            </Heading>\r\n            {account && (\r\n              <Button as={Link} to={`${nftsBaseUrl}/profile/${account.toLowerCase()}`} mt=\"32px\">\r\n                {t('Manage/Sell')}\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <SearchBar />\r\n        </StyledHeaderInner>\r\n      </StyledPageHeader>\r\n      <PageSection\r\n        innerProps={{ style: { margin: '0', width: '100%' } }}\r\n        background={theme.colors.background}\r\n        index={1}\r\n        concaveDivider\r\n        dividerPosition=\"top\"\r\n      >\r\n        <Collections />\r\n        <Newest />\r\n      </PageSection>\r\n      <Gradient p=\"64px 0\">\r\n        <SectionsWithFoldableText header={t('FAQs')} config={config(t)} m=\"auto\" />\r\n      </Gradient>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"],"sourceRoot":""}
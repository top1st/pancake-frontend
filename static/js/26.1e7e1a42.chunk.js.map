{"version":3,"sources":["components/ApproveConfirmButtons.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx","views/Lottery/components/BuyTicketsModal/BuyTicketsModal.tsx","state/lottery/hooks.ts","views/Lottery/hooks/useGetNextLotteryEvent.ts","views/Lottery/hooks/useStatusTransitions.tsx","views/Lottery/svgs/TicketPurchaseCard.tsx","views/Lottery/svgs/WhiteBunny.tsx","views/Lottery/svgs/Balls.tsx","views/Lottery/svgs/MatchExamples.tsx","views/Lottery/svgs/PoolAllocationChart.tsx","views/Lottery/components/BuyTicketsModal/NumTicketsToBuyButton.tsx","views/Lottery/components/BuyTicketsModal/TicketInput.tsx","views/Lottery/components/BuyTicketsModal/EditNumbersModal.tsx","views/Lottery/helpers.tsx","views/Lottery/components/BuyTicketsModal/generateTicketNumbers.tsx","views/Lottery/components/BuyTicketsModal/useTicketsReducer.tsx","views/Lottery/components/BuyTicketsButton.tsx","views/Lottery/components/Hero.tsx","state/lottery/fetchUnclaimedUserRewards.ts","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/TicketNumber.tsx","../node_modules/canvas-confetti/dist/confetti.module.mjs","views/Lottery/hooks/useGetUnclaimedRewards.ts","views/Lottery/components/ClaimPrizesModal/ClaimPrizesInner.tsx","views/Lottery/components/ClaimPrizesModal/index.tsx","views/Lottery/components/ViewTicketsModal/PreviousRoundTicketsInner.tsx","views/Lottery/components/ViewTicketsModal/CurrentRoundTicketsInner.tsx","views/Lottery/components/ViewTicketsModal/index.tsx","views/Lottery/components/RewardBracketDetail.tsx","views/Lottery/components/RewardBrackets.tsx","views/Lottery/components/NextDrawCard.tsx","views/Lottery/components/Countdown/Timer.tsx","views/Lottery/hooks/useNextEventCountdown.ts","views/Lottery/components/Countdown/index.tsx","views/Lottery/components/HistoryTabMenu.tsx","views/Lottery/components/YourHistoryCard/FinishedRoundRow.tsx","views/Lottery/components/YourHistoryCard/FinishedRoundTable.tsx","views/Lottery/components/PreviousRoundCard/Body.tsx","views/Lottery/components/PreviousRoundCard/FooterExpanded.tsx","views/Lottery/components/PreviousRoundCard/Footer.tsx","views/Lottery/components/YourHistoryCard/index.tsx","views/Lottery/components/AllHistoryCard/RoundSwitcher.tsx","views/Lottery/components/AllHistoryCard/index.tsx","views/Lottery/components/CheckPrizesSection.tsx","views/Lottery/components/HowToPlay.tsx","views/Lottery/hooks/useShowMoreUserRounds.ts","views/Lottery/index.tsx","views/Lottery/pageSectionStyles.tsx","hooks/useApproveConfirmTransaction.ts"],"names":["ButtonArrangement","StyledApproveConfirmButtonRow","styled","div","theme","mediaQueries","md","Button","UIKitButton","iconAttrs","width","color","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isApproving","isConfirming","isConfirmDisabled","onApprove","onConfirm","buttonArrangement","ROW","confirmLabel","confirmId","t","useTranslation","confirmButtonText","disabled","onClick","endIcon","undefined","isLoading","justifyContent","id","sharedStyles","clipPath","clipFill","css","isDark","dark","light","colors","background","ConcaveContainer","Box","ConvexContainer","ConvexTop","height","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","Wrapper","dividerFill","index","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","Flex","getPadding","ChildrenWrapper","Container","sm","lg","PageSection","children","svgFill","hasCurvedDivider","concaveDivider","containerProps","innerProps","props","BuyingStage","useGetCurrentLotteryId","useSelector","state","lottery","currentLotteryId","useGetUserLotteriesGraphData","userLotteryData","useGetLotteriesGraphData","lotteriesData","useLottery","currentRound","processedCurrentRound","useProcessLotteryResponse","isTransitioning","maxNumberTicketsPerBuyOrClaimAsString","maxNumberTicketsPerBuyOrClaim","useMemo","BigNumber","useGetNextLotteryEvent","endTime","status","useState","nextEventTime","preCountdownText","postCountdownText","nextEvent","setNextEvent","useEffect","LotteryStatus","OPEN","CLOSE","CLAIMABLE","useStatusTransitions","account","useWeb3React","dispatch","useAppDispatch","previousStatus","usePreviousValue","fetchPublicLotteries","fetchUserLotteries","fetchCurrentLotteryId","interval","setInterval","a","clearInterval","TicketPurchaseCard","viewBox","filter","fill","fillRule","clipRule","x","y","stroke","strokeWidth","strokeDasharray","filterUnits","colorInterpolationFilters","floodOpacity","result","in","type","values","dx","dy","mode","in2","stdDeviation","WhiteBunny","maskUnits","mask","cx","cy","rx","ry","BallTextWrapper","BallText","Text","rotationTransform","ballsMap","pink","r","style","mixBlendMode","opacity","lilac","teal","aqua","green","yellow","BallWithNumber","number","size","fontSize","BallComponent","alignItems","position","mx","bold","MatchExampleA","rest","xmlns","x1","y1","x2","y2","gradientUnits","stopColor","offset","transform","MatchExampleB","PoolAllocationChart","strokeOpacity","strokeLinejoin","StyledButton","NumTicketsToBuyButton","scale","p","variant","InputsContainer","isDuplicate","focused","DigitInput","input","TicketContainer","ticket","duplicateWith","updateTicket","setFocused","containerRef","useRef","digit1","digit2","digit3","digit4","digit5","digit6","digitRefs","scrollInputIntoView","current","scrollIntoView","block","behavior","onPasteHandler","e","preventDefault","pasteContent","clipboardData","getData","length","test","filler","Array","split","onFocusHandler","onBlurHandler","onChangeHandler","event","digitId","currentKey","parseInt","key","includes","newNumbers","numbers","nextDigitId","nextInput","focus","prevDigitId","ref","value","onKeyDown","placeholder","onChange","onFocus","onBlur","onPaste","inputMode","StyledModal","Modal","ScrollableContainer","cardBorder","EditNumbersModal","totalCost","randomize","tickets","allComplete","onDismiss","useTheme","title","headerBackground","gradients","cardHeader","onBack","mb","map","TicketInput","flexDirection","m","mt","parseRetrievedNumber","numberAsArray","splice","reverse","join","getDrawnDate","locale","endTimeInMs","Date","toLocaleDateString","dateTimeOptions","dateOptions","year","month","day","timeOptions","hour","minute","processLotteryResponse","lotteryData","priceTicketInCakeAsString","priceTicketInCake","discountDivisorAsString","discountDivisor","amountCollectedInCakeAsString","amountCollectedInCake","lotteryId","userTickets","startTime","treasuryFee","firstTicketId","lastTicketId","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","generateTicketNumbers","numberOfTickets","userCurrentTickets","minNumber","maxNumber","existingTicketNumbers","generatedTicketNumbers","count","randomNumber","random","push","ticketsToBuy","ticketNumber","getInitialState","amount","randomTicketsAsStringArray","toString","from","_","i","isComplete","reducer","action","payload","ticketId","newDuplicates","forEach","prevTicketId","dupsToUpdate","indexToRemove","findIndex","duplicate","updatedTicket","every","Error","ShortcutButtonsWrapper","isVisible","BuyTicketsModal","callWithGasPrice","useCallWithGasPrice","setTicketsToBuy","discountValue","setDiscountValue","setTotalCost","ticketCostBeforeDiscount","setTicketCostBeforeDiscount","BUY","buyingStage","setBuyingStage","BIG_ZERO","maxPossibleTicketPurchase","setMaxPossibleTicketPurchase","maxTicketPurchaseExceeded","setMaxTicketPurchaseExceeded","userNotEnoughCake","setUserNotEnoughCake","lotteryContract","useLotteryV2Contract","cakeContract","useCake","toastSuccess","useToast","useTokenBalance","tokens","cake","address","userCake","balance","fetchStatus","stringifiedUserCake","toJSON","memoisedUserCake","cakePriceBusd","usePriceCakeBusd","hasFetchedBalance","FetchStatus","SUCCESS","userCakeDisplayBalance","getFullDisplayBalance","TooltipComponent","useTooltip","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","limitNumberByMaxTicketsPerBuy","useCallback","gt","getTicketCostAfterDiscount","numberTickets","times","plus","minus","getMaxTicketBuyWithDiscount","costAfterDiscount","ticketsBoughtWithDiscount","overallTicketBuy","validateInput","inputNumber","limitedNumberTickets","eq","maxPurchase","maxBalancePurchase","limitedMaxPurchase","lt","maxPlusDiscountTickets","secondTicketDiscountBuy","getMaxPossiblePurchase","numberOfTicketsToBuy","costBeforeDiscount","discountBeingApplied","getNumTicketsByPercentage","percentage","percentageOfMaxTickets","Math","floor","toNumber","tenPercentOfBalance","twentyFivePercentOfBalance","fiftyPercentOfBalance","oneHundredPercentOfBalance","handleNumberButtonClick","toFixed","useReducer","reversedTicket","num","unshift","useTicketsReducer","getTicketsForPurchase","useApproveConfirmTransaction","onRequiresApproval","allowance","response","currentAllowance","ethersToBigNumber","ethers","constants","MaxUint256","onApproveSuccess","receipt","Toast","txHash","transactionHash","ticketsForPurchase","onSuccess","fetchUserTicketsAndLotteries","isApproved","isConfirmed","handleApprove","handleConfirm","disableBuying","lte","EDIT","minWidth","mr","isWarning","onUserInput","inputAsInt","inputAsBN","currencyValue","maxTickets","display","percentageAsBn","isNaN","percentageDiscount","ml","borderTop","pt","SEQUENTIAL","ConnectWalletButton","BuyTicketsButton","useModal","onPresentBuyTicketsModal","floatingStarsLeft","keyframes","floatingStarsRight","floatingTicketLeft","floatingTicketRight","mainTicketAnimation","PrizeTotalBalance","Balance","gold","StyledBuyTicketButton","xs","ButtonWrapper","TicketSvgWrapper","Decorations","StarsDecorations","xl","Hero","prizeInBusd","prizeTotal","getBalanceNumber","ticketBuyIsDisabled","src","alt","my","prefix","decimals","lotteryAddress","getLotteryV2Address","fetchCakeRewardsForTickets","winningTickets","calls","winningTicket","roundId","rewardBracket","name","params","multicallv2","lotteryV2Abi","cakeRewards","cakeTotal","reduce","accum","cakeReward","ticketsWithUnclaimedRewards","console","error","getRewardBracketByNumber","ticketNumAsArray","winningNumsAsArray","matchingNumbers","getWinningTickets","roundDataAndUserTickets","ticketsWithRewardBrackets","allWinningTickets","unclaimedWinningTickets","getWinningNumbersForRound","targetRoundId","targetRound","find","pastLottery","fetchUnclaimedUserRewards","rounds","toLowerCase","roundsInRange","round","lastCheckableRoundId","MAX_LOTTERIES_REQUEST_SIZE","claimableRounds","roundsWithPossibleWinnings","claimed","totalTickets","roundsToCheck","slice","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","idsToCheck","fetchUserTicketsForMultipleRounds","userTicketData","roundsWithTickets","roundData","roundDataAndWinningTickets","Promise","all","winningTicketsForPastRounds","roundsWithWinningTickets","winningTicketData","roundsWithUnclaimedWinningTickets","WinningNumbers","rotateText","rotationValues","setRotationValues","numAsArray","uniqueId","StyledNumberWrapper","radii","default","RewardHighlighter","numberMatches","primary","TicketNumber","localId","digit","_uniqueId","module","main","global","isWorker","workerSize","canUseWorker","Worker","Blob","OffscreenCanvas","OffscreenCanvasRenderingContext2D","HTMLCanvasElement","prototype","transferControlToOffscreen","URL","createObjectURL","noop","promise","func","ModulePromise","exports","Prom","raf","frame","cancel","TIME","frames","lastFrameTime","requestAnimationFrame","cancelAnimationFrame","cb","onFrame","time","setTimeout","timer","clearTimeout","getWorker","worker","prom","resolves","code","warn","execute","options","callback","postMessage","init","canvas","offscreen","fire","done","resolve","workerDone","msg","data","removeEventListener","addEventListener","bind","reset","decorate","defaults","particleCount","angle","spread","startVelocity","decay","gravity","drift","ticks","shapes","zIndex","disableForReducedMotion","scalar","prop","val","convert","onlyPositiveInt","toDecimal","str","colorsToRgb","hexToRgb","String","replace","substring","g","b","setCanvasWindowSize","document","documentElement","clientWidth","clientHeight","setCanvasRectSize","rect","getBoundingClientRect","randomPhysics","opts","radAngle","PI","radSpread","wobble","velocity","angle2D","tiltAngle","shape","tick","totalTicks","tiltSin","tiltCos","wobbleX","wobbleY","ovalScalar","animate","fettis","resizer","animationFrame","destroy","animatingFettis","context","getContext","onDone","clearRect","update","fetti","cos","sin","progress","fillStyle","beginPath","ellipse","abs","radiusX","radiusY","rotation","startAngle","endAngle","antiClockwise","save","translate","rotate","arc","restore","moveTo","lineTo","closePath","updateFetti","addFettis","concat","confettiCannon","globalOpts","animationObj","isLibCanvas","allowResize","globalDisableForReducedMotion","Boolean","initialized","__confetti_initialized","preferLessMotion","matchMedia","matches","fireLocal","min","max","Number","origin","Object","getOrigin","temp","startX","startY","createElement","top","left","pointerEvents","getCanvas","body","appendChild","onResize","obj","resize","removeChild","useWorker","create","window","self","this","ClaimInnerContainer","roundsToClaim","gasPrice","useGasPrice","toastError","activeClaimIndex","setActiveClaimIndex","pendingTx","setPendingTx","ceil","pendingBatchClaims","setPendingBatchClaims","activeClaimData","dollarReward","rewardAsBalance","getBalanceAmount","dollarRewardAsBalance","claimTicketsCallData","ticketIds","brackets","shouldBatchRequest","handleProgressToNextClaim","getTicketBatches","requests","maxAsNumber","ticketIdsSlice","bracketsSlice","handleClaim","callWithEstimateGas","tx","wait","message","handleBatchClaim","ticketBatches","transactionsToFire","receipts","ticketBatch","claimNum","claimTotal","textAlign","lineHeight","unit","ModalContainer","StyledModalHeader","ModalHeader","BunnyDecoration","showConfetti","confetti","ClaimPrizesModal","delay","ClaimPrizesInner","TopBox","dropdown","ScrollBox","TicketSkeleton","PreviousRoundTicketsInner","lotteryInfo","setLotteryInfo","allUserTickets","setAllUserTickets","isFetched","claimData","userWinningTickets","setUserWinningTickets","userRound","onPresentClaimModal","addWinningTicketInfoToAllTickets","_allTickets","_allWinningTickets","winningTicketEquivalent","fetchUserTicketsForOneRound","fetchLottery","processedLotteryData","allTicketsWithWinningTicketInfo","ticketsSortedByWinners","sort","ticketA","ticketB","rewardBracket1","fetchData","textTransform","getFooter","CurrentRoundTicketsInner","ViewTicketsModal","roundStatus","isPreviousRound","RewardBracketDetail","cakeAmount","numberWinners","isHistoricRound","isBurn","numberMatch","getRewardText","RewardsInner","RewardBrackets","lotteryNodeData","cakeToBurn","rewardsLessTreasuryFee","setState","amountLessTreasuryFee","getCakeRewards","bracket","shareAsPercentage","bracketIndex","Grid","StyledCard","Card","NextDrawWrapper","NextDrawCard","currentLanguage","onPresentViewTicketsModal","isExpanded","setIsExpanded","endTimeMs","endDate","isLotteryOpen","userTicketCount","youHaveText","ticketsThisRoundText","PENDING","toLocaleString","maxWidth","expanded","StyledTimerFlex","showTooltip","textSubtle","StyledTimerText","Heading","minutes","hours","days","useNextEventCountdown","secondsRemaining","setSecondsRemaining","setLotteryIsTransitioning","currentSeconds","now","prevSecondsRemaining","fetchCurrentLottery","Countdown","getTimePeriods","Timer","HistoryTabMenu","setActiveIndex","activeIndex","onItemClick","StyledSmallDotIcon","SmallDotIcon","textDisabled","FinishedRoundRow","hasWon","endTimeAsDate","toLocaleTimeString","FinishedRoundTable","handleShowMoreClick","numUserRoundsRequested","handleHistoryRowClick","filteredForClaimable","sortedByRoundId","roundA","roundB","px","pb","overflowY","finishedRound","StyledCardBody","CardBody","StyledCardRibbon","CardRibbon","PreviousRoundCardBody","userDataForRound","userLotteryRound","useMatchBreakpoints","isLg","isXl","isXxl","isLargerScreen","currentLotteryIdAsInt","isLatestRound","totalTicketNumber","youHadText","text","PreviousRoundCardFooter","fetchedLotteryGraphData","setFetchedLotteryGraphData","lotteryGraphDataFromState","useGetLotteryGraphDataById","getGraphLotteries","id_in","fetchedGraphData","getGraphData","NaN","formatNumber","totalUsers","getTotalUsers","FooterExpanded","YourHistoryCard","shouldShowRoundDetail","setShouldShowRoundDetail","selectedLotteryNodeData","setSelectedLotteryNodeData","selectedLotteryId","setSelectedLotteryId","cursor","getBody","StyledInput","Input","StyledIconButton","IconButton","RoundSwitcher","selectedRoundId","mostRecentRound","handleInputChange","handleArrowButtonPress","selectedRoundIdAsInt","pattern","currentTarget","validity","valid","StyledCardHeader","CardHeader","AllHistoryCard","latestRoundId","setLatestRoundId","setSelectedRoundId","numRoundsFetched","mostRecentFinishedRoundId","fetchLotteryData","target","useGetUnclaimedRewards","unclaimedRewards","setUnclaimedRewards","NOT_FETCHED","setFetchStatus","fetchAllRewards","IN_PROGRESS","unclaimedRewardsResponse","TicketImage","img","TornTicketImage","CheckPrizesSection","hasCheckedForRewards","setHasCheckedForRewards","hasRewardsToClaim","setHasRewardsToClaim","isFetchingRewards","lotteryIsNotClaimable","isCheckNowDisabled","Divider","BulletList","ul","StepContainer","StyledStepCard","card","StepCardInner","StepCard","step","label","subtitle","BallsContainer","InlineLink","Link","ExampleBalls","isDesktop","ballSize","MatchExampleContainer","MatchExampleCard","isXs","exampleWidth","AllocationGrid","AllocationColorCircle","AllocationMatch","PoolAllocations","digits","GappedFlex","HowToPlay","steps","flex","href","useShowMoreUserRounds","MAX_USER_LOTTERIES_REQUEST_SIZE","setNumUserRoundsRequested","handleShowMoreUserRounds","fetchAdditionalUserLotteries","skip","LotteryPage","Lottery","fastRefresh","useRefresh","useFetchLottery","historyTabMenuIndex","setHistoryTabMenuIndex","endTimeAsInt","useShowMoreUserHistory","marginTop","margin","initialState","approvalState","confirmState","actions","handlePreApprove","then","hasApproveFailed","hasConfirmFailed"],"mappings":"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","file":"static/js/26.1e7e1a42.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport enum ButtonArrangement {\n  ROW = 'row',\n  SEQUENTIAL = 'sequential',\n}\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n  buttonArrangement?: ButtonArrangement\n  confirmLabel?: string\n  confirmId?: string\n}\n\nconst StyledApproveConfirmButtonRow = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n  buttonArrangement = ButtonArrangement.ROW,\n  confirmLabel,\n  confirmId,\n}) => {\n  const { t } = useTranslation()\n  const confirmButtonText = confirmLabel ?? t('Confirm')\n\n  const ApproveConfirmRow = () => {\n    return (\n      <StyledApproveConfirmButtonRow>\n        <Box>\n          <Button\n            disabled={isApproveDisabled}\n            onClick={onApprove}\n            endIcon={isApproving ? spinnerIcon : undefined}\n            isLoading={isApproving}\n          >\n            {isApproving ? t('Enabling') : t('Enable')}\n          </Button>\n        </Box>\n        <Flex justifyContent=\"center\">\n          <ChevronRight />\n          <ChevronBottom />\n        </Flex>\n        <Box>\n          <Button\n            id={confirmId}\n            onClick={onConfirm}\n            disabled={isConfirmDisabled}\n            isLoading={isConfirming}\n            endIcon={isConfirming ? spinnerIcon : undefined}\n          >\n            {isConfirming ? t('Confirming') : confirmButtonText}\n          </Button>\n        </Box>\n      </StyledApproveConfirmButtonRow>\n    )\n  }\n\n  const ApproveConfirmSequential = () => {\n    return (\n      <>\n        {isApproveDisabled ? (\n          <Box>\n            <Button\n              id={confirmId}\n              onClick={onConfirm}\n              disabled={isConfirmDisabled}\n              isLoading={isConfirming}\n              endIcon={isConfirming ? spinnerIcon : undefined}\n            >\n              {isConfirming ? t('Confirming') : confirmButtonText}\n            </Button>\n          </Box>\n        ) : (\n          <Box>\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\n              {isApproving ? t('Enabling') : t('Enable')}\n            </Button>\n          </Box>\n        )}\n      </>\n    )\n  }\n\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\n}\n\nexport default ApproveConfirmButtons\n","import React from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport { ClipFill } from '../types'\n\ninterface CurveProps {\n  clipFill?: ClipFill\n}\n\ninterface ContainerProps extends CurveProps {\n  clipPath: string\n}\n\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\n  width: 100%;\n  height: 20px;\n  clip-path: url(${clipPath});\n\n  background: ${() => {\n    if (theme.isDark) {\n      return clipFill?.dark || clipFill?.light || theme.colors.background\n    }\n    return clipFill?.light || theme.colors.background\n  }};\n\n  & svg {\n    display: block;\n  }\n`\n\nconst ConcaveContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\n`\n\nconst ConvexContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\n`\n\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\nimport { DividerFill, ClipFill } from './types'\n\ninterface CurvedDividerProps extends WrapperProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  dividerPosition?: 'top' | 'bottom'\n  concave?: boolean\n  clipFill?: ClipFill\n}\ninterface WrapperProps {\n  index: number\n  dividerFill?: DividerFill\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  background: ${({ theme, dividerFill }) => {\n    if (theme.isDark) {\n      return dividerFill?.dark || dividerFill?.light || 'none'\n    }\n    return dividerFill?.light || dividerFill?.dark || 'none'\n  }};\n  z-index: ${({ index }) => index};\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nconst ComponentWrapper = styled.div<WrapperProps>`\n  z-index: ${({ index }) => index + 1};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\n  index,\n  dividerPosition,\n  dividerComponent,\n  concave,\n  clipFill,\n  dividerFill,\n}) => {\n  const showConvexTop = dividerPosition === 'top' && !concave\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\n  const showConcaveTop = dividerPosition === 'top' && concave\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\n\n  const getConcaveDivider = () => {\n    return (\n      <>\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  const getConvexDivider = () => {\n    return (\n      <>\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  return (\n    <Wrapper index={index} dividerFill={dividerFill}>\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\n      {getConcaveDivider()}\n      {getConvexDivider()}\n    </Wrapper>\n  )\n}\n\nexport default CurvedDivider\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\nimport Container from 'components/Layout/Container'\nimport CurvedDivider from './CurvedDivider'\nimport { ClipFill, DividerFill } from './types'\n\ninterface PageSectionProps extends BackgroundColorProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  hasCurvedDivider?: boolean\n  dividerPosition?: 'top' | 'bottom'\n  concaveDivider?: boolean\n  containerProps?: BoxProps\n  innerProps?: BoxProps\n  clipFill?: ClipFill\n  dividerFill?: DividerFill\n}\n\ninterface BackgroundColorProps extends FlexProps {\n  index: number\n  background?: string\n  getPadding?: () => string\n}\n\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  z-index: ${({ index }) => index - 1};\n  background: ${({ background, theme }) => background || theme.colors.background};\n  padding: ${({ getPadding }) => getPadding()};\n`\n\nconst ChildrenWrapper = styled(Container)`\n  min-height: auto;\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 48px;\n    padding-bottom: 48px;\n  }\n`\n\nconst PageSection: React.FC<PageSectionProps> = ({\n  children,\n  background,\n  svgFill,\n  index = 1,\n  dividerComponent,\n  dividerPosition = 'bottom',\n  hasCurvedDivider = true,\n  concaveDivider = false,\n  clipFill,\n  dividerFill,\n  containerProps,\n  innerProps,\n  ...props\n}) => {\n  const getPadding = () => {\n    // No curved divider\n    if (!hasCurvedDivider) {\n      return '48px 0'\n    }\n    // Bottom curved divider\n    // Less bottom padding, as the divider is present there\n    if (dividerPosition === 'bottom') {\n      return '48px 0 14px'\n    }\n    // Top curved divider\n    // Less top padding, as the divider is present there\n    if (dividerPosition === 'top') {\n      return '14px 0 48px'\n    }\n    return '48px 0'\n  }\n\n  return (\n    <Box {...containerProps}>\n      {hasCurvedDivider && dividerPosition === 'top' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\n      </BackgroundColor>\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default PageSection\n","import React, { useEffect, useState, useMemo, useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport {\n  Modal,\n  Text,\n  Flex,\n  HelpIcon,\n  BalanceInput,\n  Ticket,\n  useTooltip,\n  Skeleton,\n  Button,\n  ArrowForwardIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport tokens from 'config/constants/tokens'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { BIG_ZERO, ethersToBigNumber } from 'utils/bigNumber'\nimport { useAppDispatch } from 'state'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useLottery } from 'state/lottery/hooks'\nimport { fetchUserTicketsAndLotteries } from 'state/lottery'\nimport useTheme from 'hooks/useTheme'\nimport useTokenBalance, { FetchStatus } from 'hooks/useTokenBalance'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useLotteryV2Contract } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport useToast from 'hooks/useToast'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport ApproveConfirmButtons, { ButtonArrangement } from 'components/ApproveConfirmButtons'\nimport NumTicketsToBuyButton from './NumTicketsToBuyButton'\nimport EditNumbersModal from './EditNumbersModal'\nimport { useTicketsReducer } from './useTicketsReducer'\n\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n`\n\nconst ShortcutButtonsWrapper = styled(Flex)<{ isVisible: boolean }>`\n  justify-content: space-between;\n  margin-top: 8px;\n  margin-bottom: 24px;\n  display: ${({ isVisible }) => (isVisible ? 'flex' : 'none')};\n`\n\ninterface BuyTicketsModalProps {\n  onDismiss?: () => void\n}\n\nenum BuyingStage {\n  BUY = 'Buy',\n  EDIT = 'Edit',\n}\n\nconst BuyTicketsModal: React.FC<BuyTicketsModalProps> = ({ onDismiss }) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const {\n    maxNumberTicketsPerBuyOrClaim,\n    currentLotteryId,\n    currentRound: {\n      priceTicketInCake,\n      discountDivisor,\n      userTickets: { tickets: userCurrentTickets },\n    },\n  } = useLottery()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const [ticketsToBuy, setTicketsToBuy] = useState('')\n  const [discountValue, setDiscountValue] = useState('')\n  const [totalCost, setTotalCost] = useState('')\n  const [ticketCostBeforeDiscount, setTicketCostBeforeDiscount] = useState('')\n  const [buyingStage, setBuyingStage] = useState<BuyingStage>(BuyingStage.BUY)\n  const [maxPossibleTicketPurchase, setMaxPossibleTicketPurchase] = useState(BIG_ZERO)\n  const [maxTicketPurchaseExceeded, setMaxTicketPurchaseExceeded] = useState(false)\n  const [userNotEnoughCake, setUserNotEnoughCake] = useState(false)\n  const lotteryContract = useLotteryV2Contract()\n  const cakeContract = useCake()\n  const { toastSuccess } = useToast()\n  const { balance: userCake, fetchStatus } = useTokenBalance(tokens.cake.address)\n  // balance from useTokenBalance causes rerenders in effects as a new BigNumber is instantiated on each render, hence memoising it using the stringified value below.\n  const stringifiedUserCake = userCake.toJSON()\n  const memoisedUserCake = useMemo(() => new BigNumber(stringifiedUserCake), [stringifiedUserCake])\n\n  const cakePriceBusd = usePriceCakeBusd()\n  const dispatch = useAppDispatch()\n  const hasFetchedBalance = fetchStatus === FetchStatus.SUCCESS\n  const userCakeDisplayBalance = getFullDisplayBalance(userCake, 18, 3)\n\n  const TooltipComponent = () => (\n    <>\n      <Text mb=\"16px\">\n        {t(\n          'Buying multiple tickets in a single transaction gives a discount. The discount increases in a linear way, up to the maximum of 100 tickets:',\n        )}\n      </Text>\n      <Text>{t('2 tickets: 0.05%')}</Text>\n      <Text>{t('50 tickets: 2.45%')}</Text>\n      <Text>{t('100 tickets: 4.95%')}</Text>\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  const limitNumberByMaxTicketsPerBuy = useCallback(\n    (number: BigNumber) => {\n      return number.gt(maxNumberTicketsPerBuyOrClaim) ? maxNumberTicketsPerBuyOrClaim : number\n    },\n    [maxNumberTicketsPerBuyOrClaim],\n  )\n\n  const getTicketCostAfterDiscount = useCallback(\n    (numberTickets: BigNumber) => {\n      const totalAfterDiscount = priceTicketInCake\n        .times(numberTickets)\n        .times(discountDivisor.plus(1).minus(numberTickets))\n        .div(discountDivisor)\n      return totalAfterDiscount\n    },\n    [discountDivisor, priceTicketInCake],\n  )\n\n  const getMaxTicketBuyWithDiscount = useCallback(\n    (numberTickets: BigNumber) => {\n      const costAfterDiscount = getTicketCostAfterDiscount(numberTickets)\n      const costBeforeDiscount = priceTicketInCake.times(numberTickets)\n      const discountAmount = costBeforeDiscount.minus(costAfterDiscount)\n      const ticketsBoughtWithDiscount = discountAmount.div(priceTicketInCake)\n      const overallTicketBuy = numberTickets.plus(ticketsBoughtWithDiscount)\n      return { overallTicketBuy, ticketsBoughtWithDiscount }\n    },\n    [getTicketCostAfterDiscount, priceTicketInCake],\n  )\n\n  const validateInput = useCallback(\n    (inputNumber: BigNumber) => {\n      const limitedNumberTickets = limitNumberByMaxTicketsPerBuy(inputNumber)\n      const cakeCostAfterDiscount = getTicketCostAfterDiscount(limitedNumberTickets)\n\n      if (cakeCostAfterDiscount.gt(userCake)) {\n        setUserNotEnoughCake(true)\n      } else if (limitedNumberTickets.eq(maxNumberTicketsPerBuyOrClaim)) {\n        setMaxTicketPurchaseExceeded(true)\n      } else {\n        setUserNotEnoughCake(false)\n        setMaxTicketPurchaseExceeded(false)\n      }\n    },\n    [limitNumberByMaxTicketsPerBuy, getTicketCostAfterDiscount, maxNumberTicketsPerBuyOrClaim, userCake],\n  )\n\n  useEffect(() => {\n    const getMaxPossiblePurchase = () => {\n      const maxBalancePurchase = memoisedUserCake.div(priceTicketInCake)\n      const limitedMaxPurchase = limitNumberByMaxTicketsPerBuy(maxBalancePurchase)\n      let maxPurchase\n\n      // If the users' max MByte balance purchase is less than the contract limit - factor the discount logic into the max number of tickets they can purchase\n      if (limitedMaxPurchase.lt(maxNumberTicketsPerBuyOrClaim)) {\n        // Get max tickets purchasable with the users' balance, as well as using the discount to buy tickets\n        const { overallTicketBuy: maxPlusDiscountTickets } = getMaxTicketBuyWithDiscount(limitedMaxPurchase)\n\n        // Knowing how many tickets they can buy when counting the discount - plug that total in, and see how much that total will get discounted\n        const { ticketsBoughtWithDiscount: secondTicketDiscountBuy } =\n          getMaxTicketBuyWithDiscount(maxPlusDiscountTickets)\n\n        // Add the additional tickets that can be bought with the discount, to the original max purchase\n        maxPurchase = limitedMaxPurchase.plus(secondTicketDiscountBuy)\n      } else {\n        maxPurchase = limitedMaxPurchase\n      }\n\n      if (hasFetchedBalance && maxPurchase.lt(1)) {\n        setUserNotEnoughCake(true)\n      } else {\n        setUserNotEnoughCake(false)\n      }\n\n      setMaxPossibleTicketPurchase(maxPurchase)\n    }\n    getMaxPossiblePurchase()\n  }, [\n    maxNumberTicketsPerBuyOrClaim,\n    priceTicketInCake,\n    memoisedUserCake,\n    limitNumberByMaxTicketsPerBuy,\n    getTicketCostAfterDiscount,\n    getMaxTicketBuyWithDiscount,\n    hasFetchedBalance,\n  ])\n\n  useEffect(() => {\n    const numberOfTicketsToBuy = new BigNumber(ticketsToBuy)\n    const costAfterDiscount = getTicketCostAfterDiscount(numberOfTicketsToBuy)\n    const costBeforeDiscount = priceTicketInCake.times(numberOfTicketsToBuy)\n    const discountBeingApplied = costBeforeDiscount.minus(costAfterDiscount)\n    setTicketCostBeforeDiscount(costBeforeDiscount.gt(0) ? getFullDisplayBalance(costBeforeDiscount) : '0')\n    setTotalCost(costAfterDiscount.gt(0) ? getFullDisplayBalance(costAfterDiscount) : '0')\n    setDiscountValue(discountBeingApplied.gt(0) ? getFullDisplayBalance(discountBeingApplied, 18, 5) : '0')\n  }, [ticketsToBuy, priceTicketInCake, discountDivisor, getTicketCostAfterDiscount])\n\n  const getNumTicketsByPercentage = (percentage: number): number => {\n    const percentageOfMaxTickets = maxPossibleTicketPurchase.gt(0)\n      ? maxPossibleTicketPurchase.div(new BigNumber(100)).times(new BigNumber(percentage))\n      : BIG_ZERO\n    return Math.floor(percentageOfMaxTickets.toNumber())\n  }\n\n  const tenPercentOfBalance = getNumTicketsByPercentage(10)\n  const twentyFivePercentOfBalance = getNumTicketsByPercentage(25)\n  const fiftyPercentOfBalance = getNumTicketsByPercentage(50)\n  const oneHundredPercentOfBalance = getNumTicketsByPercentage(100)\n\n  const handleInputChange = (input: string) => {\n    // Force input to integer\n    const inputAsInt = parseInt(input, 10)\n    const inputAsBN = new BigNumber(inputAsInt)\n    const limitedNumberTickets = limitNumberByMaxTicketsPerBuy(inputAsBN)\n    validateInput(inputAsBN)\n    setTicketsToBuy(inputAsInt ? limitedNumberTickets.toString() : '')\n  }\n\n  const handleNumberButtonClick = (number: number) => {\n    setTicketsToBuy(number.toFixed())\n    setUserNotEnoughCake(false)\n    setMaxTicketPurchaseExceeded(false)\n  }\n\n  const [updateTicket, randomize, tickets, allComplete, getTicketsForPurchase] = useTicketsReducer(\n    parseInt(ticketsToBuy, 10),\n    userCurrentTickets,\n  )\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        try {\n          const response = await cakeContract.allowance(account, lotteryContract.address)\n          const currentAllowance = ethersToBigNumber(response)\n          return currentAllowance.gt(0)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return callWithGasPrice(cakeContract, 'approve', [lotteryContract.address, ethers.constants.MaxUint256])\n      },\n      onApproveSuccess: async ({ receipt }) => {\n        toastSuccess(\n          t('Contract enabled - you can now purchase tickets'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash} />,\n        )\n      },\n      onConfirm: () => {\n        const ticketsForPurchase = getTicketsForPurchase()\n        return callWithGasPrice(lotteryContract, 'buyTickets', [currentLotteryId, ticketsForPurchase])\n      },\n      onSuccess: async ({ receipt }) => {\n        onDismiss()\n        dispatch(fetchUserTicketsAndLotteries({ account, currentLotteryId }))\n        toastSuccess(t('Lottery tickets purchased!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      },\n    })\n\n  const getErrorMessage = () => {\n    if (userNotEnoughCake) return t('Insufficient MByte balance')\n    return t('The maximum number of tickets you can buy in one transaction is %maxTickets%', {\n      maxTickets: maxNumberTicketsPerBuyOrClaim.toString(),\n    })\n  }\n\n  const percentageDiscount = () => {\n    const percentageAsBn = new BigNumber(discountValue).div(new BigNumber(ticketCostBeforeDiscount)).times(100)\n    if (percentageAsBn.isNaN() || percentageAsBn.eq(0)) {\n      return 0\n    }\n    return percentageAsBn.toNumber().toFixed(2)\n  }\n\n  const disableBuying =\n    !isApproved ||\n    isConfirmed ||\n    userNotEnoughCake ||\n    !ticketsToBuy ||\n    new BigNumber(ticketsToBuy).lte(0) ||\n    getTicketsForPurchase().length !== parseInt(ticketsToBuy, 10)\n\n  if (buyingStage === BuyingStage.EDIT) {\n    return (\n      <EditNumbersModal\n        totalCost={totalCost}\n        updateTicket={updateTicket}\n        randomize={randomize}\n        tickets={tickets}\n        allComplete={allComplete}\n        onConfirm={handleConfirm}\n        isConfirming={isConfirming}\n        onDismiss={() => setBuyingStage(BuyingStage.BUY)}\n      />\n    )\n  }\n\n  return (\n    <StyledModal title={t('Buy Tickets')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text color=\"textSubtle\">{t('Buy')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Text mr=\"4px\" bold>\n            {t('Tickets')}\n          </Text>\n          <Ticket />\n        </Flex>\n      </Flex>\n      <BalanceInput\n        isWarning={account && (userNotEnoughCake || maxTicketPurchaseExceeded)}\n        placeholder=\"0\"\n        value={ticketsToBuy}\n        onUserInput={handleInputChange}\n        currencyValue={\n          cakePriceBusd.gt(0) &&\n          `~${ticketsToBuy ? getFullDisplayBalance(priceTicketInCake.times(new BigNumber(ticketsToBuy))) : '0.00'} MByte`\n        }\n      />\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\" mt=\"4px\" mb=\"12px\">\n        <Flex justifyContent=\"flex-end\" flexDirection=\"column\">\n          {account && (userNotEnoughCake || maxTicketPurchaseExceeded) && (\n            <Text fontSize=\"12px\" color=\"failure\">\n              {getErrorMessage()}\n            </Text>\n          )}\n          {account && (\n            <Flex justifyContent=\"flex-end\">\n              <Text fontSize=\"12px\" color=\"textSubtle\" mr=\"4px\">\n                MByte {t('Balance')}:\n              </Text>\n              {hasFetchedBalance ? (\n                <Text fontSize=\"12px\" color=\"textSubtle\">\n                  {userCakeDisplayBalance}\n                </Text>\n              ) : (\n                <Skeleton width={50} height={12} />\n              )}\n            </Flex>\n          )}\n        </Flex>\n      </Flex>\n\n      {account && !hasFetchedBalance ? (\n        <Skeleton width=\"100%\" height={20} mt=\"8px\" mb=\"24px\" />\n      ) : (\n        <ShortcutButtonsWrapper isVisible={account && hasFetchedBalance && oneHundredPercentOfBalance >= 1}>\n          {tenPercentOfBalance >= 1 && (\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(tenPercentOfBalance)}>\n              {hasFetchedBalance ? tenPercentOfBalance : ``}\n            </NumTicketsToBuyButton>\n          )}\n          {twentyFivePercentOfBalance >= 1 && (\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(twentyFivePercentOfBalance)}>\n              {hasFetchedBalance ? twentyFivePercentOfBalance : ``}\n            </NumTicketsToBuyButton>\n          )}\n          {fiftyPercentOfBalance >= 1 && (\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(fiftyPercentOfBalance)}>\n              {hasFetchedBalance ? fiftyPercentOfBalance : ``}\n            </NumTicketsToBuyButton>\n          )}\n          {oneHundredPercentOfBalance >= 1 && (\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(oneHundredPercentOfBalance)}>\n              MAX\n            </NumTicketsToBuyButton>\n          )}\n        </ShortcutButtonsWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Flex mb=\"8px\" justifyContent=\"space-between\">\n          <Text color=\"textSubtle\" fontSize=\"14px\">\n            {t('Cost')} (MByte)\n          </Text>\n          <Text color=\"textSubtle\" fontSize=\"14px\">\n            {priceTicketInCake && getFullDisplayBalance(priceTicketInCake.times(ticketsToBuy || 0))} MByte\n          </Text>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent=\"space-between\">\n          <Flex>\n            <Text display=\"inline\" bold fontSize=\"14px\" mr=\"4px\">\n              {discountValue && totalCost ? percentageDiscount() : 0}%\n            </Text>\n            <Text display=\"inline\" color=\"textSubtle\" fontSize=\"14px\">\n              {t('Bulk discount')}\n            </Text>\n            <Flex alignItems=\"center\" justifyContent=\"center\" ref={targetRef}>\n              <HelpIcon ml=\"4px\" width=\"14px\" height=\"14px\" color=\"textSubtle\" />\n            </Flex>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            ~{discountValue} MByte\n          </Text>\n        </Flex>\n        <Flex borderTop={`1px solid ${theme.colors.cardBorder}`} pt=\"8px\" mb=\"24px\" justifyContent=\"space-between\">\n          <Text color=\"textSubtle\" fontSize=\"16px\">\n            {t('You pay')}\n          </Text>\n          <Text fontSize=\"16px\" bold>\n            ~{totalCost} MByte\n          </Text>\n        </Flex>\n\n        {account ? (\n          <>\n            <ApproveConfirmButtons\n              isApproveDisabled={isApproved}\n              isApproving={isApproving}\n              isConfirmDisabled={disableBuying}\n              isConfirming={isConfirming}\n              onApprove={handleApprove}\n              onConfirm={handleConfirm}\n              buttonArrangement={ButtonArrangement.SEQUENTIAL}\n              confirmLabel={t('Buy Instantly')}\n              confirmId=\"lotteryBuyInstant\"\n            />\n            {isApproved && (\n              <Button\n                variant=\"secondary\"\n                mt=\"8px\"\n                endIcon={\n                  <ArrowForwardIcon\n                    ml=\"2px\"\n                    color={disableBuying || isConfirming ? 'disabled' : 'primary'}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                }\n                disabled={disableBuying || isConfirming}\n                onClick={() => {\n                  setBuyingStage(BuyingStage.EDIT)\n                }}\n              >\n                {t('View/Edit Numbers')}\n              </Button>\n            )}\n          </>\n        ) : (\n          <ConnectWalletButton />\n        )}\n\n        <Text mt=\"24px\" fontSize=\"12px\" color=\"textSubtle\">\n          {t(\n            '\"Buy Instantly\" chooses random numbers, with no duplicates among your tickets. Prices are set before each round starts, equal to $5 at that time. Purchases are final.',\n          )}\n        </Text>\n      </Flex>\n    </StyledModal>\n  )\n}\n\nexport default BuyTicketsModal\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useRefresh from 'hooks/useRefresh'\nimport { State } from '../types'\nimport { fetchCurrentLotteryId, fetchCurrentLottery, fetchUserTicketsAndLotteries, fetchPublicLotteries } from '.'\nimport { useProcessLotteryResponse } from './helpers'\n\n// Lottery\nexport const useGetCurrentLotteryId = () => {\n  return useSelector((state: State) => state.lottery.currentLotteryId)\n}\n\nexport const useGetUserLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.userLotteryData)\n}\n\nexport const useGetUserLotteryGraphRoundById = (lotteryId: string) => {\n  const userLotteriesData = useGetUserLotteriesGraphData()\n  return userLotteriesData.rounds.find((userRound) => userRound.lotteryId === lotteryId)\n}\n\nexport const useGetLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.lotteriesData)\n}\n\nexport const useGetLotteryGraphDataById = (lotteryId: string) => {\n  const lotteriesData = useGetLotteriesGraphData()\n  return lotteriesData?.find((lottery) => lottery.id === lotteryId)\n}\n\nexport const useFetchLottery = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n\n  useEffect(() => {\n    // get current lottery ID & max ticket buy\n    dispatch(fetchCurrentLotteryId())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (currentLotteryId) {\n      // Get historical lottery data from nodes +  last 100 subgraph entries\n      dispatch(fetchPublicLotteries({ currentLotteryId }))\n      // get public data for current lottery\n      dispatch(fetchCurrentLottery({ currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, fastRefresh])\n\n  useEffect(() => {\n    // get user tickets for current lottery, and user lottery subgraph data\n    if (account && currentLotteryId) {\n      dispatch(fetchUserTicketsAndLotteries({ account, currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, account])\n}\n\nexport const useLottery = () => {\n  const currentRound = useSelector((state: State) => state.lottery.currentRound)\n  const processedCurrentRound = useProcessLotteryResponse(currentRound)\n\n  const isTransitioning = useSelector((state: State) => state.lottery.isTransitioning)\n\n  const currentLotteryId = useGetCurrentLotteryId()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const lotteriesData = useGetLotteriesGraphData()\n\n  const maxNumberTicketsPerBuyOrClaimAsString = useSelector(\n    (state: State) => state.lottery.maxNumberTicketsPerBuyOrClaim,\n  )\n  const maxNumberTicketsPerBuyOrClaim = useMemo(() => {\n    return new BigNumber(maxNumberTicketsPerBuyOrClaimAsString)\n  }, [maxNumberTicketsPerBuyOrClaimAsString])\n\n  return {\n    currentLotteryId,\n    maxNumberTicketsPerBuyOrClaim,\n    isTransitioning,\n    userLotteryData,\n    lotteriesData,\n    currentRound: processedCurrentRound,\n  }\n}\n","import { LotteryStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { useEffect, useState } from 'react'\n\ninterface LotteryEvent {\n  nextEventTime: number\n  postCountdownText?: string\n  preCountdownText?: string\n}\n\nconst useGetNextLotteryEvent = (endTime: number, status: LotteryStatus): LotteryEvent => {\n  const { t } = useTranslation()\n  const vrfRequestTime = 180 // 3 mins\n  const secondsBetweenRounds = 300 // 5 mins\n  const transactionResolvingBuffer = 30 // Delay countdown by 30s to ensure contract transactions have been calculated and broadcast\n  const [nextEvent, setNextEvent] = useState({ nextEventTime: null, preCountdownText: null, postCountdownText: null })\n\n  useEffect(() => {\n    // Current lottery is active\n    if (status === LotteryStatus.OPEN) {\n      setNextEvent({\n        nextEventTime: endTime + transactionResolvingBuffer,\n        preCountdownText: null,\n        postCountdownText: t('until the draw'),\n      })\n    }\n    // Current lottery has finished but not yet claimable\n    if (status === LotteryStatus.CLOSE) {\n      setNextEvent({\n        nextEventTime: endTime + transactionResolvingBuffer + vrfRequestTime,\n        preCountdownText: t('Winners announced in'),\n        postCountdownText: null,\n      })\n    }\n    // Current lottery claimable. Next lottery has not yet started\n    if (status === LotteryStatus.CLAIMABLE) {\n      setNextEvent({\n        nextEventTime: endTime + transactionResolvingBuffer + secondsBetweenRounds,\n        preCountdownText: t('Tickets on sale in'),\n        postCountdownText: null,\n      })\n    }\n  }, [status, endTime, t])\n\n  return nextEvent\n}\n\nexport default useGetNextLotteryEvent\n","import { useWeb3React } from '@web3-react/core'\nimport { LotteryStatus } from 'config/constants/types'\nimport usePreviousValue from 'hooks/usePreviousValue'\nimport { useEffect } from 'react'\nimport { useAppDispatch } from 'state'\nimport { useLottery } from 'state/lottery/hooks'\nimport { fetchPublicLotteries, fetchCurrentLotteryId, fetchUserLotteries } from 'state/lottery'\n\nconst useStatusTransitions = () => {\n  const {\n    currentLotteryId,\n    isTransitioning,\n    currentRound: { status },\n  } = useLottery()\n\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const previousStatus = usePreviousValue(status)\n\n  useEffect(() => {\n    // Only run if there is a status state change\n    if (previousStatus !== status && currentLotteryId) {\n      // Current lottery transitions from CLOSE > CLAIMABLE\n      if (previousStatus === LotteryStatus.CLOSE && status === LotteryStatus.CLAIMABLE) {\n        dispatch(fetchPublicLotteries({ currentLotteryId }))\n        if (account) {\n          dispatch(fetchUserLotteries({ account, currentLotteryId }))\n        }\n      }\n      // Previous lottery to new lottery. From CLAIMABLE (previous round) > OPEN (new round)\n      if (previousStatus === LotteryStatus.CLAIMABLE && status === LotteryStatus.OPEN) {\n        dispatch(fetchPublicLotteries({ currentLotteryId }))\n        if (account) {\n          dispatch(fetchUserLotteries({ account, currentLotteryId }))\n        }\n      }\n    }\n  }, [currentLotteryId, status, previousStatus, account, dispatch])\n\n  useEffect(() => {\n    // Current lottery is CLAIMABLE and the lottery is transitioning to a NEW round - fetch current lottery ID every 10s.\n    // The isTransitioning condition will no longer be true when fetchCurrentLotteryId returns the next lottery ID\n    if (previousStatus === LotteryStatus.CLAIMABLE && status === LotteryStatus.CLAIMABLE && isTransitioning) {\n      dispatch(fetchCurrentLotteryId())\n      dispatch(fetchPublicLotteries({ currentLotteryId }))\n      const interval = setInterval(async () => {\n        dispatch(fetchCurrentLotteryId())\n        dispatch(fetchPublicLotteries({ currentLotteryId }))\n      }, 10000)\n      return () => clearInterval(interval)\n    }\n    return () => null\n  }, [status, previousStatus, isTransitioning, currentLotteryId, dispatch])\n}\n\nexport default useStatusTransitions\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst TicketPurchaseCard: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 296 121\" {...props}>\n      <g filter=\"url(#filter0_dd_ticket_purchase_card)\">\n        <path d=\"M4 16C4 7.16344 11.1634 0 20 0H66V113H20C11.1634 113 4 105.837 4 97V16Z\" fill=\"#FFB237\" />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M69.4931 2.94568C68.9511 1.38001 67.6569 0 66 0V10H90V0C88.3431 0 87.0489 1.38001 86.5069 2.94568C85.2868 6.4696 81.9389 9 78 9C74.0611 9 70.7132 6.4696 69.4931 2.94568Z\"\n          fill=\"#FFB237\"\n        />\n        <rect x=\"66\" y=\"10\" width=\"10\" height=\"93\" fill=\"#FFB237\" />\n        <path d=\"M78 103V10\" stroke=\"#FFB237\" strokeWidth=\"4\" strokeDasharray=\"4 4\" />\n        <rect x=\"80\" y=\"10\" width=\"10\" height=\"93\" fill=\"#FFB237\" />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M69.4931 110.054C68.9511 111.62 67.6569 113 66 113V103H90V113C88.3431 113 87.0489 111.62 86.5069 110.054C85.2868 106.53 81.9389 104 78 104C74.0611 104 70.7132 106.53 69.4931 110.054Z\"\n          fill=\"#FFB237\"\n        />\n        <path d=\"M90 0H276C284.837 0 292 7.16344 292 16V97C292 105.837 284.837 113 276 113H90V0Z\" fill=\"#FFB237\" />\n      </g>\n      <defs>\n        <filter\n          id=\"filter0_dd_ticket_purchase_card\"\n          x=\"0\"\n          y=\"0\"\n          width=\"296\"\n          height=\"121\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n          <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\n          <feOffset dx=\"2\" dy=\"2\" />\n          <feColorMatrix type=\"matrix\" values=\"0 0 0 0 1 0 0 0 0 0.686275 0 0 0 0 0 0 0 0 1 0\" />\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_ticket_purchase_card\" />\n          <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\n          <feOffset dy=\"4\" />\n          <feGaussianBlur stdDeviation=\"2\" />\n          <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\" />\n          <feBlend\n            mode=\"normal\"\n            in2=\"effect1_dropShadow_ticket_purchase_card\"\n            result=\"effect2_dropShadow_ticket_purchase_card\"\n          />\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect2_dropShadow_ticket_purchase_card\" result=\"shape\" />\n        </filter>\n      </defs>\n    </Svg>\n  )\n}\n\nexport default TicketPurchaseCard\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst WhiteBunny: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 27 26\" {...props}>\n      <mask\n        id=\"white-bunny-path-1-outside-1\"\n        maskUnits=\"userSpaceOnUse\"\n        x=\"0.5\"\n        y=\"-0.0263672\"\n        width=\"26\"\n        height=\"26\"\n        fill=\"black\"\n      >\n        <rect fill=\"white\" x=\"0.5\" y=\"-0.0263672\" width=\"26\" height=\"26\" />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M6.909 3.56941C7.03125 1.79519 8.76206 0.588231 10.4692 1.08677C11.9461 1.51808 12.7937 3.06497 12.3624 4.54184L11.1683 8.63073C11.9225 8.53996 12.7022 8.49237 13.5 8.49237C14.6339 8.49237 15.731 8.58848 16.7708 8.76808L18.74 2.99564C19.2367 1.53947 20.8199 0.761724 22.2761 1.25849C23.9593 1.83269 24.6807 3.81559 23.7601 5.3372L20.9057 10.0551C23.7031 11.3976 25.5 13.4834 25.5 15.8257L25.5 15.8267V17.6934C25.5 21.7435 20.1274 25.0267 13.5 25.0267C6.87258 25.0267 1.5 21.7435 1.5 17.6934V15.8267V15.8257C1.5 13.379 3.46066 11.2122 6.47417 9.88004L6.909 3.56941Z\"\n        />\n      </mask>\n      <path\n        d=\"M10.4692 1.08677L10.7142 0.247673V0.247673L10.4692 1.08677ZM6.909 3.56941L7.78108 3.6295V3.62949L6.909 3.56941ZM12.3624 4.54184L13.2015 4.78689V4.78689L12.3624 4.54184ZM11.1683 8.63073L10.3292 8.38568L9.95792 9.65684L11.2727 9.49862L11.1683 8.63073ZM16.7708 8.76808L16.622 9.62947L17.3572 9.75647L17.5981 9.05032L16.7708 8.76808ZM18.74 2.99564L19.5673 3.27788V3.27788L18.74 2.99564ZM22.2761 1.25849L22.5583 0.431153V0.431153L22.2761 1.25849ZM23.7601 5.3372L23.0122 4.88469V4.88469L23.7601 5.3372ZM20.9057 10.0551L20.1578 9.60256L19.6593 10.4265L20.5275 10.8432L20.9057 10.0551ZM25.5 15.8257H24.6258L24.6259 15.8274L25.5 15.8257ZM25.5 15.8267H26.3742L26.3742 15.8251L25.5 15.8267ZM6.47417 9.88004L6.82762 10.6796L7.31 10.4663L7.34626 9.94013L6.47417 9.88004ZM10.7142 0.247673C8.47144 -0.407305 6.19752 1.17838 6.03691 3.50932L7.78108 3.62949C7.86497 2.412 9.05268 1.58377 10.2241 1.92587L10.7142 0.247673ZM13.2015 4.78689C13.7681 2.84659 12.6545 0.814314 10.7142 0.247673L10.2241 1.92587C11.2376 2.22184 11.8192 3.28334 11.5233 4.2968L13.2015 4.78689ZM12.0074 8.87578L13.2015 4.78689L11.5233 4.2968L10.3292 8.38568L12.0074 8.87578ZM13.5 7.61822C12.6675 7.61822 11.853 7.66787 11.0638 7.76284L11.2727 9.49862C11.9921 9.41204 12.7369 9.36652 13.5 9.36652V7.61822ZM16.9195 7.90668C15.8299 7.71847 14.683 7.61822 13.5 7.61822V9.36652C14.5847 9.36652 15.632 9.45848 16.622 9.62947L16.9195 7.90668ZM17.5981 9.05032L19.5673 3.27788L17.9127 2.7134L15.9434 8.48584L17.5981 9.05032ZM19.5673 3.27788C19.9082 2.27864 20.9946 1.74493 21.9938 2.08582L22.5583 0.431153C20.6452 -0.221485 18.5653 0.800311 17.9127 2.7134L19.5673 3.27788ZM21.9938 2.08582C23.1489 2.47985 23.644 3.84054 23.0122 4.88469L24.5081 5.7897C25.7175 3.79064 24.7697 1.18554 22.5583 0.431153L21.9938 2.08582ZM23.0122 4.88469L20.1578 9.60256L21.6536 10.5076L24.5081 5.7897L23.0122 4.88469ZM26.3741 15.8257C26.3741 12.9967 24.2198 10.676 21.284 9.26698L20.5275 10.8432C23.1864 12.1193 24.6259 13.9701 24.6259 15.8257H26.3741ZM26.3742 15.8251L26.3741 15.8241L24.6259 15.8274L24.6259 15.8284L26.3742 15.8251ZM26.3742 17.6934V15.8267H24.6259V17.6934H26.3742ZM13.5 25.9009C16.9478 25.9009 20.1111 25.0486 22.4411 23.6247C24.7561 22.21 26.3742 20.1382 26.3742 17.6934H24.6259C24.6259 19.2987 23.5576 20.8935 21.5295 22.1329C19.5163 23.3632 16.6797 24.1526 13.5 24.1526V25.9009ZM0.62585 17.6934C0.62585 20.1382 2.24387 22.21 4.55889 23.6247C6.88892 25.0486 10.0523 25.9009 13.5 25.9009V24.1526C10.3203 24.1526 7.48367 23.3632 5.47054 22.1329C3.44242 20.8935 2.37415 19.2987 2.37415 17.6934H0.62585ZM0.62585 15.8267V17.6934H2.37415V15.8267H0.62585ZM0.62585 15.8257V15.8267H2.37415V15.8257H0.62585ZM6.12073 9.08053C2.97211 10.4725 0.62585 12.8707 0.62585 15.8257H2.37415C2.37415 13.8874 3.94921 11.952 6.82762 10.6796L6.12073 9.08053ZM6.03691 3.50932L5.60209 9.81995L7.34626 9.94013L7.78108 3.6295L6.03691 3.50932Z\"\n        fill=\"#08060B\"\n        mask=\"url(#path-1-outside-1)\"\n      />\n      <path\n        d=\"M25.5 17.6933C25.5 21.7434 20.1274 25.0267 13.5 25.0267C6.87258 25.0267 1.5 21.7434 1.5 17.6933V15.8267H25.5V17.6933Z\"\n        fill=\"#F4EEFF\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M6.909 3.56941C7.03125 1.79519 8.76206 0.588231 10.4692 1.08677C11.9461 1.51808 12.7937 3.06497 12.3624 4.54184L11.1683 8.63073C11.9225 8.53996 12.7022 8.49237 13.5 8.49237C14.6339 8.49237 15.731 8.58848 16.7708 8.76808L18.74 2.99564C19.2367 1.53947 20.8199 0.761724 22.2761 1.25849C23.9593 1.83269 24.6807 3.81559 23.7601 5.3372L20.9057 10.0551C23.7031 11.3976 25.5 13.4834 25.5 15.8257C25.5 19.8758 20.1274 23.159 13.5 23.159C6.87258 23.159 1.5 19.8758 1.5 15.8257C1.5 13.379 3.46066 11.2122 6.47417 9.88004L6.909 3.56941Z\"\n        fill=\"white\"\n      />\n      <ellipse cx=\"10.4334\" cy=\"15.292\" rx=\"1.33333\" ry=\"2\" fill=\"#08060B\" />\n      <ellipse cx=\"19.6331\" cy=\"15.292\" rx=\"1.33333\" ry=\"2\" fill=\"#08060B\" />\n    </Svg>\n  )\n}\n\nexport default WhiteBunny\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Svg, SvgProps, Text, Flex } from '@pancakeswap/uikit'\n\nexport const PinkBall: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 32 32\" {...props}>\n      <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#D750B2\" />\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24.3428 3.13232C28.9191 8.87177 28.5505 17.2573 23.2373 22.5706C17.528 28.2799 8.27148 28.2799 2.56223 22.5706C2.2825 22.2909 2.01648 22.0026 1.76416 21.7067C4.02814 27.3486 9.54881 31.3326 16 31.3326C24.4683 31.3326 31.3332 24.4677 31.3332 15.9994C31.3332 10.6078 28.5504 5.8661 24.3428 3.13232Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M25.7713 4.18262C30.6308 10.2119 30.2607 19.061 24.6609 24.6608C19.0615 30.2602 10.2132 30.6307 4.18396 25.7722C6.99643 29.1689 11.2455 31.3329 16 31.3329C24.4683 31.3329 31.3332 24.468 31.3332 15.9997C31.3332 11.2446 29.1687 6.99508 25.7713 4.18262Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.48969 24.8677C0.151051 18.7651 0.974979 11.0636 6.01931 6.01927C11.0639 0.974682 18.7659 0.15093 24.8687 3.49016C22.365 1.71201 19.3046 0.666603 16 0.666603C7.53165 0.666603 0.666733 7.53152 0.666733 15.9998C0.666733 19.3041 1.7119 22.3642 3.48969 24.8677Z\"\n          fill=\"white\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2.10075 9.5143C3.77271 5.93677 6.78528 3.11129 10.4921 1.68422C10.546 1.73235 10.5987 1.78219 10.6502 1.83374C12.4838 3.66728 10.9119 5.7442 8.66145 7.99465C6.411 10.2451 4.33417 11.8169 2.50064 9.98335C2.35338 9.83609 2.22013 9.6793 2.10075 9.5143Z\"\n          fill=\"white\"\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport const LilacBall: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 32 32\" {...props}>\n      <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#A881FC\" />\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24.3428 3.13232C28.9191 8.87177 28.5505 17.2573 23.2373 22.5706C17.528 28.2799 8.27148 28.2799 2.56223 22.5706C2.2825 22.2909 2.01648 22.0026 1.76416 21.7067C4.02814 27.3486 9.54881 31.3326 16 31.3326C24.4683 31.3326 31.3332 24.4677 31.3332 15.9994C31.3332 10.6078 28.5504 5.8661 24.3428 3.13232Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M25.7713 4.18262C30.6308 10.2119 30.2607 19.061 24.6609 24.6608C19.0615 30.2602 10.2132 30.6307 4.18396 25.7722C6.99643 29.1689 11.2455 31.3329 16 31.3329C24.4683 31.3329 31.3332 24.468 31.3332 15.9997C31.3332 11.2446 29.1687 6.99508 25.7713 4.18262Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.48969 24.8677C0.151051 18.7651 0.974979 11.0636 6.01931 6.01927C11.0639 0.974682 18.7659 0.15093 24.8687 3.49016C22.365 1.71201 19.3046 0.666603 16 0.666603C7.53165 0.666603 0.666733 7.53152 0.666733 15.9998C0.666733 19.3041 1.7119 22.3642 3.48969 24.8677Z\"\n          fill=\"white\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2.10075 9.5143C3.77271 5.93677 6.78528 3.11129 10.4921 1.68422C10.546 1.73235 10.5987 1.78219 10.6502 1.83374C12.4838 3.66728 10.9119 5.7442 8.66145 7.99465C6.411 10.2451 4.33417 11.8169 2.50064 9.98335C2.35338 9.83609 2.22013 9.6793 2.10075 9.5143Z\"\n          fill=\"white\"\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport const TealBall: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 32 32\" {...props}>\n      <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#1FC7D4\" />\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24.3428 3.13232C28.9191 8.87177 28.5505 17.2573 23.2373 22.5706C17.528 28.2799 8.27148 28.2799 2.56223 22.5706C2.2825 22.2909 2.01648 22.0026 1.76416 21.7067C4.02814 27.3486 9.54881 31.3326 16 31.3326C24.4683 31.3326 31.3332 24.4677 31.3332 15.9994C31.3332 10.6078 28.5504 5.8661 24.3428 3.13232Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M25.7713 4.18262C30.6308 10.2119 30.2607 19.061 24.6609 24.6608C19.0615 30.2602 10.2132 30.6307 4.18396 25.7722C6.99643 29.1689 11.2455 31.3329 16 31.3329C24.4683 31.3329 31.3332 24.468 31.3332 15.9997C31.3332 11.2446 29.1687 6.99508 25.7713 4.18262Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.48969 24.8677C0.151051 18.7651 0.974979 11.0636 6.01931 6.01927C11.0639 0.974682 18.7659 0.15093 24.8687 3.49016C22.365 1.71201 19.3046 0.666603 16 0.666603C7.53165 0.666603 0.666733 7.53152 0.666733 15.9998C0.666733 19.3041 1.7119 22.3642 3.48969 24.8677Z\"\n          fill=\"white\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2.10075 9.5143C3.77271 5.93677 6.78528 3.11129 10.4921 1.68422C10.546 1.73235 10.5987 1.78219 10.6502 1.83374C12.4838 3.66728 10.9119 5.7442 8.66145 7.99465C6.411 10.2451 4.33417 11.8169 2.50064 9.98335C2.35338 9.83609 2.22013 9.6793 2.10075 9.5143Z\"\n          fill=\"white\"\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport const AquaBall: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 32 32\" {...props}>\n      <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#31D0AA\" />\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24.3428 3.13232C28.9191 8.87177 28.5505 17.2573 23.2373 22.5706C17.528 28.2799 8.27148 28.2799 2.56223 22.5706C2.2825 22.2909 2.01648 22.0026 1.76416 21.7067C4.02814 27.3486 9.54881 31.3326 16 31.3326C24.4683 31.3326 31.3332 24.4677 31.3332 15.9994C31.3332 10.6078 28.5504 5.8661 24.3428 3.13232Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M25.7713 4.18262C30.6308 10.2119 30.2607 19.061 24.6609 24.6608C19.0615 30.2602 10.2132 30.6307 4.18396 25.7722C6.99643 29.1689 11.2455 31.3329 16 31.3329C24.4683 31.3329 31.3332 24.468 31.3332 15.9997C31.3332 11.2446 29.1687 6.99508 25.7713 4.18262Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.48969 24.8677C0.151051 18.7651 0.974979 11.0636 6.01931 6.01927C11.0639 0.974682 18.7659 0.15093 24.8687 3.49016C22.365 1.71201 19.3046 0.666603 16 0.666603C7.53165 0.666603 0.666733 7.53152 0.666733 15.9998C0.666733 19.3041 1.7119 22.3642 3.48969 24.8677Z\"\n          fill=\"white\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2.10075 9.5143C3.77271 5.93677 6.78528 3.11129 10.4921 1.68422C10.546 1.73235 10.5987 1.78219 10.6502 1.83374C12.4838 3.66728 10.9119 5.7442 8.66145 7.99465C6.411 10.2451 4.33417 11.8169 2.50064 9.98335C2.35338 9.83609 2.22013 9.6793 2.10075 9.5143Z\"\n          fill=\"white\"\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport const GreenBall: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 32 32\" {...props}>\n      <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#93D45A\" />\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24.3428 3.13232C28.9191 8.87177 28.5505 17.2573 23.2373 22.5706C17.528 28.2799 8.27148 28.2799 2.56223 22.5706C2.2825 22.2909 2.01648 22.0026 1.76416 21.7067C4.02814 27.3486 9.54881 31.3326 16 31.3326C24.4683 31.3326 31.3332 24.4677 31.3332 15.9994C31.3332 10.6078 28.5504 5.8661 24.3428 3.13232Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M25.7713 4.18262C30.6308 10.2119 30.2607 19.061 24.6609 24.6608C19.0615 30.2602 10.2132 30.6307 4.18396 25.7722C6.99643 29.1689 11.2455 31.3329 16 31.3329C24.4683 31.3329 31.3332 24.468 31.3332 15.9997C31.3332 11.2446 29.1687 6.99508 25.7713 4.18262Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.48969 24.8677C0.151051 18.7651 0.974979 11.0636 6.01931 6.01927C11.0639 0.974682 18.7659 0.15093 24.8687 3.49016C22.365 1.71201 19.3046 0.666603 16 0.666603C7.53165 0.666603 0.666733 7.53152 0.666733 15.9998C0.666733 19.3041 1.7119 22.3642 3.48969 24.8677Z\"\n          fill=\"white\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2.10075 9.5143C3.77271 5.93677 6.78528 3.11129 10.4921 1.68422C10.546 1.73235 10.5987 1.78219 10.6502 1.83374C12.4838 3.66728 10.9119 5.7442 8.66145 7.99465C6.411 10.2451 4.33417 11.8169 2.50064 9.98335C2.35338 9.83609 2.22013 9.6793 2.10075 9.5143Z\"\n          fill=\"white\"\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport const YellowBall: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 32 32\" {...props}>\n      <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#FFC43C\" />\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24.3428 3.13245C28.9191 8.87189 28.5505 17.2575 23.2373 22.5707C17.528 28.28 8.27148 28.28 2.56223 22.5707C2.2825 22.291 2.01648 22.0028 1.76416 21.7068C4.02814 27.3487 9.54881 31.3327 16 31.3327C24.4683 31.3327 31.3332 24.4678 31.3332 15.9995C31.3332 10.6079 28.5504 5.86622 24.3428 3.13245Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'multiply' }} opacity=\"0.1\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M25.7714 4.18262C30.6309 10.2119 30.2608 19.061 24.661 24.6608C19.0616 30.2602 10.2134 30.6307 4.18408 25.7722C6.99655 29.1689 11.2456 31.3329 16.0001 31.3329C24.4685 31.3329 31.3334 24.468 31.3334 15.9997C31.3334 11.2446 29.1689 6.99508 25.7714 4.18262Z\"\n          fill=\"black\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.48969 24.8677C0.151051 18.7651 0.974979 11.0636 6.01931 6.01927C11.0639 0.974682 18.7659 0.15093 24.8687 3.49016C22.365 1.71201 19.3046 0.666603 16 0.666603C7.53165 0.666603 0.666733 7.53152 0.666733 15.9998C0.666733 19.3041 1.7119 22.3642 3.48969 24.8677Z\"\n          fill=\"white\"\n        />\n      </g>\n      <g style={{ mixBlendMode: 'soft-light' }}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2.10087 9.51443C3.77283 5.93689 6.78541 3.11142 10.4922 1.68435C10.5461 1.73247 10.5988 1.78231 10.6504 1.83387C12.4839 3.6674 10.912 5.74432 8.66157 7.99477C6.41112 10.2452 4.33429 11.817 2.50076 9.98347C2.3535 9.83621 2.22025 9.67943 2.10087 9.51443Z\"\n          fill=\"white\"\n        />\n      </g>\n    </Svg>\n  )\n}\n\nexport const BallTextWrapper = styled.div`\n  top: 45%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  position: absolute;\n`\n\nexport const BallText = styled(Text)<{ rotationTransform?: number }>`\n  color: #000000;\n  text-shadow: -0.75px -0.75px 0 white, 0.75px -0.75px 0 white, -0.75px 0.75px 0 white, 0.75px 0.75px 0 white;\n  transform: rotate(${({ rotationTransform }) => rotationTransform || 0}deg);\n`\n\nexport type BallColor = 'pink' | 'lilac' | 'teal' | 'aqua' | 'green' | 'yellow'\n\ninterface BallWithNumberProps {\n  color: BallColor\n  number: string\n  size?: string\n  fontSize?: string\n  rotationTransform?: number\n}\n\nconst ballsMap = {\n  pink: PinkBall,\n  lilac: LilacBall,\n  teal: TealBall,\n  aqua: AquaBall,\n  green: GreenBall,\n  yellow: YellowBall,\n}\n\nexport const BallWithNumber: React.FC<BallWithNumberProps> = ({ color, number, size, fontSize, rotationTransform }) => {\n  const BallComponent = ballsMap[color]\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" position=\"relative\" mx=\"2px\">\n      <BallComponent width={size ?? '32px'} height={size ?? '32px'} />\n      <BallTextWrapper>\n        <BallText rotationTransform={rotationTransform} bold fontSize={fontSize ?? '16px'}>\n          {number}\n        </BallText>\n      </BallTextWrapper>\n    </Flex>\n  )\n}\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nexport const MatchExampleA: React.FC<{ isDark: boolean } & SvgProps> = ({ isDark, ...rest }) => {\n  return (\n    <Svg viewBox=\"0 0 258 46\" {...rest}>\n      <svg width=\"258\" height=\"46\" viewBox=\"0 0 258 46\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M0.995361 28.9362C0.995361 20.4114 7.94723 13.5007 16.5228 13.5007H113.569C122.145 13.5007 129.097 20.4114 129.097 28.9362C129.097 37.4609 122.145 44.3716 113.569 44.3716H16.5228C7.94723 44.3716 0.995361 37.4609 0.995361 28.9362Z\"\n          fill={isDark ? 'none' : 'white'}\n        />\n        <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"13\" width=\"130\" height=\"32\">\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M113.569 15.7348H16.523C9.18867 15.7348 3.243 21.6453 3.243 28.9362C3.243 36.2271 9.18867 42.1375 16.523 42.1375H113.569C120.904 42.1375 126.849 36.2271 126.849 28.9362C126.849 21.6453 120.904 15.7348 113.569 15.7348ZM16.523 13.5007C7.94747 13.5007 0.995605 20.4114 0.995605 28.9362C0.995605 37.4609 7.94748 44.3716 16.523 44.3716H113.569C122.145 44.3716 129.097 37.4609 129.097 28.9362C129.097 20.4114 122.145 13.5007 113.569 13.5007H16.523Z\"\n            fill=\"#08060B\"\n          />\n        </mask>\n        <g mask=\"url(#mask0)\">\n          <path d=\"M1.26147 13.3832H256.983V44.4423H1.26147V13.3832Z\" fill=\"url(#paint0_linear)\" />\n        </g>\n        <path\n          d=\"M21.7327 37.4606C21.1098 37.4606 20.5647 37.4193 20.0975 37.3367C19.6422 37.2679 19.205 37.1441 18.7857 36.9652V34.261C19.5644 34.6188 20.4689 34.7977 21.4991 34.7977C22.4336 34.7977 23.1344 34.5776 23.6016 34.1372C24.0688 33.6968 24.3024 33.1395 24.3024 32.4652V31.9491C23.955 32.2106 23.5357 32.417 23.0445 32.5684C22.5654 32.7198 22.1161 32.7954 21.6968 32.7954C20.2951 32.7954 19.2709 32.4101 18.6239 31.6395C17.977 30.8688 17.6536 29.7748 17.6536 28.3574C17.6536 27.4629 17.8093 26.6716 18.1208 25.9835C18.4442 25.2817 18.9474 24.7381 19.6303 24.3528C20.3251 23.9537 21.2176 23.7542 22.3078 23.7542C23.9131 23.7542 25.0991 24.1945 25.8658 25.0753C26.6326 25.956 27.0159 27.284 27.0159 29.0592V31.7633C27.0159 32.8642 26.8003 33.8482 26.369 34.7152C25.9497 35.5684 25.3447 36.2427 24.554 36.7381C23.7753 37.2198 22.8349 37.4606 21.7327 37.4606ZM22.2539 30.339C22.6013 30.339 22.9547 30.2702 23.3141 30.1326C23.6735 29.9812 24.0029 29.7954 24.3024 29.5753V28.4812C24.3024 26.9399 23.6316 26.1693 22.2898 26.1693C21.607 26.1693 21.0918 26.3551 20.7444 26.7266C20.409 27.0844 20.2412 27.5867 20.2412 28.2335C20.2412 28.9078 20.385 29.4308 20.6725 29.8023C20.972 30.1601 21.4991 30.339 22.2539 30.339Z\"\n          fill={isDark ? '#F4EEFF' : '#280D5F'}\n        />\n        <path\n          d=\"M64.3428 37.2542V27.0156L62.438 27.3665V24.5798L67.236 23.7542V37.2542H64.3428Z\"\n          fill={isDark ? '#F4EEFF' : '#280D5F'}\n        />\n        <path\n          d=\"M107.105 37.4607C106.77 37.4607 106.375 37.4332 105.919 37.3781C105.464 37.3231 105.015 37.2474 104.572 37.1511C104.14 37.041 103.781 36.9171 103.493 36.7795V34.0135C103.985 34.2749 104.512 34.4607 105.075 34.5708C105.638 34.6809 106.165 34.7359 106.656 34.7359C107.411 34.7359 107.974 34.619 108.345 34.385C108.729 34.1511 108.92 33.7245 108.92 33.1052C108.92 32.6235 108.759 32.2726 108.435 32.0524C108.124 31.8323 107.668 31.7222 107.069 31.7222H105.183L105.38 29.3896H106.944C107.555 29.3896 107.998 29.2795 108.273 29.0593C108.549 28.8254 108.687 28.4538 108.687 27.9446C108.687 27.463 108.519 27.0983 108.184 26.8506C107.86 26.6029 107.333 26.479 106.602 26.479C106.087 26.479 105.566 26.5479 105.039 26.6855C104.512 26.8093 104.056 26.9745 103.673 27.1809V24.4561C104.092 24.2634 104.614 24.0983 105.236 23.9607C105.871 23.8231 106.506 23.7543 107.141 23.7543C108.603 23.7543 109.717 24.1121 110.484 24.8277C111.262 25.5295 111.652 26.4309 111.652 27.5318C111.652 28.1648 111.532 28.7566 111.292 29.307C111.065 29.8575 110.711 30.2703 110.232 30.5456C110.783 30.7657 111.191 31.1235 111.454 31.619C111.73 32.1144 111.867 32.713 111.867 33.4148C111.867 34.3368 111.664 35.1006 111.256 35.7061C110.849 36.2979 110.286 36.7382 109.567 37.0272C108.86 37.3162 108.04 37.4607 107.105 37.4607Z\"\n          fill={isDark ? '#F4EEFF' : '#280D5F'}\n        />\n        <path\n          d=\"M149.856 37.4606C149.269 37.4606 148.76 37.4193 148.329 37.3367C147.898 37.2542 147.49 37.1441 147.107 37.0065V35.0661C147.478 35.2312 147.874 35.3551 148.293 35.4376C148.724 35.5202 149.204 35.5615 149.731 35.5615C150.809 35.5615 151.606 35.2656 152.121 34.6739C152.636 34.0821 152.893 33.2977 152.893 32.3207V31.495C152.474 31.839 151.995 32.1005 151.456 32.2794C150.917 32.4583 150.42 32.5477 149.964 32.5477C148.623 32.5477 147.622 32.1693 146.963 31.4124C146.316 30.6555 145.993 29.5821 145.993 28.1922C145.993 26.8849 146.346 25.8184 147.053 24.9927C147.76 24.167 148.862 23.7542 150.36 23.7542C151.809 23.7542 152.899 24.1739 153.63 25.0133C154.373 25.839 154.744 27.1326 154.744 28.8941V31.8872C154.744 32.9881 154.547 33.9583 154.151 34.7977C153.756 35.6372 153.193 36.2909 152.462 36.7587C151.731 37.2266 150.863 37.4606 149.856 37.4606ZM150.252 30.8344C150.743 30.8344 151.216 30.7381 151.671 30.5454C152.127 30.3528 152.534 30.112 152.893 29.823V28.378C152.893 26.4376 152.043 25.4675 150.342 25.4675C149.479 25.4675 148.832 25.7083 148.401 26.1899C147.97 26.6716 147.754 27.3184 147.754 28.1303C147.754 28.9698 147.928 29.6303 148.275 30.112C148.635 30.5936 149.293 30.8344 150.252 30.8344Z\"\n          fill={isDark ? '#666171' : '#BDC2C4'}\n        />\n        <path\n          d=\"M193.056 37.4606C191.606 37.4606 190.51 37.0477 189.768 36.222C189.037 35.3964 188.671 34.0959 188.671 32.3207V29.3275C188.671 28.2266 188.869 27.2564 189.264 26.417C189.66 25.5775 190.223 24.9239 190.954 24.456C191.684 23.9881 192.553 23.7542 193.559 23.7542C194.146 23.7542 194.655 23.7954 195.087 23.878C195.53 23.9606 195.937 24.0775 196.309 24.2289V26.1486C195.937 25.9973 195.536 25.8803 195.105 25.7977C194.685 25.7152 194.212 25.6739 193.685 25.6739C192.607 25.6739 191.81 25.9697 191.295 26.5615C190.78 27.1395 190.522 27.917 190.522 28.8941V29.7198C190.942 29.362 191.421 29.1005 191.96 28.9353C192.511 28.7564 193.008 28.667 193.451 28.667C194.805 28.667 195.805 29.0454 196.452 29.8023C197.099 30.5592 197.423 31.6326 197.423 33.0225C197.423 34.3436 197.069 35.417 196.363 36.2427C195.656 37.0546 194.554 37.4606 193.056 37.4606ZM193.074 35.7679C193.937 35.7679 194.583 35.5271 195.015 35.0454C195.446 34.5638 195.662 33.917 195.662 33.1051C195.662 32.2519 195.482 31.5913 195.123 31.1234C194.775 30.6418 194.122 30.4009 193.164 30.4009C192.685 30.4009 192.211 30.4973 191.744 30.6899C191.289 30.8688 190.882 31.1097 190.522 31.4124V32.8367C190.522 34.7909 191.373 35.7679 193.074 35.7679Z\"\n          fill={isDark ? '#666171' : '#BDC2C4'}\n        />\n        <path\n          d=\"M231.929 37.2542V36.1395C232.241 35.3 232.672 34.5431 233.223 33.8688C233.786 33.1945 234.385 32.5409 235.02 31.9078C235.499 31.4262 235.895 31.0202 236.206 30.6899C236.53 30.3459 236.781 30.0363 236.961 29.761C237.14 29.4858 237.266 29.2037 237.338 28.9147C237.41 28.612 237.446 28.261 237.446 27.862C237.446 27.1464 237.266 26.6028 236.907 26.2312C236.547 25.8597 235.948 25.6739 235.11 25.6739C234.655 25.6739 234.187 25.7289 233.708 25.839C233.241 25.9491 232.792 26.1005 232.36 26.2931V24.3115C232.78 24.1464 233.277 24.0156 233.852 23.9193C234.427 23.8092 234.972 23.7542 235.487 23.7542C236.781 23.7542 237.757 24.1188 238.416 24.8482C239.075 25.5775 239.405 26.5753 239.405 27.8413C239.405 28.4743 239.309 29.0386 239.117 29.534C238.926 30.0156 238.662 30.4766 238.327 30.917C237.991 31.3436 237.602 31.784 237.158 32.2381C236.607 32.7886 236.086 33.3253 235.595 33.8482C235.116 34.3574 234.727 34.9147 234.427 35.5202H239.531V37.2542H231.929Z\"\n          fill={isDark ? '#666171' : '#BDC2C4'}\n        />\n        <path\n          d=\"M153.515 3.68788C153.328 3.50152 153.025 3.50152 152.838 3.68788L150.487 6.0197L148.136 3.6831C147.949 3.49675 147.646 3.49675 147.459 3.6831C147.271 3.86946 147.271 4.17049 147.459 4.35684L149.809 6.69344L147.459 9.03005C147.271 9.2164 147.271 9.51743 147.459 9.70379C147.646 9.89014 147.949 9.89014 148.136 9.70379L150.487 7.36719L152.838 9.70379C153.025 9.89014 153.328 9.89014 153.515 9.70379C153.703 9.51743 153.703 9.2164 153.515 9.03005L151.165 6.69344L153.515 4.35684C153.698 4.17527 153.698 3.86946 153.515 3.68788Z\"\n          fill=\"#ED4B9E\"\n        />\n        <g clipPath=\"url(#clipExampleA)\">\n          <path\n            d=\"M107.226 1.91516C104.572 1.91516 102.419 4.05585 102.419 6.69348C102.419 9.33112 104.572 11.4718 107.226 11.4718C109.879 11.4718 112.033 9.33112 112.033 6.69348C112.033 4.05585 109.879 1.91516 107.226 1.91516ZM107.226 10.5161C105.106 10.5161 103.38 8.80073 103.38 6.69348C103.38 4.58624 105.106 2.87083 107.226 2.87083C109.346 2.87083 111.071 4.58624 111.071 6.69348C111.071 8.80073 109.346 10.5161 107.226 10.5161ZM109.091 4.92073L106.264 7.73038L105.361 6.83206C105.173 6.6457 104.87 6.6457 104.683 6.83206C104.495 7.01841 104.495 7.31945 104.683 7.5058L105.928 8.74339C106.115 8.92974 106.418 8.92974 106.606 8.74339L109.773 5.59447C109.961 5.40812 109.961 5.10708 109.773 4.92073C109.586 4.73437 109.278 4.73437 109.091 4.92073Z\"\n            fill=\"#31D0AA\"\n          />\n        </g>\n        <path\n          d=\"M66.8485 1.91516C64.1952 1.91516 62.0417 4.05585 62.0417 6.69348C62.0417 9.33112 64.1952 11.4718 66.8485 11.4718C69.5019 11.4718 71.6553 9.33112 71.6553 6.69348C71.6553 4.05585 69.5019 1.91516 66.8485 1.91516ZM66.8485 10.5161C64.7287 10.5161 63.0031 8.80073 63.0031 6.69348C63.0031 4.58624 64.7287 2.87083 66.8485 2.87083C68.9683 2.87083 70.694 4.58624 70.694 6.69348C70.694 8.80073 68.9683 10.5161 66.8485 10.5161ZM68.7136 4.92073L65.8872 7.73038L64.9835 6.83206C64.796 6.6457 64.4932 6.6457 64.3058 6.83206C64.1183 7.01841 64.1183 7.31945 64.3058 7.5058L65.5507 8.74339C65.7382 8.92974 66.041 8.92974 66.2285 8.74339L69.3962 5.59447C69.5836 5.40812 69.5836 5.10708 69.3962 4.92073C69.2087 4.73437 68.9011 4.73437 68.7136 4.92073Z\"\n          fill=\"#31D0AA\"\n        />\n        <path\n          d=\"M193.267 1.91516C190.614 1.91516 188.461 4.05585 188.461 6.69348C188.461 9.33112 190.614 11.4718 193.267 11.4718C195.921 11.4718 198.074 9.33112 198.074 6.69348C198.074 4.05585 195.921 1.91516 193.267 1.91516ZM193.267 10.5161C191.148 10.5161 189.422 8.80073 189.422 6.69348C189.422 4.58624 191.148 2.87083 193.267 2.87083C195.387 2.87083 197.113 4.58624 197.113 6.69348C197.113 8.80073 195.387 10.5161 193.267 10.5161ZM195.133 4.92073L192.306 7.73038L191.402 6.83206C191.215 6.6457 190.912 6.6457 190.725 6.83206C190.537 7.01841 190.537 7.31945 190.725 7.5058L191.97 8.74339C192.157 8.92974 192.46 8.92974 192.647 8.74339L195.815 5.59447C196.003 5.40812 196.003 5.10708 195.815 4.92073C195.628 4.73437 195.32 4.73437 195.133 4.92073Z\"\n          fill=\"#31D0AA\"\n        />\n        <path\n          d=\"M236.048 1.91516C233.395 1.91516 231.241 4.05585 231.241 6.69348C231.241 9.33112 233.395 11.4718 236.048 11.4718C238.701 11.4718 240.855 9.33112 240.855 6.69348C240.855 4.05585 238.701 1.91516 236.048 1.91516ZM236.048 10.5161C233.928 10.5161 232.203 8.80073 232.203 6.69348C232.203 4.58624 233.928 2.87083 236.048 2.87083C238.168 2.87083 239.893 4.58624 239.893 6.69348C239.893 8.80073 238.168 10.5161 236.048 10.5161ZM237.913 4.92073L235.087 7.73038L234.183 6.83206C233.996 6.6457 233.693 6.6457 233.505 6.83206C233.318 7.01841 233.318 7.31945 233.505 7.5058L234.75 8.74339C234.938 8.92974 235.24 8.92974 235.428 8.74339L238.596 5.59447C238.783 5.40812 238.783 5.10708 238.596 4.92073C238.408 4.73437 238.101 4.73437 237.913 4.92073Z\"\n          fill=\"#31D0AA\"\n        />\n        <path\n          d=\"M23.1066 1.91516C20.4533 1.91516 18.2998 4.05585 18.2998 6.69348C18.2998 9.33112 20.4533 11.4718 23.1066 11.4718C25.76 11.4718 27.9134 9.33112 27.9134 6.69348C27.9134 4.05585 25.76 1.91516 23.1066 1.91516ZM23.1066 10.5161C20.9868 10.5161 19.2612 8.80073 19.2612 6.69348C19.2612 4.58624 20.9868 2.87083 23.1066 2.87083C25.2264 2.87083 26.952 4.58624 26.952 6.69348C26.952 8.80073 25.2264 10.5161 23.1066 10.5161ZM24.9716 4.92073L22.1452 7.73038L21.2416 6.83206C21.0541 6.6457 20.7513 6.6457 20.5638 6.83206C20.3763 7.01841 20.3763 7.31945 20.5638 7.5058L21.8088 8.74339C21.9962 8.92974 22.2991 8.92974 22.4865 8.74339L25.6542 5.59447C25.8417 5.40812 25.8417 5.10708 25.6542 4.92073C25.4667 4.73437 25.1591 4.73437 24.9716 4.92073Z\"\n          fill=\"#31D0AA\"\n        />\n        <defs>\n          <linearGradient\n            id=\"paint0_linear\"\n            x1=\"256.984\"\n            y1=\"41.1807\"\n            x2=\"1.2617\"\n            y2=\"41.18\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop stopColor=\"#ED4B9E\" />\n            <stop offset=\"0.190071\" stopColor=\"#7B61FF\" />\n            <stop offset=\"0.434873\" stopColor=\"#1FC7D4\" />\n            <stop offset=\"0.638006\" stopColor=\"#31D0AA\" />\n            <stop offset=\"0.841139\" stopColor=\"#FFD800\" />\n            <stop offset=\"1\" stopColor=\"#FEAF2E\" />\n          </linearGradient>\n          <clipPath id=\"clipExampleA\">\n            <rect width=\"11.5363\" height=\"11.468\" fill=\"white\" transform=\"translate(101.458 0.959473)\" />\n          </clipPath>\n        </defs>\n      </svg>\n    </Svg>\n  )\n}\nexport const MatchExampleB: React.FC<{ isDark: boolean } & SvgProps> = ({ isDark, ...rest }) => {\n  return (\n    <Svg viewBox=\"0 0 258 45\" {...rest}>\n      <svg width=\"258\" height=\"45\" viewBox=\"0 0 258 45\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect\n          x=\"1.64043\"\n          y=\"13.5646\"\n          width=\"254.912\"\n          height=\"29.5807\"\n          rx=\"14.7904\"\n          fill={isDark ? 'none' : '#FAF9FA'}\n        />\n        <path\n          d=\"M22.3406 36.2051C21.1187 36.2051 20.1363 35.9367 19.3936 35.4C18.6508 34.8496 18.1057 34.0652 17.7583 33.0468C17.4228 32.0147 17.2551 30.783 17.2551 29.3518C17.2551 27.8656 17.4169 26.5996 17.7403 25.5537C18.0758 24.5078 18.6149 23.7096 19.3576 23.1592C20.1004 22.6087 21.0947 22.3335 22.3406 22.3335C23.5865 22.3335 24.5749 22.6087 25.3057 23.1592C26.0484 23.7096 26.5815 24.5078 26.905 25.5537C27.2404 26.5996 27.4082 27.8656 27.4082 29.3518C27.4082 30.783 27.2404 32.0147 26.905 33.0468C26.5696 34.0652 26.0305 34.8496 25.2877 35.4C24.5449 35.9367 23.5626 36.2051 22.3406 36.2051ZM22.3406 34.2853C23.4907 34.2853 24.2934 33.8518 24.7486 32.9849C25.2038 32.1041 25.4315 30.8931 25.4315 29.3518C25.4315 27.7142 25.2098 26.4551 24.7666 25.5743C24.3233 24.6936 23.5147 24.2532 22.3406 24.2532C21.1666 24.2532 20.3519 24.6936 19.8967 25.5743C19.4535 26.4551 19.2318 27.7142 19.2318 29.3518C19.2318 30.8931 19.4594 32.1041 19.9147 32.9849C20.3699 33.8518 21.1786 34.2853 22.3406 34.2853Z\"\n          fill={isDark ? '#666171' : '#BDC2C4'}\n        />\n        <path\n          d=\"M64.7859 35.8335V24.5216L62.917 24.8931V23.0147L66.7266 22.3335V35.8335H64.7859Z\"\n          fill={isDark ? '#666171' : '#BDC2C4'}\n        />\n        <path\n          d=\"M107.094 36.0399C106.747 36.0399 106.363 36.0124 105.944 35.9574C105.525 35.9161 105.123 35.8473 104.74 35.7509C104.369 35.6546 104.057 35.5514 103.806 35.4413V33.4803C104.285 33.7005 104.776 33.8656 105.279 33.9757C105.794 34.072 106.309 34.1202 106.825 34.1202C107.759 34.1202 108.454 33.9619 108.909 33.6454C109.364 33.3289 109.592 32.7716 109.592 31.9734C109.592 31.2578 109.382 30.7418 108.963 30.4252C108.556 30.1087 107.969 29.9505 107.202 29.9505H105.459L105.621 28.2785H107.076C108.598 28.2785 109.358 27.5904 109.358 26.2142C109.358 25.5399 109.155 25.0445 108.747 24.728C108.352 24.4115 107.711 24.2532 106.825 24.2532C106.333 24.2532 105.836 24.3083 105.333 24.4184C104.842 24.5285 104.405 24.6798 104.021 24.8725V22.9528C104.381 22.7876 104.848 22.6431 105.423 22.5193C105.998 22.3954 106.567 22.3335 107.13 22.3335C108.544 22.3335 109.592 22.6775 110.275 23.3656C110.97 24.0537 111.317 24.9344 111.317 26.0078C111.317 26.6684 111.173 27.2876 110.886 27.8656C110.61 28.4436 110.173 28.8564 109.574 29.1041C110.269 29.3106 110.772 29.6821 111.083 30.2188C111.407 30.7555 111.569 31.3885 111.569 32.1179C111.569 33.4528 111.161 34.4436 110.347 35.0904C109.532 35.7234 108.448 36.0399 107.094 36.0399Z\"\n          fill={isDark ? '#666171' : '#BDC2C4'}\n        />\n        <path\n          d=\"M150.378 36.0399C148.928 36.0399 147.832 35.6271 147.089 34.8014C146.358 33.9757 145.993 32.6752 145.993 30.9V27.9069C145.993 26.806 146.191 25.8358 146.586 24.9963C146.981 24.1569 147.544 23.5032 148.275 23.0353C149.006 22.5674 149.874 22.3335 150.881 22.3335C151.468 22.3335 151.977 22.3748 152.408 22.4574C152.851 22.5399 153.259 22.6569 153.63 22.8083V24.728C153.259 24.5766 152.857 24.4596 152.426 24.3771C152.007 24.2945 151.534 24.2532 151.007 24.2532C149.928 24.2532 149.132 24.5491 148.617 25.1408C148.101 25.7188 147.844 26.4963 147.844 27.4734V28.2991C148.263 27.9413 148.742 27.6798 149.281 27.5147C149.833 27.3358 150.33 27.2463 150.773 27.2463C152.127 27.2463 153.127 27.6248 153.774 28.3817C154.421 29.1385 154.744 30.2119 154.744 31.6018C154.744 32.923 154.391 33.9963 153.684 34.822C152.977 35.634 151.875 36.0399 150.378 36.0399ZM150.396 34.3473C151.258 34.3473 151.905 34.1064 152.336 33.6248C152.768 33.1431 152.983 32.4963 152.983 31.6844C152.983 30.8312 152.804 30.1707 152.444 29.7028C152.097 29.2211 151.444 28.9803 150.485 28.9803C150.006 28.9803 149.533 29.0766 149.066 29.2693C148.611 29.4482 148.203 29.689 147.844 29.9918V31.4161C147.844 33.3702 148.694 34.3473 150.396 34.3473Z\"\n          fill={isDark ? '#666171' : '#BDC2C4'}\n        />\n        <path\n          d=\"M193.056 36.0399C191.606 36.0399 190.51 35.6271 189.768 34.8014C189.037 33.9757 188.671 32.6752 188.671 30.9V27.9069C188.671 26.806 188.869 25.8358 189.264 24.9963C189.66 24.1569 190.223 23.5032 190.954 23.0353C191.684 22.5674 192.553 22.3335 193.559 22.3335C194.146 22.3335 194.655 22.3748 195.087 22.4574C195.53 22.5399 195.937 22.6569 196.309 22.8083V24.728C195.937 24.5766 195.536 24.4596 195.105 24.3771C194.685 24.2945 194.212 24.2532 193.685 24.2532C192.607 24.2532 191.81 24.5491 191.295 25.1408C190.78 25.7188 190.522 26.4963 190.522 27.4734V28.2991C190.942 27.9413 191.421 27.6798 191.96 27.5147C192.511 27.3358 193.008 27.2463 193.451 27.2463C194.805 27.2463 195.805 27.6248 196.452 28.3817C197.099 29.1385 197.423 30.2119 197.423 31.6018C197.423 32.923 197.069 33.9963 196.363 34.822C195.656 35.634 194.554 36.0399 193.056 36.0399ZM193.074 34.3473C193.937 34.3473 194.583 34.1064 195.015 33.6248C195.446 33.1431 195.662 32.4963 195.662 31.6844C195.662 30.8312 195.482 30.1707 195.123 29.7028C194.775 29.2211 194.122 28.9803 193.164 28.9803C192.685 28.9803 192.211 29.0766 191.744 29.2693C191.289 29.4482 190.882 29.689 190.522 29.9918V31.4161C190.522 33.3702 191.373 34.3473 193.074 34.3473Z\"\n          fill={isDark ? '#666171' : '#BDC2C4'}\n        />\n        <path\n          d=\"M231.929 35.8335V34.7188C232.241 33.8794 232.672 33.1225 233.223 32.4482C233.786 31.7739 234.385 31.1202 235.02 30.4872C235.499 30.0055 235.895 29.5996 236.206 29.2693C236.53 28.9252 236.781 28.6156 236.961 28.3404C237.14 28.0652 237.266 27.783 237.338 27.494C237.41 27.1913 237.446 26.8404 237.446 26.4413C237.446 25.7257 237.266 25.1821 236.907 24.8106C236.547 24.439 235.948 24.2532 235.11 24.2532C234.655 24.2532 234.187 24.3083 233.708 24.4184C233.241 24.5285 232.792 24.6798 232.36 24.8725V22.8908C232.78 22.7257 233.277 22.595 233.852 22.4986C234.427 22.3885 234.972 22.3335 235.487 22.3335C236.781 22.3335 237.757 22.6982 238.416 23.4275C239.075 24.1569 239.405 25.1546 239.405 26.4207C239.405 27.0537 239.309 27.6179 239.117 28.1133C238.925 28.595 238.662 29.056 238.326 29.4963C237.991 29.9229 237.602 30.3633 237.158 30.8174C236.607 31.3679 236.086 31.9046 235.595 32.4275C235.116 32.9367 234.727 33.4941 234.427 34.0996H239.53V35.8335H231.929Z\"\n          fill={isDark ? '#666171' : '#BDC2C4'}\n        />\n        <rect\n          x=\"1.64043\"\n          y=\"13.5646\"\n          width=\"254.912\"\n          height=\"29.5807\"\n          rx=\"14.7904\"\n          stroke=\"#E7E3EB\"\n          strokeWidth=\"1.29014\"\n        />\n        <path\n          d=\"M109.389 1.33398C106.735 1.33398 104.582 3.47467 104.582 6.11231C104.582 8.74994 106.735 10.8906 109.389 10.8906C112.042 10.8906 114.196 8.74994 114.196 6.11231C114.196 3.47467 112.042 1.33398 109.389 1.33398ZM109.389 9.93497C107.269 9.93497 105.543 8.21955 105.543 6.11231C105.543 4.00507 107.269 2.28965 109.389 2.28965C111.509 2.28965 113.234 4.00507 113.234 6.11231C113.234 8.21955 111.509 9.93497 109.389 9.93497ZM111.254 4.33955L108.427 7.1492L107.524 6.25088C107.336 6.06452 107.034 6.06452 106.846 6.25088C106.659 6.43723 106.659 6.73827 106.846 6.92462L108.091 8.16221C108.278 8.34856 108.581 8.34856 108.769 8.16221L111.936 5.01329C112.124 4.82694 112.124 4.5259 111.936 4.33955C111.749 4.1532 111.441 4.1532 111.254 4.33955Z\"\n          fill=\"#31D0AA\"\n        />\n        <path\n          d=\"M152.65 1.33398C149.997 1.33398 147.843 3.47467 147.843 6.11231C147.843 8.74994 149.997 10.8906 152.65 10.8906C155.303 10.8906 157.457 8.74994 157.457 6.11231C157.457 3.47467 155.303 1.33398 152.65 1.33398ZM152.65 9.93497C150.53 9.93497 148.805 8.21955 148.805 6.11231C148.805 4.00507 150.53 2.28965 152.65 2.28965C154.77 2.28965 156.496 4.00507 156.496 6.11231C156.496 8.21955 154.77 9.93497 152.65 9.93497ZM154.515 4.33955L151.689 7.1492L150.785 6.25088C150.598 6.06452 150.295 6.06452 150.107 6.25088C149.92 6.43723 149.92 6.73827 150.107 6.92462L151.352 8.16221C151.54 8.34856 151.843 8.34856 152.03 8.16221L155.198 5.01329C155.385 4.82694 155.385 4.5259 155.198 4.33955C155.01 4.1532 154.703 4.1532 154.515 4.33955Z\"\n          fill=\"#31D0AA\"\n        />\n        <path\n          d=\"M195.911 1.33398C193.258 1.33398 191.104 3.47467 191.104 6.11231C191.104 8.74994 193.258 10.8906 195.911 10.8906C198.565 10.8906 200.718 8.74994 200.718 6.11231C200.718 3.47467 198.565 1.33398 195.911 1.33398ZM195.911 9.93497C193.791 9.93497 192.066 8.21955 192.066 6.11231C192.066 4.00507 193.791 2.28965 195.911 2.28965C198.031 2.28965 199.757 4.00507 199.757 6.11231C199.757 8.21955 198.031 9.93497 195.911 9.93497ZM197.776 4.33955L194.95 7.1492L194.046 6.25088C193.859 6.06452 193.556 6.06452 193.368 6.25088C193.181 6.43723 193.181 6.73827 193.368 6.92462L194.613 8.16221C194.801 8.34856 195.104 8.34856 195.291 8.16221L198.459 5.01329C198.646 4.82694 198.646 4.5259 198.459 4.33955C198.271 4.1532 197.964 4.1532 197.776 4.33955Z\"\n          fill=\"#31D0AA\"\n        />\n        <g clipPath=\"url(#clipExampleB)\">\n          <path\n            d=\"M238.211 1.33398C235.558 1.33398 233.404 3.47467 233.404 6.11231C233.404 8.74994 235.558 10.8906 238.211 10.8906C240.864 10.8906 243.018 8.74994 243.018 6.11231C243.018 3.47467 240.864 1.33398 238.211 1.33398ZM238.211 9.93497C236.091 9.93497 234.366 8.21955 234.366 6.11231C234.366 4.00507 236.091 2.28965 238.211 2.28965C240.331 2.28965 242.057 4.00507 242.057 6.11231C242.057 8.21955 240.331 9.93497 238.211 9.93497ZM240.076 4.33955L237.25 7.1492L236.346 6.25088C236.159 6.06452 235.856 6.06452 235.668 6.25088C235.481 6.43723 235.481 6.73827 235.668 6.92462L236.913 8.16221C237.101 8.34856 237.404 8.34856 237.591 8.16221L240.759 5.01329C240.946 4.82694 240.946 4.5259 240.759 4.33955C240.571 4.1532 240.264 4.1532 240.076 4.33955Z\"\n            fill=\"#31D0AA\"\n          />\n        </g>\n        <path\n          d=\"M69.0119 1.33398C66.3585 1.33398 64.2051 3.47467 64.2051 6.11231C64.2051 8.74994 66.3585 10.8906 69.0119 10.8906C71.6652 10.8906 73.8187 8.74994 73.8187 6.11231C73.8187 3.47467 71.6652 1.33398 69.0119 1.33398ZM69.0119 9.93497C66.8921 9.93497 65.1664 8.21955 65.1664 6.11231C65.1664 4.00507 66.8921 2.28965 69.0119 2.28965C71.1317 2.28965 72.8573 4.00507 72.8573 6.11231C72.8573 8.21955 71.1317 9.93497 69.0119 9.93497ZM70.8769 4.33955L68.0505 7.1492L67.1468 6.25088C66.9594 6.06452 66.6565 6.06452 66.4691 6.25088C66.2816 6.43723 66.2816 6.73827 66.4691 6.92462L67.714 8.16221C67.9015 8.34856 68.2043 8.34856 68.3918 8.16221L71.5595 5.01329C71.7469 4.82694 71.7469 4.5259 71.5595 4.33955C71.372 4.1532 71.0644 4.1532 70.8769 4.33955Z\"\n          fill=\"#31D0AA\"\n        />\n        <path\n          d=\"M27.3368 3.1067C27.1494 2.92035 26.8465 2.92035 26.6591 3.1067L24.3085 5.43852L21.958 3.10192C21.7705 2.91557 21.4677 2.91557 21.2802 3.10192C21.0928 3.28828 21.0928 3.58931 21.2802 3.77567L23.6308 6.11227L21.2802 8.44887C21.0928 8.63522 21.0928 8.93626 21.2802 9.12261C21.4677 9.30897 21.7705 9.30897 21.958 9.12261L24.3085 6.78601L26.6591 9.12261C26.8465 9.30897 27.1494 9.30897 27.3368 9.12261C27.5243 8.93626 27.5243 8.63522 27.3368 8.44887L24.9863 6.11227L27.3368 3.77567C27.5195 3.59409 27.5195 3.28828 27.3368 3.1067Z\"\n          fill=\"#ED4B9E\"\n        />\n        <defs>\n          <clipPath id=\"clipExampleB\">\n            <rect width=\"11.5363\" height=\"11.468\" fill=\"white\" transform=\"translate(232.443 0.378296)\" />\n          </clipPath>\n        </defs>\n      </svg>\n    </Svg>\n  )\n}\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst PoolAllocationChart: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 103 105\" {...props}>\n      <svg width=\"103\" height=\"105\" viewBox=\"0 0 403 405\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <ellipse\n          cx=\"201.5\"\n          cy=\"202.5\"\n          rx=\"200.5\"\n          ry=\"199.5\"\n          transform=\"rotate(-90 201.5 202.5)\"\n          fill=\"#BDC2C4\"\n          stroke=\"#0E0E0E\"\n          strokeOpacity=\"0.05\"\n          strokeWidth=\"2\"\n        />\n        <path\n          d=\"M201.5 2.00002C243.63 2.00002 284.679 15.4044 318.763 40.2921C352.847 65.1798 378.217 100.273 391.236 140.542C404.255 180.811 404.255 224.189 391.236 264.458C378.217 304.727 352.847 339.82 318.763 364.708C284.679 389.596 243.63 403 201.5 403C159.37 403 118.321 389.596 84.2368 364.708C50.1527 339.82 24.7832 304.727 11.7642 264.458C-1.25475 224.189 -1.25475 180.811 11.7642 140.542L201.5 202.5L201.5 2.00002Z\"\n          fill=\"#D750B2\"\n          stroke=\"#0E0E0E\"\n          strokeOpacity=\"0.05\"\n          strokeWidth=\"2\"\n        />\n        <path\n          d=\"M201.5 2.00002C243.63 2.00002 284.679 15.4044 318.763 40.2921C352.847 65.1798 378.217 100.273 391.236 140.542C404.255 180.811 404.255 224.189 391.236 264.458C378.217 304.727 352.847 339.82 318.763 364.708L201.5 202.5L201.5 2.00002Z\"\n          fill=\"#A881FC\"\n          stroke=\"#0E0E0E\"\n          strokeOpacity=\"0.05\"\n          strokeWidth=\"2\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M201.5 2.00002C243.63 2.00002 284.679 15.4044 318.763 40.2921C352.847 65.1798 378.217 100.273 391.236 140.542L201.5 202.5L201.5 2.00002Z\"\n          fill=\"#3AF3F8\"\n          stroke=\"#0E0E0E\"\n          strokeOpacity=\"0.05\"\n          strokeWidth=\"2\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M201.5 2.00002C243.63 2.00002 284.679 15.4044 318.763 40.2921L201.5 202.5L201.5 2.00002Z\"\n          fill=\"#10AC87\"\n          stroke=\"#0E0E0E\"\n          strokeOpacity=\"0.05\"\n          strokeWidth=\"2\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M201.5 2.00002C218.235 2.00002 234.904 4.11632 251.114 8.29909L201.5 202.5L201.5 2.00002Z\"\n          fill=\"#93D45A\"\n          stroke=\"#0E0E0E\"\n          strokeOpacity=\"0.05\"\n          strokeWidth=\"2\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M201.5 2.00002C222.435 2.00002 243.239 5.3116 263.149 11.8132L201.5 202.5L201.5 2.00002Z\"\n          fill=\"#8FD74F\"\n          stroke=\"#0E0E0E\"\n          strokeOpacity=\"0.05\"\n          strokeWidth=\"2\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M201.5 2.00002C205.679 2.00002 209.856 2.13198 214.027 2.39565L201.5 202.5L201.5 2.00002Z\"\n          fill=\"#C4C4C4\"\n          stroke=\"#0E0E0E\"\n          strokeOpacity=\"0.05\"\n          strokeWidth=\"2\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M201.5 2.00002C209.859 2.00002 218.211 2.52807 226.504 3.58101L201.5 202.5L201.5 2.00002Z\"\n          fill=\"#FFD307\"\n          stroke=\"#0E0E0E\"\n          strokeOpacity=\"0.05\"\n          strokeWidth=\"2\"\n          strokeLinejoin=\"round\"\n        />\n        <ellipse\n          opacity=\"0.2\"\n          cx=\"201.5\"\n          cy=\"202.5\"\n          rx=\"200.5\"\n          ry=\"199.5\"\n          transform=\"rotate(-90 201.5 202.5)\"\n          stroke=\"#280D5F\"\n          strokeWidth=\"3\"\n        />\n      </svg>\n    </Svg>\n  )\n}\n\nexport default PoolAllocationChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface NumTicketsToBuyButtonProps {\n  onClick: () => void\n  disabled?: boolean\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst NumTicketsToBuyButton: React.FC<NumTicketsToBuyButtonProps> = ({ children, onClick, disabled = false }) => {\n  return (\n    <StyledButton disabled={disabled} scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default NumTicketsToBuyButton\n","import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Ticket, UpdateTicketAction } from './useTicketsReducer'\n\nconst InputsContainer = styled.div<{ focused: boolean; isDuplicate: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 36px;\n  box-sizing: border-box;\n  border: 1px solid #d7caec;\n  background-color: #eeeaf4;\n  border-radius: 16px;\n  margin-bottom: 8px;\n  ${({ isDuplicate }) =>\n    isDuplicate &&\n    `\n    border: 1px solid #FFB237;\n    box-shadow: 0px 0px 0px 2px #FFB237;\n  `}\n  ${({ focused }) =>\n    focused &&\n    `\n    border: 1px solid #7645D9;\n    box-shadow: 0px 0px 0px 2px #E4DAF7;\n  `}\n`\n\nconst DigitInput = styled.input`\n  border: none;\n  height: 32px;\n  padding: 0 12px;\n  font-size: 16px;\n  flex: 1;\n  width: 16px;\n  text-align: center;\n  min-width: 0;\n  background-color: transparent;\n  caret-color: #7a6faa;\n\n  &::placeholder {\n    text-align: center;\n  }\n\n  &:placeholder-shown {\n    text-align: left;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    /* display: none; <- Crashes Chrome on hover */\n    -webkit-appearance: none;\n    margin: 0; /* <-- Apparently some margin are still there even though it's hidden */\n  }\n\n  -moz-appearance: textfield; /* Firefox */\n`\n\nconst getIdLabel = (id: number): string => {\n  if (id < 10) return `#00${id}`\n  if (id < 100) return `#0${id}`\n  return `#${id}`\n}\n\nconst TicketContainer: React.FC<{\n  ticket: Ticket\n  duplicateWith: number[]\n  updateTicket: UpdateTicketAction\n  disabled: boolean\n}> = ({ ticket, duplicateWith, updateTicket, disabled }) => {\n  const [focused, setFocused] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const digit1 = useRef<HTMLInputElement>(null)\n  const digit2 = useRef<HTMLInputElement>(null)\n  const digit3 = useRef<HTMLInputElement>(null)\n  const digit4 = useRef<HTMLInputElement>(null)\n  const digit5 = useRef<HTMLInputElement>(null)\n  const digit6 = useRef<HTMLInputElement>(null)\n\n  const { t } = useTranslation()\n\n  const digitRefs = [digit1, digit2, digit3, digit4, digit5, digit6]\n\n  const scrollInputIntoView = () => {\n    if (containerRef.current) {\n      containerRef.current.scrollIntoView({ block: 'center', behavior: 'smooth' })\n    }\n  }\n\n  const onPasteHandler = (e: React.ClipboardEvent) => {\n    e.preventDefault()\n    const pasteContent = e.clipboardData.getData('Text')\n    if (pasteContent.length <= 6 && /^\\d+$/.test(pasteContent)) {\n      const filler = Array(6 - pasteContent.length).fill('')\n      updateTicket(ticket.id, [...pasteContent.split(''), ...filler])\n    }\n  }\n\n  const onFocusHandler = () => {\n    scrollInputIntoView()\n    setFocused(true)\n  }\n\n  const onBlurHandler = () => {\n    setFocused(false)\n  }\n\n  const onChangeHandler = (event: React.KeyboardEvent, digitId: number) => {\n    const currentKey = parseInt(event.key, 10)\n\n    if (['e', 'E', '.', ',', '-', 'Unidentified'].includes(event.key)) {\n      event.preventDefault()\n      return\n    }\n\n    // Handling numeric inputs\n    if (currentKey >= 0 && currentKey <= 9) {\n      event.preventDefault()\n      const newNumbers = [...ticket.numbers]\n      newNumbers[digitId] = `${currentKey}`\n      updateTicket(ticket.id, newNumbers)\n      const nextDigitId = digitId + 1\n      // if we're not on the last digit - auto-tab\n      const nextInput = digitRefs[nextDigitId]\n      if (nextDigitId !== 6 && nextInput.current) {\n        nextInput.current.focus()\n      }\n    }\n\n    if (event.key === 'Backspace') {\n      event.preventDefault()\n      // If some number is there - delete the number\n      if (ticket.numbers[digitId]) {\n        const newNumbers = [...ticket.numbers]\n        newNumbers[digitId] = ''\n        updateTicket(ticket.id, newNumbers)\n      } else {\n        // if the cell is empty and user presses backspace - remove previous\n        const prevDigitId = digitId - 1\n        const nextInput = digitRefs[prevDigitId]\n        // prevent focusing on non-existent input\n        if (prevDigitId !== -1 && nextInput.current) {\n          nextInput.current.focus()\n          const newNumbers = [...ticket.numbers]\n          newNumbers[prevDigitId] = ''\n          updateTicket(ticket.id, newNumbers)\n        }\n      }\n    }\n\n    if (event.key === 'Delete') {\n      event.preventDefault()\n      if (ticket.numbers[digitId]) {\n        const newNumbers = [...ticket.numbers]\n        newNumbers[digitId] = ''\n        updateTicket(ticket.id, newNumbers)\n      } else {\n        // if the cell is empty and user presses delete - remove next\n        const nextDigitId = digitId + 1\n        const nextInput = digitRefs[nextDigitId]\n        // prevent focusing on non-existent input\n        if (nextDigitId !== 6 && nextInput.current) {\n          nextInput.current.focus()\n          const newNumbers = [...ticket.numbers]\n          newNumbers[nextDigitId] = ''\n          updateTicket(ticket.id, newNumbers)\n        }\n      }\n    }\n\n    if (event.key === 'ArrowLeft') {\n      event.preventDefault()\n      const prevDigitId = digitId - 1\n      const nextInput = digitRefs[prevDigitId]\n      // prevent focusing on non-existent input\n      if (prevDigitId !== -1 && nextInput.current) {\n        nextInput.current.focus()\n      }\n    }\n\n    if (event.key === 'ArrowRight') {\n      event.preventDefault()\n      const nextDigitId = digitId + 1\n      const nextInput = digitRefs[nextDigitId]\n      // prevent focusing on non-existent input\n      if (nextDigitId !== 6 && nextInput.current) {\n        nextInput.current.focus()\n      }\n    }\n  }\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {getIdLabel(ticket.id)}\n        </Text>\n        <Text fontSize=\"12px\" color=\"warning\">\n          {duplicateWith.length !== 0 && t('Duplicate')}\n        </Text>\n      </Flex>\n      <InputsContainer\n        ref={containerRef}\n        onClick={scrollInputIntoView}\n        focused={focused}\n        isDuplicate={duplicateWith.length !== 0}\n      >\n        <DigitInput\n          ref={digit1}\n          type=\"number\"\n          value={ticket.numbers[0]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 0)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n        <DigitInput\n          ref={digit2}\n          type=\"number\"\n          value={ticket.numbers[1]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 1)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n        <DigitInput\n          ref={digit3}\n          type=\"number\"\n          value={ticket.numbers[2]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 2)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n        <DigitInput\n          ref={digit4}\n          type=\"number\"\n          value={ticket.numbers[3]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 3)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n        <DigitInput\n          ref={digit5}\n          type=\"number\"\n          value={ticket.numbers[4]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 4)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n        <DigitInput\n          ref={digit6}\n          type=\"number\"\n          value={ticket.numbers[5]}\n          onKeyDown={(e: React.KeyboardEvent) => onChangeHandler(e, 5)}\n          placeholder=\"_\"\n          onChange={(e) => e.preventDefault()}\n          disabled={disabled}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          onPaste={onPasteHandler}\n          inputMode=\"numeric\"\n        />\n      </InputsContainer>\n    </>\n  )\n}\n\nexport default TicketContainer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, ArrowBackIcon, AutoRenewIcon } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport TicketInput from './TicketInput'\nimport { UpdateTicketAction, Ticket } from './useTicketsReducer'\n\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n  max-height: 552px;\n\n  & div:nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  height: 310px;\n  overflow-y: scroll;\n  border-bottom: ${({ theme }) => `1px solid ${theme.colors.cardBorder}`};\n  padding: 24px;\n`\n\nconst EditNumbersModal: React.FC<{\n  totalCost: string\n  updateTicket: UpdateTicketAction\n  randomize: () => void\n  tickets: Ticket[]\n  allComplete: boolean\n  onConfirm: () => void\n  isConfirming: boolean\n  onDismiss?: () => void\n}> = ({ totalCost, updateTicket, randomize, tickets, allComplete, onConfirm, isConfirming, onDismiss }) => {\n  const { theme } = useTheme()\n  const { t } = useTranslation()\n  return (\n    <StyledModal\n      title={t('Edit numbers')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n      onBack={onDismiss}\n    >\n      <ScrollableContainer>\n        <Flex justifyContent=\"space-between\" mb=\"16px\">\n          <Text color=\"textSubtle\">{t('Total cost')}:</Text>\n          <Text>~{totalCost} MByte</Text>\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\" mb=\"16px\">\n          {t(\n            'Numbers are randomized, with no duplicates among your tickets. Tap a number to edit it. Available digits: 0-9',\n          )}\n        </Text>\n        <Button disabled={isConfirming} mb=\"16px\" variant=\"secondary\" width=\"100%\" height=\"32px\" onClick={randomize}>\n          {t('Randomize')}\n        </Button>\n        {tickets.map((ticket) => (\n          <TicketInput\n            key={ticket.id}\n            ticket={ticket}\n            duplicateWith={ticket.duplicateWith}\n            updateTicket={updateTicket}\n            disabled={isConfirming}\n          />\n        ))}\n      </ScrollableContainer>\n      <Flex flexDirection=\"column\" justifyContent=\"center\" m=\"24px\">\n        <Button\n          id=\"lotteryBuyEdited\"\n          disabled={!allComplete || isConfirming}\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          onClick={() => {\n            onConfirm()\n          }}\n        >\n          {isConfirming ? t('Confirming') : t('Confirm and buy')}\n        </Button>\n        <Button mt=\"8px\" variant={isConfirming ? 'secondary' : 'text'} disabled={isConfirming} onClick={onDismiss}>\n          <ArrowBackIcon color={isConfirming ? 'disabled' : 'primary'} height=\"24px\" width=\"24px\" /> {t('Go back')}\n        </Button>\n      </Flex>\n    </StyledModal>\n  )\n}\n\nexport default EditNumbersModal\n","import BigNumber from 'bignumber.js'\nimport { LotteryResponse, LotteryRound, LotteryRoundUserTickets } from 'state/types'\n\n/**\n * Remove the '1' and reverse the digits in a lottery number retrieved from the smart contract\n */\nexport const parseRetrievedNumber = (number: string): string => {\n  const numberAsArray = number.split('')\n  numberAsArray.splice(0, 1)\n  numberAsArray.reverse()\n  return numberAsArray.join('')\n}\n\nexport const getDrawnDate = (locale: string, endTime: string) => {\n  const endTimeInMs = parseInt(endTime, 10) * 1000\n  const endTimeAsDate = new Date(endTimeInMs)\n  return endTimeAsDate.toLocaleDateString(locale, dateTimeOptions)\n}\n\nexport const dateOptions: Intl.DateTimeFormatOptions = {\n  year: 'numeric',\n  month: 'short',\n  day: 'numeric',\n}\n\nexport const timeOptions: Intl.DateTimeFormatOptions = {\n  hour: 'numeric',\n  minute: 'numeric',\n}\n\nexport const dateTimeOptions: Intl.DateTimeFormatOptions = {\n  ...dateOptions,\n  ...timeOptions,\n}\n\nexport const processLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = new BigNumber(discountDivisorAsString)\n  const priceTicketInCake = new BigNumber(priceTicketInCakeAsString)\n  const amountCollectedInCake = new BigNumber(amountCollectedInCakeAsString)\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n","import { LotteryTicket } from 'config/constants/types'\nimport { random } from 'lodash'\n\n/**\n * Generate a specific number of unique, randomised 7-digit lottery numbers between 1000000 & 1999999\n */\nconst generateTicketNumbers = (\n  numberOfTickets: number,\n  userCurrentTickets?: LotteryTicket[],\n  minNumber = 1000000,\n  maxNumber = 1999999,\n): number[] => {\n  // Populate array with existing tickets (if they have them) to ensure no duplicates when generating new numbers\n  const existingTicketNumbers =\n    userCurrentTickets?.length > 0\n      ? userCurrentTickets.map((ticket) => {\n          return parseInt(ticket?.number)\n        })\n      : []\n  const generatedTicketNumbers = [...existingTicketNumbers]\n\n  for (let count = 0; count < numberOfTickets; count++) {\n    let randomNumber = random(minNumber, maxNumber)\n    while (generatedTicketNumbers.includes(randomNumber)) {\n      // Catch for duplicates - generate a new number until the array doesn't include the random number generated\n      randomNumber = random(minNumber, maxNumber)\n    }\n    generatedTicketNumbers.push(randomNumber)\n  }\n\n  // Filter out the users' existing tickets\n  const ticketsToBuy =\n    userCurrentTickets?.length > 0\n      ? generatedTicketNumbers.filter((ticketNumber) => {\n          return !existingTicketNumbers.includes(ticketNumber)\n        })\n      : generatedTicketNumbers\n\n  return ticketsToBuy\n}\n\nexport default generateTicketNumbers\n","import { LotteryTicket } from 'config/constants/types'\nimport { useEffect, useReducer } from 'react'\nimport { parseRetrievedNumber } from '../../helpers'\nimport generateTicketNumbers from './generateTicketNumbers'\n\nexport interface Ticket {\n  id: number\n  numbers: string[]\n  duplicateWith: number[]\n  isComplete: boolean\n}\n\nexport interface TicketsState {\n  tickets: Ticket[]\n  allComplete: boolean\n}\n\nconst getInitialState = ({\n  amount,\n  userCurrentTickets,\n}: {\n  amount: number\n  userCurrentTickets: LotteryTicket[]\n}): TicketsState => {\n  const randomTickets = generateTicketNumbers(amount, userCurrentTickets)\n  const randomTicketsAsStringArray = randomTickets.map((ticket) => parseRetrievedNumber(ticket.toString()).split(''))\n  const tickets = Array.from({ length: amount }, (_, i) => i + 1).map((index) => ({\n    id: index,\n    numbers: randomTicketsAsStringArray[index - 1],\n    duplicateWith: [],\n    isComplete: true,\n  }))\n  return {\n    tickets,\n    allComplete: true,\n  }\n}\n\nconst reducer = (state: TicketsState, action: any) => {\n  switch (action.type) {\n    case 'updateTicket': {\n      const tickets = [...state.tickets]\n      const { ticketId, newNumbers } = action.payload\n\n      const newDuplicates = state.tickets.filter(\n        (ticket) => ticket.id !== ticketId && ticket.isComplete && ticket.numbers.join('') === newNumbers.join(''),\n      )\n\n      // If ticket was duplicate but not duplicate anymore with this update\n      // go through previously considered duplicates and remove id of this ticket\n      // from their duplicateWith array\n      const prevDuplicates = tickets[ticketId - 1].duplicateWith\n      prevDuplicates.forEach((prevTicketId) => {\n        if (!newDuplicates.map(({ id }) => id).includes(prevTicketId)) {\n          const dupsToUpdate = [...tickets[prevTicketId - 1].duplicateWith]\n          const indexToRemove = dupsToUpdate.findIndex((id) => id === ticketId)\n          dupsToUpdate.splice(indexToRemove, 1)\n          tickets[prevTicketId - 1] = {\n            ...tickets[prevTicketId - 1],\n            duplicateWith: dupsToUpdate,\n          }\n        }\n      })\n\n      // If found duplicates - update their duplicateWith array\n      if (newDuplicates.length !== 0) {\n        newDuplicates.forEach((duplicate) => {\n          tickets[duplicate.id - 1] = {\n            ...duplicate,\n            duplicateWith: [...duplicate.duplicateWith, ticketId],\n          }\n        })\n      }\n\n      const updatedTicket = {\n        id: ticketId,\n        numbers: newNumbers,\n        duplicateWith: newDuplicates.map((ticket) => ticket.id),\n        isComplete: newNumbers.join('').length === 6,\n      }\n      tickets[ticketId - 1] = updatedTicket\n\n      // Check if all tickets are filled\n      const allComplete = tickets.every((ticket) => ticket.isComplete)\n\n      return {\n        tickets,\n        allComplete,\n      }\n    }\n    case 'reset':\n      return getInitialState({ amount: action.payload.amount, userCurrentTickets: action.payload.userCurrentTickets })\n    default:\n      throw new Error()\n  }\n}\n\nexport type UpdateTicketAction = (ticketId: number, newNumbers: string[]) => void\n\nexport const useTicketsReducer = (\n  amount: number,\n  userCurrentTickets: LotteryTicket[],\n): [UpdateTicketAction, () => void, Ticket[], boolean, () => number[]] => {\n  const [state, dispatch] = useReducer(reducer, { amount, userCurrentTickets }, getInitialState)\n\n  useEffect(() => {\n    dispatch({ type: 'reset', payload: { amount, userCurrentTickets } })\n  }, [amount, userCurrentTickets])\n\n  const updateTicket = (ticketId: number, newNumbers: string[]) => {\n    dispatch({ type: 'updateTicket', payload: { ticketId, newNumbers } })\n  }\n\n  const randomize = () => {\n    dispatch({ type: 'reset', payload: { amount, userCurrentTickets } })\n  }\n\n  const getTicketsForPurchase = () => {\n    return state.tickets.map((ticket) => {\n      const reversedTicket = [...ticket.numbers].map((num) => parseInt(num, 10)).reverse()\n      reversedTicket.unshift(1)\n      const ticketAsNumber = parseInt(reversedTicket.join(''), 10)\n      return ticketAsNumber\n    })\n  }\n\n  return [updateTicket, randomize, state.tickets, state.allComplete, getTicketsForPurchase]\n}\n","import React from 'react'\nimport { Button, useModal, WaitIcon, ButtonProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useLottery } from 'state/lottery/hooks'\nimport { LotteryStatus } from 'config/constants/types'\nimport BuyTicketsModal from './BuyTicketsModal/BuyTicketsModal'\n\ninterface BuyTicketsButtonProps extends ButtonProps {\n  disabled?: boolean\n}\n\nconst BuyTicketsButton: React.FC<BuyTicketsButtonProps> = ({ disabled, ...props }) => {\n  const { t } = useTranslation()\n  const [onPresentBuyTicketsModal] = useModal(<BuyTicketsModal />)\n  const {\n    currentRound: { status },\n  } = useLottery()\n\n  const getBuyButtonText = () => {\n    if (status === LotteryStatus.OPEN) {\n      return t('Buy Tickets')\n    }\n    return (\n      <>\n        <WaitIcon mr=\"4px\" color=\"textDisabled\" /> {t('On sale soon!')}\n      </>\n    )\n  }\n\n  return (\n    <Button {...props} disabled={disabled} onClick={onPresentBuyTicketsModal}>\n      {getBuyButtonText()}\n    </Button>\n  )\n}\n\nexport default BuyTicketsButton\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { Box, Flex, Heading, Skeleton } from '@pancakeswap/uikit'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useLottery } from 'state/lottery/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { TicketPurchaseCard } from '../svgs'\nimport BuyTicketsButton from './BuyTicketsButton'\n\nconst floatingStarsLeft = keyframes`\n  from {\n    transform: translate(0,  0px);\n  }\n  50% {\n    transform: translate(10px, 10px);\n  }\n  to {\n    transform: translate(0, -0px);\n  }  \n`\n\nconst floatingStarsRight = keyframes`\n  from {\n    transform: translate(0,  0px);\n  }\n  50% {\n    transform: translate(-10px, 10px);\n  }\n  to {\n    transform: translate(0, -0px);\n  }  \n`\n\nconst floatingTicketLeft = keyframes`\n  from {\n    transform: translate(0,  0px);\n  }\n  50% {\n    transform: translate(-10px, 15px);\n  }\n  to {\n    transform: translate(0, -0px);\n  }  \n`\n\nconst floatingTicketRight = keyframes`\n  from {\n    transform: translate(0,  0px);\n  }\n  50% {\n    transform: translate(10px, 15px);\n  }\n  to {\n    transform: translate(0, -0px);\n  }  \n`\n\nconst mainTicketAnimation = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  50% {\n    transform: rotate(6deg);\n  }\n  to {\n    transform: rotate(0deg);\n  }  \n`\n\nconst TicketContainer = styled(Flex)`\n  animation: ${mainTicketAnimation} 3s ease-in-out infinite;\n`\n\nconst PrizeTotalBalance = styled(Balance)`\n  background: ${({ theme }) => theme.colors.gradients.gold};\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`\n\nconst StyledBuyTicketButton = styled(BuyTicketsButton)<{ disabled: boolean }>`\n  background: ${({ theme, disabled }) =>\n    disabled ? theme.colors.disabled : 'linear-gradient(180deg, #7645d9 0%, #452a7a 100%)'};\n  width: 200px;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 240px;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  z-index: 1;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) rotate(-4deg);\n`\n\nconst TicketSvgWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: rotate(-4deg);\n`\n\nconst Decorations = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: url(/images/decorations/bg-star.svg);\n  background-repeat: no-repeat;\n  background-position: center 0;\n`\n\nconst StarsDecorations = styled(Box)`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n\n  & img {\n    position: absolute;\n  }\n\n  & :nth-child(1) {\n    animation: ${floatingStarsLeft} 3s ease-in-out infinite;\n    animation-delay: 0.25s;\n  }\n  & :nth-child(2) {\n    animation: ${floatingStarsLeft} 3.5s ease-in-out infinite;\n    animation-delay: 0.5s;\n  }\n  & :nth-child(3) {\n    animation: ${floatingStarsRight} 4s ease-in-out infinite;\n    animation-delay: 0.75s;\n  }\n  & :nth-child(4) {\n    animation: ${floatingTicketLeft} 6s ease-in-out infinite;\n    animation-delay: 0.2s;\n  }\n  & :nth-child(5) {\n    animation: ${floatingTicketRight} 6s ease-in-out infinite;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & :nth-child(1) {\n      left: 3%;\n      top: 42%;\n    }\n    & :nth-child(2) {\n      left: 9%;\n      top: 23%;\n    }\n    & :nth-child(3) {\n      right: 2%;\n      top: 24%;\n    }\n    & :nth-child(4) {\n      left: 8%;\n      top: 67%;\n    }\n    & :nth-child(5) {\n      right: 8%;\n      top: 67%;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    & :nth-child(1) {\n      left: 10%;\n      top: 42%;\n    }\n    & :nth-child(2) {\n      left: 17%;\n      top: 23%;\n    }\n    & :nth-child(3) {\n      right: 10%;\n      top: 24%;\n    }\n    & :nth-child(4) {\n      left: 17%;\n      top: 67%;\n    }\n    & :nth-child(5) {\n      right: 17%;\n      top: 67%;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    & :nth-child(1) {\n      left: 19%;\n      top: 42%;\n    }\n    & :nth-child(2) {\n      left: 25%;\n      top: 23%;\n    }\n    & :nth-child(3) {\n      right: 19%;\n      top: 24%;\n    }\n    & :nth-child(4) {\n      left: 24%;\n      top: 67%;\n    }\n    & :nth-child(5) {\n      right: 24%;\n      top: 67%;\n    }\n  }\n`\n\nconst Hero = () => {\n  const { t } = useTranslation()\n  const {\n    currentRound: { amountCollectedInCake, status },\n    isTransitioning,\n  } = useLottery()\n\n  const cakePriceBusd = usePriceCakeBusd()\n  const prizeInBusd = amountCollectedInCake.times(cakePriceBusd)\n  const prizeTotal = getBalanceNumber(prizeInBusd)\n  const ticketBuyIsDisabled = status !== LotteryStatus.OPEN || isTransitioning\n\n  const getHeroHeading = () => {\n    if (status === LotteryStatus.OPEN) {\n      return (\n        <>\n          {prizeInBusd.isNaN() ? (\n            <Skeleton my=\"7px\" height={60} width={190} />\n          ) : (\n            <PrizeTotalBalance fontSize=\"64px\" bold prefix=\"$\" value={prizeTotal} mb=\"8px\" decimals={0} />\n          )}\n          <Heading mb=\"32px\" scale=\"lg\" color=\"#ffffff\">\n            {t('in prizes!')}\n          </Heading>\n        </>\n      )\n    }\n    return (\n      <Heading mb=\"24px\" scale=\"xl\" color=\"#ffffff\">\n        {t('Tickets on sale soon')}\n      </Heading>\n    )\n  }\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n      <Decorations />\n      <StarsDecorations display={['none', 'none', 'block']}>\n        <img src=\"/images/lottery/star-big.png\" width=\"124px\" height=\"109px\" alt=\"\" />\n        <img src=\"/images/lottery/star-small.png\" width=\"70px\" height=\"62px\" alt=\"\" />\n        <img src=\"/images/lottery/three-stars.png\" width=\"130px\" height=\"144px\" alt=\"\" />\n        <img src=\"/images/lottery/ticket-l.png\" width=\"123px\" height=\"83px\" alt=\"\" />\n        <img src=\"/images/lottery/ticket-r.png\" width=\"121px\" height=\"72px\" alt=\"\" />\n      </StarsDecorations>\n      <Heading mb=\"8px\" scale=\"md\" color=\"#ffffff\" id=\"lottery-hero-title\">\n        {t('The Metaprofitsdao Lottery')}\n      </Heading>\n      {getHeroHeading()}\n      <TicketContainer\n        position=\"relative\"\n        width={['240px', '288px']}\n        height={['94px', '113px']}\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <ButtonWrapper>\n          <StyledBuyTicketButton disabled={ticketBuyIsDisabled} />\n        </ButtonWrapper>\n        <TicketSvgWrapper>\n          <TicketPurchaseCard width=\"100%\" />\n        </TicketSvgWrapper>\n      </TicketContainer>\n    </Flex>\n  )\n}\n\nexport default Hero\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket, LotteryTicketClaimData } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryRoundGraphEntity } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { NUM_ROUNDS_TO_CHECK_FOR_REWARDS } from 'config/constants/lottery'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\nimport { MAX_LOTTERIES_REQUEST_SIZE } from './getLotteriesData'\n\ninterface RoundDataAndUserTickets {\n  roundId: string\n  userTickets: LotteryTicket[]\n  finalNumber: string\n}\n\nconst lotteryAddress = getLotteryV2Address()\n\nconst fetchCakeRewardsForTickets = async (\n  winningTickets: LotteryTicket[],\n): Promise<{ ticketsWithUnclaimedRewards: LotteryTicket[]; cakeTotal: BigNumber }> => {\n  const calls = winningTickets.map((winningTicket) => {\n    const { roundId, id, rewardBracket } = winningTicket\n    return {\n      name: 'viewRewardsForTicketId',\n      address: lotteryAddress,\n      params: [roundId, id, rewardBracket],\n    }\n  })\n\n  try {\n    const cakeRewards = await multicallv2(lotteryV2Abi, calls)\n\n    const cakeTotal = cakeRewards.reduce((accum: BigNumber, cakeReward: ethers.BigNumber[]) => {\n      return accum.plus(new BigNumber(cakeReward[0].toString()))\n    }, BIG_ZERO)\n\n    const ticketsWithUnclaimedRewards = winningTickets.map((winningTicket, index) => {\n      return { ...winningTicket, cakeReward: cakeRewards[index] }\n    })\n    return { ticketsWithUnclaimedRewards, cakeTotal }\n  } catch (error) {\n    console.error(error)\n    return { ticketsWithUnclaimedRewards: null, cakeTotal: null }\n  }\n}\n\nconst getRewardBracketByNumber = (ticketNumber: string, finalNumber: string): number => {\n  // Winning numbers are evaluated right-to-left in the smart contract, so we reverse their order for validation here:\n  // i.e. '1123456' should be evaluated as '6543211'\n  const ticketNumAsArray = ticketNumber.split('').reverse()\n  const winningNumsAsArray = finalNumber.split('').reverse()\n  const matchingNumbers = []\n\n  // The number at index 6 in all tickets is 1 and will always match, so finish at index 5\n  for (let index = 0; index < winningNumsAsArray.length - 1; index++) {\n    if (ticketNumAsArray[index] !== winningNumsAsArray[index]) {\n      break\n    }\n    matchingNumbers.push(ticketNumAsArray[index])\n  }\n\n  // Reward brackets refer to indexes, 0 = 1 match, 5 = 6 matches. Deduct 1 from matchingNumbers' length to get the reward bracket\n  const rewardBracket = matchingNumbers.length - 1\n  return rewardBracket\n}\n\nexport const getWinningTickets = async (\n  roundDataAndUserTickets: RoundDataAndUserTickets,\n): Promise<LotteryTicketClaimData> => {\n  const { roundId, userTickets, finalNumber } = roundDataAndUserTickets\n\n  const ticketsWithRewardBrackets = userTickets.map((ticket) => {\n    return {\n      roundId,\n      id: ticket.id,\n      number: ticket.number,\n      status: ticket.status,\n      rewardBracket: getRewardBracketByNumber(ticket.number, finalNumber),\n    }\n  })\n\n  // A rewardBracket of -1 means no matches. 0 and above means there has been a match\n  const allWinningTickets = ticketsWithRewardBrackets.filter((ticket) => {\n    return ticket.rewardBracket >= 0\n  })\n\n  // If ticket.status is true, the ticket has already been claimed\n  const unclaimedWinningTickets = allWinningTickets.filter((ticket) => {\n    return !ticket.status\n  })\n\n  if (unclaimedWinningTickets.length > 0) {\n    const { ticketsWithUnclaimedRewards, cakeTotal } = await fetchCakeRewardsForTickets(unclaimedWinningTickets)\n    return { ticketsWithUnclaimedRewards, allWinningTickets, cakeTotal, roundId }\n  }\n\n  if (allWinningTickets.length > 0) {\n    return { ticketsWithUnclaimedRewards: null, allWinningTickets, cakeTotal: null, roundId }\n  }\n\n  return null\n}\n\nconst getWinningNumbersForRound = (targetRoundId: string, lotteriesData: LotteryRoundGraphEntity[]) => {\n  const targetRound = lotteriesData.find((pastLottery) => pastLottery.id === targetRoundId)\n  return targetRound?.finalNumber\n}\n\nconst fetchUnclaimedUserRewards = async (\n  account: string,\n  userLotteryData: LotteryUserGraphEntity,\n  lotteriesData: LotteryRoundGraphEntity[],\n  currentLotteryId: string,\n): Promise<LotteryTicketClaimData[]> => {\n  const { rounds } = userLotteryData\n\n  // If there is no user round history - return an empty array\n  if (rounds.length === 0) {\n    return []\n  }\n\n  // If the web3 provider account doesn't equal the userLotteryData account, return an empty array - this is effectively a loading state as the user switches accounts\n  if (userLotteryData.account.toLowerCase() !== account.toLowerCase()) {\n    return []\n  }\n\n  // Filter out rounds without subgraph data (i.e. >100 rounds ago)\n  const roundsInRange = rounds.filter((round) => {\n    const lastCheckableRoundId = parseInt(currentLotteryId, 10) - MAX_LOTTERIES_REQUEST_SIZE\n    const roundId = parseInt(round.lotteryId, 10)\n    return roundId >= lastCheckableRoundId\n  })\n\n  // Filter out non-claimable rounds\n  const claimableRounds = roundsInRange.filter((round) => {\n    return round.status.toLowerCase() === LotteryStatus.CLAIMABLE\n  })\n\n  // Rounds with no tickets claimed OR rounds where a user has over 100 tickets, could have prizes\n  const roundsWithPossibleWinnings = claimableRounds.filter((round) => {\n    return !round.claimed || parseInt(round.totalTickets, 10) > 100\n  })\n\n  // Check the X  most recent rounds, where X is NUM_ROUNDS_TO_CHECK_FOR_REWARDS\n  const roundsToCheck = roundsWithPossibleWinnings.slice(0, NUM_ROUNDS_TO_CHECK_FOR_REWARDS)\n\n  if (roundsToCheck.length > 0) {\n    const idsToCheck = roundsToCheck.map((round) => round.lotteryId)\n    const userTicketData = await fetchUserTicketsForMultipleRounds(idsToCheck, account)\n    const roundsWithTickets = userTicketData.filter((roundData) => roundData?.userTickets?.length > 0)\n\n    const roundDataAndWinningTickets = roundsWithTickets.map((roundData) => {\n      return { ...roundData, finalNumber: getWinningNumbersForRound(roundData.roundId, lotteriesData) }\n    })\n\n    const winningTicketsForPastRounds = await Promise.all(\n      roundDataAndWinningTickets.map((roundData) => getWinningTickets(roundData)),\n    )\n\n    // Filter out null values (returned when no winning tickets found for past round)\n    const roundsWithWinningTickets = winningTicketsForPastRounds.filter(\n      (winningTicketData) => winningTicketData !== null,\n    )\n\n    // Filter to only rounds with unclaimed tickets\n    const roundsWithUnclaimedWinningTickets = roundsWithWinningTickets.filter(\n      (winningTicketData) => winningTicketData.ticketsWithUnclaimedRewards,\n    )\n\n    return roundsWithUnclaimedWinningTickets\n  }\n  // All rounds claimed, return empty array\n  return []\n}\n\nexport default fetchUnclaimedUserRewards\n","import React, { useEffect, useState } from 'react'\nimport { Flex, FlexProps } from '@pancakeswap/uikit'\nimport { random } from 'lodash'\nimport uniqueId from 'lodash/uniqueId'\nimport { parseRetrievedNumber } from '../helpers'\nimport { BallWithNumber } from '../svgs'\nimport { BallColor } from '../svgs/Balls'\n\ninterface WinningNumbersProps extends FlexProps {\n  number: string\n  size?: string\n  fontSize?: string\n  rotateText?: boolean\n}\n\nconst WinningNumbers: React.FC<WinningNumbersProps> = ({\n  number,\n  size = '32px',\n  fontSize = '16px',\n  rotateText,\n  ...containerProps\n}) => {\n  const [rotationValues, setRotationValues] = useState([])\n  const reversedNumber = parseRetrievedNumber(number)\n  const numAsArray = reversedNumber.split('')\n  const colors: BallColor[] = ['pink', 'lilac', 'teal', 'aqua', 'green', 'yellow']\n\n  useEffect(() => {\n    if (rotateText && numAsArray && rotationValues.length === 0) {\n      setRotationValues(numAsArray.map(() => random(-30, 30)))\n    }\n  }, [rotateText, numAsArray, rotationValues])\n\n  return (\n    <Flex justifyContent=\"space-between\" {...containerProps}>\n      {numAsArray.map((num, index) => {\n        return (\n          <BallWithNumber\n            key={uniqueId()}\n            rotationTransform={rotateText && rotationValues[index]}\n            size={size}\n            fontSize={fontSize}\n            color={colors[index]}\n            number={num}\n          />\n        )\n      })}\n    </Flex>\n  )\n}\n\nexport default WinningNumbers\n","import React from 'react'\nimport { LotteryTicket } from 'config/constants/types'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport _uniqueId from 'lodash/uniqueId'\nimport { parseRetrievedNumber } from '../helpers'\n\nconst StyledNumberWrapper = styled(Flex)`\n  position: relative;\n  padding: 4px 16px;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.background};\n  justify-content: space-between;\n`\n\nconst RewardHighlighter = styled.div<{ numberMatches: number }>`\n  z-index: 1;\n  width: ${({ numberMatches }) => `${numberMatches < 6 ? numberMatches * 17.66 : 100}%`};\n  height: 34px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  top: 0;\n  left: 0;\n  position: absolute;\n  border: 2px ${({ theme }) => theme.colors.primary} solid;\n`\n\ninterface TicketNumberProps extends LotteryTicket {\n  localId?: number\n  rewardBracket?: number\n}\n\nconst TicketNumber: React.FC<TicketNumberProps> = ({ localId, id, number, rewardBracket }) => {\n  const { t } = useTranslation()\n  const reversedNumber = parseRetrievedNumber(number)\n  const numberAsArray = reversedNumber.split('')\n  const numberMatches = rewardBracket + 1\n\n  return (\n    <Flex flexDirection=\"column\" mb=\"12px\">\n      <Flex justifyContent=\"space-between\">\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          #{localId || id}\n        </Text>\n        {rewardBracket >= 0 && (\n          <Text fontSize=\"12px\">\n            {t('Matched first')} {numberMatches}\n          </Text>\n        )}\n      </Flex>\n      <StyledNumberWrapper>\n        {rewardBracket >= 0 && <RewardHighlighter numberMatches={numberMatches} />}\n        {numberAsArray.map((digit) => (\n          <Text key={`${localId || id}-${digit}-${_uniqueId()}`} fontSize=\"16px\">\n            {digit}\n          </Text>\n        ))}\n      </StyledNumberWrapper>\n    </Flex>\n  )\n}\n\nexport default TicketNumber\n","// canvas-confetti v1.4.0 built on 2021-03-10T12:32:33.488Z\nvar module = {};\n\n// source content\n(function main(global, module, isWorker, workerSize) {\n  var canUseWorker = !!(\n    global.Worker &&\n    global.Blob &&\n    global.Promise &&\n    global.OffscreenCanvas &&\n    global.OffscreenCanvasRenderingContext2D &&\n    global.HTMLCanvasElement &&\n    global.HTMLCanvasElement.prototype.transferControlToOffscreen &&\n    global.URL &&\n    global.URL.createObjectURL);\n\n  function noop() {}\n\n  // create a promise if it exists, otherwise, just\n  // call the function directly\n  function promise(func) {\n    var ModulePromise = module.exports.Promise;\n    var Prom = ModulePromise !== void 0 ? ModulePromise : global.Promise;\n\n    if (typeof Prom === 'function') {\n      return new Prom(func);\n    }\n\n    func(noop, noop);\n\n    return null;\n  }\n\n  var raf = (function () {\n    var TIME = Math.floor(1000 / 60);\n    var frame, cancel;\n    var frames = {};\n    var lastFrameTime = 0;\n\n    if (typeof requestAnimationFrame === 'function' && typeof cancelAnimationFrame === 'function') {\n      frame = function (cb) {\n        var id = Math.random();\n\n        frames[id] = requestAnimationFrame(function onFrame(time) {\n          if (lastFrameTime === time || lastFrameTime + TIME - 1 < time) {\n            lastFrameTime = time;\n            delete frames[id];\n\n            cb();\n          } else {\n            frames[id] = requestAnimationFrame(onFrame);\n          }\n        });\n\n        return id;\n      };\n      cancel = function (id) {\n        if (frames[id]) {\n          cancelAnimationFrame(frames[id]);\n        }\n      };\n    } else {\n      frame = function (cb) {\n        return setTimeout(cb, TIME);\n      };\n      cancel = function (timer) {\n        return clearTimeout(timer);\n      };\n    }\n\n    return { frame: frame, cancel: cancel };\n  }());\n\n  var getWorker = (function () {\n    var worker;\n    var prom;\n    var resolves = {};\n\n    function decorate(worker) {\n      function execute(options, callback) {\n        worker.postMessage({ options: options || {}, callback: callback });\n      }\n      worker.init = function initWorker(canvas) {\n        var offscreen = canvas.transferControlToOffscreen();\n        worker.postMessage({ canvas: offscreen }, [offscreen]);\n      };\n\n      worker.fire = function fireWorker(options, size, done) {\n        if (prom) {\n          execute(options, null);\n          return prom;\n        }\n\n        var id = Math.random().toString(36).slice(2);\n\n        prom = promise(function (resolve) {\n          function workerDone(msg) {\n            if (msg.data.callback !== id) {\n              return;\n            }\n\n            delete resolves[id];\n            worker.removeEventListener('message', workerDone);\n\n            prom = null;\n            done();\n            resolve();\n          }\n\n          worker.addEventListener('message', workerDone);\n          execute(options, id);\n\n          resolves[id] = workerDone.bind(null, { data: { callback: id }});\n        });\n\n        return prom;\n      };\n\n      worker.reset = function resetWorker() {\n        worker.postMessage({ reset: true });\n\n        for (var id in resolves) {\n          resolves[id]();\n          delete resolves[id];\n        }\n      };\n    }\n\n    return function () {\n      if (worker) {\n        return worker;\n      }\n\n      if (!isWorker && canUseWorker) {\n        var code = [\n          'var CONFETTI, SIZE = {}, module = {};',\n          '(' + main.toString() + ')(this, module, true, SIZE);',\n          'onmessage = function(msg) {',\n          '  if (msg.data.options) {',\n          '    CONFETTI(msg.data.options).then(function () {',\n          '      if (msg.data.callback) {',\n          '        postMessage({ callback: msg.data.callback });',\n          '      }',\n          '    });',\n          '  } else if (msg.data.reset) {',\n          '    CONFETTI.reset();',\n          '  } else if (msg.data.resize) {',\n          '    SIZE.width = msg.data.resize.width;',\n          '    SIZE.height = msg.data.resize.height;',\n          '  } else if (msg.data.canvas) {',\n          '    SIZE.width = msg.data.canvas.width;',\n          '    SIZE.height = msg.data.canvas.height;',\n          '    CONFETTI = module.exports.create(msg.data.canvas);',\n          '  }',\n          '}',\n        ].join('\\n');\n        try {\n          worker = new Worker(URL.createObjectURL(new Blob([code])));\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          typeof console !== undefined && typeof console.warn === 'function' ? console.warn('🎊 Could not load worker', e) : null;\n\n          return null;\n        }\n\n        decorate(worker);\n      }\n\n      return worker;\n    };\n  })();\n\n  var defaults = {\n    particleCount: 50,\n    angle: 90,\n    spread: 45,\n    startVelocity: 45,\n    decay: 0.9,\n    gravity: 1,\n    drift: 0,\n    ticks: 200,\n    x: 0.5,\n    y: 0.5,\n    shapes: ['square', 'circle'],\n    zIndex: 100,\n    colors: [\n      '#26ccff',\n      '#a25afd',\n      '#ff5e7e',\n      '#88ff5a',\n      '#fcff42',\n      '#ffa62d',\n      '#ff36ff'\n    ],\n    // probably should be true, but back-compat\n    disableForReducedMotion: false,\n    scalar: 1\n  };\n\n  function convert(val, transform) {\n    return transform ? transform(val) : val;\n  }\n\n  function isOk(val) {\n    return !(val === null || val === undefined);\n  }\n\n  function prop(options, name, transform) {\n    return convert(\n      options && isOk(options[name]) ? options[name] : defaults[name],\n      transform\n    );\n  }\n\n  function onlyPositiveInt(number){\n    return number < 0 ? 0 : Math.floor(number);\n  }\n\n  function randomInt(min, max) {\n    // [min, max)\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  function toDecimal(str) {\n    return parseInt(str, 16);\n  }\n\n  function colorsToRgb(colors) {\n    return colors.map(hexToRgb);\n  }\n\n  function hexToRgb(str) {\n    var val = String(str).replace(/[^0-9a-f]/gi, '');\n\n    if (val.length < 6) {\n        val = val[0]+val[0]+val[1]+val[1]+val[2]+val[2];\n    }\n\n    return {\n      r: toDecimal(val.substring(0,2)),\n      g: toDecimal(val.substring(2,4)),\n      b: toDecimal(val.substring(4,6))\n    };\n  }\n\n  function getOrigin(options) {\n    var origin = prop(options, 'origin', Object);\n    origin.x = prop(origin, 'x', Number);\n    origin.y = prop(origin, 'y', Number);\n\n    return origin;\n  }\n\n  function setCanvasWindowSize(canvas) {\n    canvas.width = document.documentElement.clientWidth;\n    canvas.height = document.documentElement.clientHeight;\n  }\n\n  function setCanvasRectSize(canvas) {\n    var rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n  }\n\n  function getCanvas(zIndex) {\n    var canvas = document.createElement('canvas');\n\n    canvas.style.position = 'fixed';\n    canvas.style.top = '0px';\n    canvas.style.left = '0px';\n    canvas.style.pointerEvents = 'none';\n    canvas.style.zIndex = zIndex;\n\n    return canvas;\n  }\n\n  function ellipse(context, x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n    context.save();\n    context.translate(x, y);\n    context.rotate(rotation);\n    context.scale(radiusX, radiusY);\n    context.arc(0, 0, 1, startAngle, endAngle, antiClockwise);\n    context.restore();\n  }\n\n  function randomPhysics(opts) {\n    var radAngle = opts.angle * (Math.PI / 180);\n    var radSpread = opts.spread * (Math.PI / 180);\n\n    return {\n      x: opts.x,\n      y: opts.y,\n      wobble: Math.random() * 10,\n      velocity: (opts.startVelocity * 0.5) + (Math.random() * opts.startVelocity),\n      angle2D: -radAngle + ((0.5 * radSpread) - (Math.random() * radSpread)),\n      tiltAngle: Math.random() * Math.PI,\n      color: opts.color,\n      shape: opts.shape,\n      tick: 0,\n      totalTicks: opts.ticks,\n      decay: opts.decay,\n      drift: opts.drift,\n      random: Math.random() + 5,\n      tiltSin: 0,\n      tiltCos: 0,\n      wobbleX: 0,\n      wobbleY: 0,\n      gravity: opts.gravity * 3,\n      ovalScalar: 0.6,\n      scalar: opts.scalar\n    };\n  }\n\n  function updateFetti(context, fetti) {\n    fetti.x += Math.cos(fetti.angle2D) * fetti.velocity + fetti.drift;\n    fetti.y += Math.sin(fetti.angle2D) * fetti.velocity + fetti.gravity;\n    fetti.wobble += 0.1;\n    fetti.velocity *= fetti.decay;\n    fetti.tiltAngle += 0.1;\n    fetti.tiltSin = Math.sin(fetti.tiltAngle);\n    fetti.tiltCos = Math.cos(fetti.tiltAngle);\n    fetti.random = Math.random() + 5;\n    fetti.wobbleX = fetti.x + ((10 * fetti.scalar) * Math.cos(fetti.wobble));\n    fetti.wobbleY = fetti.y + ((10 * fetti.scalar) * Math.sin(fetti.wobble));\n\n    var progress = (fetti.tick++) / fetti.totalTicks;\n\n    var x1 = fetti.x + (fetti.random * fetti.tiltCos);\n    var y1 = fetti.y + (fetti.random * fetti.tiltSin);\n    var x2 = fetti.wobbleX + (fetti.random * fetti.tiltCos);\n    var y2 = fetti.wobbleY + (fetti.random * fetti.tiltSin);\n\n    context.fillStyle = 'rgba(' + fetti.color.r + ', ' + fetti.color.g + ', ' + fetti.color.b + ', ' + (1 - progress) + ')';\n    context.beginPath();\n\n    if (fetti.shape === 'circle') {\n      context.ellipse ?\n        context.ellipse(fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI) :\n        ellipse(context, fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI);\n    } else {\n      context.moveTo(Math.floor(fetti.x), Math.floor(fetti.y));\n      context.lineTo(Math.floor(fetti.wobbleX), Math.floor(y1));\n      context.lineTo(Math.floor(x2), Math.floor(y2));\n      context.lineTo(Math.floor(x1), Math.floor(fetti.wobbleY));\n    }\n\n    context.closePath();\n    context.fill();\n\n    return fetti.tick < fetti.totalTicks;\n  }\n\n  function animate(canvas, fettis, resizer, size, done) {\n    var animatingFettis = fettis.slice();\n    var context = canvas.getContext('2d');\n    var animationFrame;\n    var destroy;\n\n    var prom = promise(function (resolve) {\n      function onDone() {\n        animationFrame = destroy = null;\n\n        context.clearRect(0, 0, size.width, size.height);\n\n        done();\n        resolve();\n      }\n\n      function update() {\n        if (isWorker && !(size.width === workerSize.width && size.height === workerSize.height)) {\n          size.width = canvas.width = workerSize.width;\n          size.height = canvas.height = workerSize.height;\n        }\n\n        if (!size.width && !size.height) {\n          resizer(canvas);\n          size.width = canvas.width;\n          size.height = canvas.height;\n        }\n\n        context.clearRect(0, 0, size.width, size.height);\n\n        animatingFettis = animatingFettis.filter(function (fetti) {\n          return updateFetti(context, fetti);\n        });\n\n        if (animatingFettis.length) {\n          animationFrame = raf.frame(update);\n        } else {\n          onDone();\n        }\n      }\n\n      animationFrame = raf.frame(update);\n      destroy = onDone;\n    });\n\n    return {\n      addFettis: function (fettis) {\n        animatingFettis = animatingFettis.concat(fettis);\n\n        return prom;\n      },\n      canvas: canvas,\n      promise: prom,\n      reset: function () {\n        if (animationFrame) {\n          raf.cancel(animationFrame);\n        }\n\n        if (destroy) {\n          destroy();\n        }\n      }\n    };\n  }\n\n  function confettiCannon(canvas, globalOpts) {\n    var isLibCanvas = !canvas;\n    var allowResize = !!prop(globalOpts || {}, 'resize');\n    var globalDisableForReducedMotion = prop(globalOpts, 'disableForReducedMotion', Boolean);\n    var shouldUseWorker = canUseWorker && !!prop(globalOpts || {}, 'useWorker');\n    var worker = shouldUseWorker ? getWorker() : null;\n    var resizer = isLibCanvas ? setCanvasWindowSize : setCanvasRectSize;\n    var initialized = (canvas && worker) ? !!canvas.__confetti_initialized : false;\n    var preferLessMotion = typeof matchMedia === 'function' && matchMedia('(prefers-reduced-motion)').matches;\n    var animationObj;\n\n    function fireLocal(options, size, done) {\n      var particleCount = prop(options, 'particleCount', onlyPositiveInt);\n      var angle = prop(options, 'angle', Number);\n      var spread = prop(options, 'spread', Number);\n      var startVelocity = prop(options, 'startVelocity', Number);\n      var decay = prop(options, 'decay', Number);\n      var gravity = prop(options, 'gravity', Number);\n      var drift = prop(options, 'drift', Number);\n      var colors = prop(options, 'colors', colorsToRgb);\n      var ticks = prop(options, 'ticks', Number);\n      var shapes = prop(options, 'shapes');\n      var scalar = prop(options, 'scalar');\n      var origin = getOrigin(options);\n\n      var temp = particleCount;\n      var fettis = [];\n\n      var startX = canvas.width * origin.x;\n      var startY = canvas.height * origin.y;\n\n      while (temp--) {\n        fettis.push(\n          randomPhysics({\n            x: startX,\n            y: startY,\n            angle: angle,\n            spread: spread,\n            startVelocity: startVelocity,\n            color: colors[temp % colors.length],\n            shape: shapes[randomInt(0, shapes.length)],\n            ticks: ticks,\n            decay: decay,\n            gravity: gravity,\n            drift: drift,\n            scalar: scalar\n          })\n        );\n      }\n\n      // if we have a previous canvas already animating,\n      // add to it\n      if (animationObj) {\n        return animationObj.addFettis(fettis);\n      }\n\n      animationObj = animate(canvas, fettis, resizer, size , done);\n\n      return animationObj.promise;\n    }\n\n    function fire(options) {\n      var disableForReducedMotion = globalDisableForReducedMotion || prop(options, 'disableForReducedMotion', Boolean);\n      var zIndex = prop(options, 'zIndex', Number);\n\n      if (disableForReducedMotion && preferLessMotion) {\n        return promise(function (resolve) {\n          resolve();\n        });\n      }\n\n      if (isLibCanvas && animationObj) {\n        // use existing canvas from in-progress animation\n        canvas = animationObj.canvas;\n      } else if (isLibCanvas && !canvas) {\n        // create and initialize a new canvas\n        canvas = getCanvas(zIndex);\n        document.body.appendChild(canvas);\n      }\n\n      if (allowResize && !initialized) {\n        // initialize the size of a user-supplied canvas\n        resizer(canvas);\n      }\n\n      var size = {\n        width: canvas.width,\n        height: canvas.height\n      };\n\n      if (worker && !initialized) {\n        worker.init(canvas);\n      }\n\n      initialized = true;\n\n      if (worker) {\n        canvas.__confetti_initialized = true;\n      }\n\n      function onResize() {\n        if (worker) {\n          // TODO this really shouldn't be immediate, because it is expensive\n          var obj = {\n            getBoundingClientRect: function () {\n              if (!isLibCanvas) {\n                return canvas.getBoundingClientRect();\n              }\n            }\n          };\n\n          resizer(obj);\n\n          worker.postMessage({\n            resize: {\n              width: obj.width,\n              height: obj.height\n            }\n          });\n          return;\n        }\n\n        // don't actually query the size here, since this\n        // can execute frequently and rapidly\n        size.width = size.height = null;\n      }\n\n      function done() {\n        animationObj = null;\n\n        if (allowResize) {\n          global.removeEventListener('resize', onResize);\n        }\n\n        if (isLibCanvas && canvas) {\n          document.body.removeChild(canvas);\n          canvas = null;\n          initialized = false;\n        }\n      }\n\n      if (allowResize) {\n        global.addEventListener('resize', onResize, false);\n      }\n\n      if (worker) {\n        return worker.fire(options, size, done);\n      }\n\n      return fireLocal(options, size, done);\n    }\n\n    fire.reset = function () {\n      if (worker) {\n        worker.reset();\n      }\n\n      if (animationObj) {\n        animationObj.reset();\n      }\n    };\n\n    return fire;\n  }\n\n  module.exports = confettiCannon(null, { useWorker: true, resize: true });\n  module.exports.create = confettiCannon;\n}((function () {\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  return this || {};\n})(), module, false));\n\n// end source content\n\nexport default module.exports;\nexport var create = module.exports.create;\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useGetLotteriesGraphData, useGetUserLotteriesGraphData, useLottery } from 'state/lottery/hooks'\nimport fetchUnclaimedUserRewards from 'state/lottery/fetchUnclaimedUserRewards'\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  IN_PROGRESS = 'in-progress',\n  SUCCESS = 'success',\n}\n\nconst useGetUnclaimedRewards = () => {\n  const { account } = useWeb3React()\n  const { isTransitioning, currentLotteryId } = useLottery()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const lotteriesData = useGetLotteriesGraphData()\n  const [unclaimedRewards, setUnclaimedRewards] = useState([])\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n\n  useEffect(() => {\n    // Reset on account change and round transition\n    setFetchStatus(FetchStatus.NOT_FETCHED)\n  }, [account, isTransitioning])\n\n  const fetchAllRewards = async () => {\n    setFetchStatus(FetchStatus.IN_PROGRESS)\n    const unclaimedRewardsResponse = await fetchUnclaimedUserRewards(\n      account,\n      userLotteryData,\n      lotteriesData,\n      currentLotteryId,\n    )\n    setUnclaimedRewards(unclaimedRewardsResponse)\n    setFetchStatus(FetchStatus.SUCCESS)\n  }\n\n  return { fetchAllRewards, unclaimedRewards, fetchStatus }\n}\n\nexport default useGetUnclaimedRewards\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Flex, Button, Text, AutoRenewIcon, PresentWonIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryTicket, LotteryTicketClaimData } from 'config/constants/types'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { callWithEstimateGas } from 'utils/calls'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useLottery } from 'state/lottery/hooks'\nimport { fetchUserLotteries } from 'state/lottery'\nimport { useGasPrice } from 'state/user/hooks'\nimport { useAppDispatch } from 'state'\nimport Balance from 'components/Balance'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useToast from 'hooks/useToast'\nimport { useLotteryV2Contract } from 'hooks/useContract'\n\ninterface ClaimInnerProps {\n  roundsToClaim: LotteryTicketClaimData[]\n  onSuccess?: () => void\n}\n\nconst ClaimInnerContainer: React.FC<ClaimInnerProps> = ({ onSuccess, roundsToClaim }) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { maxNumberTicketsPerBuyOrClaim, currentLotteryId } = useLottery()\n  const gasPrice = useGasPrice()\n  const { toastSuccess, toastError } = useToast()\n  const [activeClaimIndex, setActiveClaimIndex] = useState(0)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [pendingBatchClaims, setPendingBatchClaims] = useState(\n    Math.ceil(\n      roundsToClaim[activeClaimIndex].ticketsWithUnclaimedRewards.length / maxNumberTicketsPerBuyOrClaim.toNumber(),\n    ),\n  )\n  const lotteryContract = useLotteryV2Contract()\n  const activeClaimData = roundsToClaim[activeClaimIndex]\n\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeReward = activeClaimData.cakeTotal\n  const dollarReward = cakeReward.times(cakePriceBusd)\n  const rewardAsBalance = getBalanceAmount(cakeReward).toNumber()\n  const dollarRewardAsBalance = getBalanceAmount(dollarReward).toNumber()\n\n  const parseUnclaimedTicketDataForClaimCall = (ticketsWithUnclaimedRewards: LotteryTicket[], lotteryId: string) => {\n    const ticketIds = ticketsWithUnclaimedRewards.map((ticket) => {\n      return ticket.id\n    })\n    const brackets = ticketsWithUnclaimedRewards.map((ticket) => {\n      return ticket.rewardBracket\n    })\n    return { lotteryId, ticketIds, brackets }\n  }\n\n  const claimTicketsCallData = parseUnclaimedTicketDataForClaimCall(\n    activeClaimData.ticketsWithUnclaimedRewards,\n    activeClaimData.roundId,\n  )\n\n  const shouldBatchRequest = maxNumberTicketsPerBuyOrClaim.lt(claimTicketsCallData.ticketIds.length)\n\n  const handleProgressToNextClaim = () => {\n    if (roundsToClaim.length > activeClaimIndex + 1) {\n      // If there are still rounds to claim, move onto the next claim\n      setActiveClaimIndex(activeClaimIndex + 1)\n      dispatch(fetchUserLotteries({ account, currentLotteryId }))\n    } else {\n      onSuccess()\n    }\n  }\n\n  const getTicketBatches = (ticketIds: string[], brackets: number[]): { ticketIds: string[]; brackets: number[] }[] => {\n    const requests = []\n    const maxAsNumber = maxNumberTicketsPerBuyOrClaim.toNumber()\n\n    for (let i = 0; i < ticketIds.length; i += maxAsNumber) {\n      const ticketIdsSlice = ticketIds.slice(i, maxAsNumber + i)\n      const bracketsSlice = brackets.slice(i, maxAsNumber + i)\n      requests.push({ ticketIds: ticketIdsSlice, brackets: bracketsSlice })\n    }\n\n    return requests\n  }\n\n  const handleClaim = async () => {\n    const { lotteryId, ticketIds, brackets } = claimTicketsCallData\n    setPendingTx(true)\n    try {\n      const tx = await callWithEstimateGas(lotteryContract, 'claimTickets', [lotteryId, ticketIds, brackets], {\n        gasPrice,\n      })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Prizes Collected!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your MByte prizes for round %lotteryId% have been sent to your wallet', { lotteryId })}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        handleProgressToNextClaim()\n      }\n    } catch (error) {\n      console.error(error)\n      toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n      setPendingTx(false)\n    }\n  }\n\n  const handleBatchClaim = async () => {\n    const { lotteryId, ticketIds, brackets } = claimTicketsCallData\n    const ticketBatches = getTicketBatches(ticketIds, brackets)\n    const transactionsToFire = ticketBatches.length\n    const receipts = []\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const ticketBatch of ticketBatches) {\n      try {\n        /* eslint-disable no-await-in-loop */\n        const tx = await callWithEstimateGas(\n          lotteryContract,\n          'claimTickets',\n          [lotteryId, ticketBatch.ticketIds, ticketBatch.brackets],\n          { gasPrice },\n        )\n        const receipt = await tx.wait()\n        /* eslint-enable no-await-in-loop */\n        if (receipt.status) {\n          // One transaction within batch has succeeded\n          receipts.push(receipt)\n          setPendingBatchClaims(transactionsToFire - receipts.length)\n\n          // More transactions are to be done within the batch. Issue toast to give user feedback.\n          if (receipts.length !== transactionsToFire) {\n            toastSuccess(\n              t('Prizes Collected!'),\n              <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n                {t(\n                  'Claim %claimNum% of %claimTotal% for round %lotteryId% was successful. Please confirm the next transaction',\n                  {\n                    claimNum: receipts.length,\n                    claimTotal: transactionsToFire,\n                    lotteryId,\n                  },\n                )}\n              </ToastDescriptionWithTx>,\n            )\n          }\n        }\n      } catch (error) {\n        console.error(error)\n        setPendingTx(false)\n        toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n        break\n      }\n    }\n\n    // Batch is finished\n    if (receipts.length === transactionsToFire) {\n      setPendingTx(false)\n      toastSuccess(\n        t('Prizes Collected!'),\n        t('Your MByte prizes for round %lotteryId% have been sent to your wallet', { lotteryId }),\n      )\n      handleProgressToNextClaim()\n    }\n  }\n\n  return (\n    <>\n      <Flex flexDirection=\"column\">\n        <Text mb=\"4px\" textAlign={['center', null, 'left']}>\n          {t('You won')}\n        </Text>\n        <Flex\n          alignItems={['flex-start', null, 'center']}\n          justifyContent={['flex-start', null, 'space-between']}\n          flexDirection={['column', null, 'row']}\n        >\n          <Balance\n            textAlign={['center', null, 'left']}\n            lineHeight=\"1.1\"\n            value={rewardAsBalance}\n            fontSize=\"44px\"\n            bold\n            color=\"secondary\"\n            unit=\" MByte!\"\n          />\n          <PresentWonIcon ml={['0', null, '12px']} width=\"64px\" />\n        </Flex>\n        <Balance\n          mt={['12px', null, '0']}\n          textAlign={['center', null, 'left']}\n          value={dollarRewardAsBalance}\n          fontSize=\"12px\"\n          color=\"textSubtle\"\n          unit=\" USD\"\n          prefix=\"~\"\n        />\n      </Flex>\n\n      <Flex alignItems=\"center\" justifyContent=\"center\">\n        <Text mt=\"8px\" fontSize=\"12px\" color=\"textSubtle\">\n          {t('Round')} #{activeClaimData.roundId}\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"center\">\n        <Button\n          isLoading={pendingTx}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          mt=\"20px\"\n          width=\"100%\"\n          onClick={() => (shouldBatchRequest ? handleBatchClaim() : handleClaim())}\n        >\n          {pendingTx ? t('Claiming') : t('Claim')} {pendingBatchClaims > 1 ? `(${pendingBatchClaims})` : ''}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default ClaimInnerContainer\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Heading, ModalContainer, ModalHeader, ModalTitle, ModalBody, ModalCloseButton } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { delay } from 'lodash'\nimport confetti from 'canvas-confetti'\nimport { LotteryTicketClaimData } from 'config/constants/types'\nimport { useAppDispatch } from 'state'\nimport { useLottery } from 'state/lottery/hooks'\nimport { fetchUserLotteries } from 'state/lottery'\nimport ClaimPrizesInner from './ClaimPrizesInner'\n\nconst StyledModal = styled(ModalContainer)`\n  position: relative;\n  overflow: visible;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 380px;\n  }\n`\n\nconst StyledModalHeader = styled(ModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.cardHeader};\n  border-top-right-radius: 32px;\n  border-top-left-radius: 32px;\n`\n\nconst BunnyDecoration = styled.div`\n  position: absolute;\n  top: -116px; // line up bunny at the top of the modal\n  left: 0px;\n  text-align: center;\n  width: 100%;\n`\n\nconst showConfetti = () => {\n  confetti({\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\ninterface ClaimPrizesModalModalProps {\n  roundsToClaim: LotteryTicketClaimData[]\n  onDismiss?: () => void\n}\n\nconst ClaimPrizesModal: React.FC<ClaimPrizesModalModalProps> = ({ onDismiss, roundsToClaim }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { currentLotteryId } = useLottery()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  return (\n    <StyledModal minWidth=\"280px\">\n      <BunnyDecoration>\n        <img src=\"/images/decorations/prize-bunny.png\" alt=\"bunny decoration\" height=\"124px\" width=\"168px\" />\n      </BunnyDecoration>\n      <StyledModalHeader>\n        <ModalTitle>\n          <Heading>{t('Collect Winnings')}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </StyledModalHeader>\n      <ModalBody p=\"24px\">\n        <ClaimPrizesInner\n          onSuccess={() => {\n            dispatch(fetchUserLotteries({ account, currentLotteryId }))\n            onDismiss()\n          }}\n          roundsToClaim={roundsToClaim}\n        />\n      </ModalBody>\n    </StyledModal>\n  )\n}\n\nexport default ClaimPrizesModal\n","import React, { useEffect, useState } from 'react'\nimport {\n  Box,\n  Text,\n  Flex,\n  Button,\n  Skeleton,\n  Ticket,\n  PresentWonIcon,\n  TooltipText,\n  InfoIcon,\n  useTooltip,\n  useModal,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { LotteryTicket, LotteryTicketClaimData } from 'config/constants/types'\nimport { fetchLottery } from 'state/lottery/helpers'\nimport { getWinningTickets } from 'state/lottery/fetchUnclaimedUserRewards'\nimport { fetchUserTicketsForOneRound } from 'state/lottery/getUserTicketsData'\nimport { LotteryRound } from 'state/types'\nimport { useGetUserLotteryGraphRoundById } from 'state/lottery/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport WinningNumbers from '../WinningNumbers'\nimport { processLotteryResponse } from '../../helpers'\nimport TicketNumber from '../TicketNumber'\nimport ClaimPrizesModal from '../ClaimPrizesModal'\n\nconst TopBox = styled(Flex)`\n  flex-direction: column;\n  margin: -24px;\n  padding: 24px;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst ScrollBox = styled(Box)`\n  margin-right: -20px;\n  padding-right: 24px;\n  max-height: 300px;\n  overflow-y: scroll;\n  margin-top: 24px;\n`\n\nconst TicketSkeleton = () => {\n  return (\n    <>\n      <Skeleton width=\"32px\" height=\"12px\" mt=\"2px\" mb=\"4px\" />\n      <Skeleton width=\"100%\" height=\"34px\" mb=\"12px\" />\n    </>\n  )\n}\n\nconst PreviousRoundTicketsInner: React.FC<{ roundId: string }> = ({ roundId }) => {\n  const [lotteryInfo, setLotteryInfo] = useState<LotteryRound>(null)\n  const [allUserTickets, setAllUserTickets] = useState<LotteryTicket[]>(null)\n  const [userWinningTickets, setUserWinningTickets] = useState<{\n    allWinningTickets: LotteryTicket[]\n    ticketsWithUnclaimedRewards: LotteryTicket[]\n    isFetched: boolean\n    claimData: LotteryTicketClaimData\n  }>({ allWinningTickets: null, ticketsWithUnclaimedRewards: null, isFetched: false, claimData: null })\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { account } = useWeb3React()\n  const { totalTickets } = useGetUserLotteryGraphRoundById(roundId)\n  const [onPresentClaimModal] = useModal(<ClaimPrizesModal roundsToClaim={[userWinningTickets.claimData]} />, false)\n\n  const TooltipComponent = () => (\n    <>\n      <Text mb=\"16px\">\n        {t('Tickets must match the winning number in the exact same order, starting from the first digit.')}\n      </Text>\n      <Text mb=\"16px\">{t('If the winning number is “123456”:')}</Text>\n      <Text mb=\"4px\">{t('“120000” matches the first 2 digits.')}</Text>\n      <Text>\n        {t('“000006” matches the last digit, but since the first five digits are wrong, it doesn’t win any prizes.')}\n      </Text>\n    </>\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  useEffect(() => {\n    const addWinningTicketInfoToAllTickets = (\n      _allTickets: LotteryTicket[],\n      _allWinningTickets: LotteryTicket[],\n    ): LotteryTicket[] => {\n      const allTicketsWithWinningTickets = _allTickets.map((ticket) => {\n        const winningTicketEquivalent = _allWinningTickets.find((winningTicket) => winningTicket.id === ticket.id)\n        if (winningTicketEquivalent) {\n          return winningTicketEquivalent\n        }\n        return ticket\n      })\n      return allTicketsWithWinningTickets\n    }\n\n    const sortTicketsByWinningBracket = (tickets) => {\n      return tickets.sort((ticketA, ticketB) => {\n        const rewardBracket1 = ticketA.rewardBracket === undefined ? 0 : ticketA.rewardBracket + 1\n        const rewardBracket2 = ticketB.rewardBracket === undefined ? 0 : ticketB.rewardBracket + 1\n        return rewardBracket2 - rewardBracket1\n      })\n    }\n\n    const fetchData = async () => {\n      const userTickets = await fetchUserTicketsForOneRound(account, roundId)\n      const lotteryData = await fetchLottery(roundId)\n      const processedLotteryData = processLotteryResponse(lotteryData)\n      const winningTickets = await getWinningTickets({\n        roundId,\n        userTickets,\n        finalNumber: processedLotteryData.finalNumber.toString(),\n      })\n\n      setUserWinningTickets({\n        isFetched: true,\n        allWinningTickets: winningTickets?.allWinningTickets,\n        ticketsWithUnclaimedRewards: winningTickets?.ticketsWithUnclaimedRewards,\n        claimData: winningTickets,\n      })\n      setLotteryInfo(processedLotteryData)\n\n      // If the user has some winning tickets - modify the userTickets response to include that data\n      if (winningTickets?.allWinningTickets) {\n        const allTicketsWithWinningTicketInfo = addWinningTicketInfoToAllTickets(\n          userTickets,\n          winningTickets.allWinningTickets,\n        )\n        const ticketsSortedByWinners = sortTicketsByWinningBracket(allTicketsWithWinningTicketInfo)\n        setAllUserTickets(ticketsSortedByWinners)\n      } else {\n        setAllUserTickets(userTickets)\n      }\n    }\n\n    fetchData()\n  }, [roundId, account, totalTickets])\n\n  const getFooter = () => {\n    if (userWinningTickets?.ticketsWithUnclaimedRewards?.length > 0) {\n      return (\n        <Button onClick={onPresentClaimModal} mt=\"24px\" width=\"100%\">\n          {t('Collect Prizes')}\n        </Button>\n      )\n    }\n    if (!userWinningTickets.allWinningTickets) {\n      return (\n        <div ref={targetRef}>\n          <Flex alignItems=\"center\" justifyContent=\"center\" mt=\"20px\">\n            <InfoIcon height=\"20px\" width=\"20px\" color=\"textSubtle\" mr=\"8px\" />\n            <TooltipText color=\"textSubtle\">{t(\"Why didn't I win?\")}</TooltipText>\n          </Flex>\n        </div>\n      )\n    }\n    return null\n  }\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TopBox>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" mb=\"4px\">\n          {t('Winning number')}\n        </Text>\n        {lotteryInfo?.finalNumber ? (\n          <WinningNumbers number={lotteryInfo.finalNumber.toString()} />\n        ) : (\n          <Skeleton width=\"230px\" height=\"34px\" />\n        )}\n      </TopBox>\n      <ScrollBox>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" my=\"16px\">\n          {t('Your tickets')}\n        </Text>\n        <Flex mb=\"8px\" justifyContent=\"space-between\">\n          <Flex>\n            <Ticket width=\"24px\" height=\"24px\" mr=\"8px\" />\n            <Text bold color=\"text\">\n              {t('Total tickets')}:\n            </Text>\n          </Flex>\n          <Text bold color=\"text\">\n            {allUserTickets ? allUserTickets.length : <Skeleton width=\"56px\" height=\"24px\" />}\n          </Text>\n        </Flex>\n        <Flex mb=\"24px\" justifyContent=\"space-between\">\n          <Flex>\n            <PresentWonIcon width=\"24px\" height=\"24px\" mr=\"8px\" />\n            <Text bold color=\"text\">\n              {t('Winning tickets')}:\n            </Text>\n          </Flex>\n          <Text bold color=\"text\">\n            {userWinningTickets.isFetched ? (\n              userWinningTickets?.allWinningTickets?.length || '0'\n            ) : (\n              <Skeleton width=\"40px\" height=\"24px\" />\n            )}\n          </Text>\n        </Flex>\n        {allUserTickets ? (\n          allUserTickets.map((ticket) => {\n            return (\n              <TicketNumber\n                key={ticket.id}\n                id={ticket.id}\n                number={ticket.number}\n                rewardBracket={ticket.rewardBracket}\n                status={ticket.status}\n              />\n            )\n          })\n        ) : (\n          <>\n            <TicketSkeleton />\n            <TicketSkeleton />\n            <TicketSkeleton />\n            <TicketSkeleton />\n          </>\n        )}\n      </ScrollBox>\n      <Flex borderTop={`1px solid ${theme.colors.cardBorder}`} alignItems=\"center\" justifyContent=\"center\">\n        {userWinningTickets.isFetched && getFooter()}\n      </Flex>\n    </>\n  )\n}\n\nexport default PreviousRoundTicketsInner\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useLottery } from 'state/lottery/hooks'\nimport useTheme from 'hooks/useTheme'\nimport TicketNumber from '../TicketNumber'\nimport BuyTicketsButton from '../BuyTicketsButton'\n\nconst ScrollBox = styled(Box)`\n  max-height: 300px;\n  overflow-y: scroll;\n  margin-left: -24px;\n  margin-right: -24px;\n  padding-left: 24px;\n  padding-right: 20px;\n`\n\nconst CurrentRoundTicketsInner = () => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const {\n    isTransitioning,\n    currentRound: { status, userTickets },\n  } = useLottery()\n  const ticketBuyIsDisabled = status !== LotteryStatus.OPEN || isTransitioning\n\n  return (\n    <>\n      <Flex flexDirection=\"column\">\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" mb=\"16px\">\n          {t('Your tickets')}\n        </Text>\n        <ScrollBox>\n          {userTickets.tickets.map((ticket, index) => {\n            return (\n              <TicketNumber\n                key={ticket.id}\n                localId={index + 1}\n                id={ticket.id}\n                number={ticket.number}\n                status={ticket.status}\n              />\n            )\n          })}\n        </ScrollBox>\n      </Flex>\n      <Flex borderTop={`1px solid ${theme.colors.cardBorder}`} alignItems=\"center\" justifyContent=\"center\">\n        <BuyTicketsButton disabled={ticketBuyIsDisabled} mt=\"24px\" width=\"100%\" />\n      </Flex>\n    </>\n  )\n}\n\nexport default CurrentRoundTicketsInner\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useLottery } from 'state/lottery/hooks'\nimport useTheme from 'hooks/useTheme'\nimport PreviousRoundTicketsInner from './PreviousRoundTicketsInner'\nimport CurrentRoundTicketsInner from './CurrentRoundTicketsInner'\n\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n`\n\ninterface ViewTicketsModalProps {\n  roundId: string\n  roundStatus?: LotteryStatus\n  onDismiss?: () => void\n}\n\nconst ViewTicketsModal: React.FC<ViewTicketsModalProps> = ({ onDismiss, roundId, roundStatus }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { currentLotteryId } = useLottery()\n  const isPreviousRound = roundStatus?.toLowerCase() === LotteryStatus.CLAIMABLE || roundId !== currentLotteryId\n\n  return (\n    <StyledModal\n      title={`${t('Round')} ${roundId}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isPreviousRound ? <PreviousRoundTicketsInner roundId={roundId} /> : <CurrentRoundTicketsInner />}\n    </StyledModal>\n  )\n}\n\nexport default ViewTicketsModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Balance from 'components/Balance'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface RewardBracketDetailProps {\n  cakeAmount: BigNumber\n  rewardBracket?: number\n  numberWinners?: string\n  isBurn?: boolean\n  isHistoricRound?: boolean\n  isLoading?: boolean\n}\n\nconst RewardBracketDetail: React.FC<RewardBracketDetailProps> = ({\n  rewardBracket,\n  cakeAmount,\n  numberWinners,\n  isHistoricRound,\n  isBurn,\n  isLoading,\n}) => {\n  const { t } = useTranslation()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const getRewardText = () => {\n    const numberMatch = rewardBracket + 1\n    if (isBurn) {\n      return t('Burn')\n    }\n    if (rewardBracket === 5) {\n      return t('Match all %numberMatch%', { numberMatch })\n    }\n    return t('Match first %numberMatch%', { numberMatch })\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      {isLoading ? (\n        <Skeleton mb=\"4px\" mt=\"8px\" height={16} width={80} />\n      ) : (\n        <Text bold color={isBurn ? 'failure' : 'secondary'}>\n          {getRewardText()}\n        </Text>\n      )}\n      <>\n        {isLoading || cakeAmount.isNaN() ? (\n          <Skeleton my=\"4px\" mr=\"10px\" height={20} width={110} />\n        ) : (\n          <Balance fontSize=\"20px\" bold unit=\" MByte\" value={getBalanceNumber(cakeAmount)} decimals={0} />\n        )}\n        {isLoading || cakeAmount.isNaN() ? (\n          <>\n            <Skeleton mt=\"4px\" mb=\"16px\" height={12} width={70} />\n          </>\n        ) : (\n          <Balance\n            fontSize=\"12px\"\n            color=\"textSubtle\"\n            prefix=\"~$\"\n            value={getBalanceNumber(cakeAmount.times(cakePriceBusd))}\n            decimals={0}\n          />\n        )}\n        {isHistoricRound && cakeAmount && (\n          <>\n            {numberWinners !== '0' && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                {getFullDisplayBalance(cakeAmount.div(parseInt(numberWinners, 10)), 18, 2)} MByte {t('each')}\n              </Text>\n            )}\n            <Text fontSize=\"12px\" color=\"textSubtle\">\n              {numberWinners} {t('Winners')}\n            </Text>\n          </>\n        )}\n      </>\n    </Flex>\n  )\n}\n\nexport default RewardBracketDetail\n","import React, { useState, useEffect } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryRound } from 'state/types'\nimport RewardBracketDetail from './RewardBracketDetail'\n\nconst Wrapper = styled(Flex)`\n  width: 100%;\n  flex-direction: column;\n`\n\nconst RewardsInner = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, auto);\n  row-gap: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`\n\ninterface RewardMatchesProps {\n  lotteryNodeData: LotteryRound\n  isHistoricRound?: boolean\n}\n\ninterface RewardsState {\n  isLoading: boolean\n  cakeToBurn: BigNumber\n  rewardsLessTreasuryFee: BigNumber\n  rewardsBreakdown: string[]\n  countWinnersPerBracket: string[]\n}\n\nconst RewardBrackets: React.FC<RewardMatchesProps> = ({ lotteryNodeData, isHistoricRound }) => {\n  const { t } = useTranslation()\n  const [state, setState] = useState<RewardsState>({\n    isLoading: true,\n    cakeToBurn: BIG_ZERO,\n    rewardsLessTreasuryFee: BIG_ZERO,\n    rewardsBreakdown: null,\n    countWinnersPerBracket: null,\n  })\n\n  useEffect(() => {\n    if (lotteryNodeData) {\n      const { treasuryFee, amountCollectedInCake, rewardsBreakdown, countWinnersPerBracket } = lotteryNodeData\n\n      const feeAsPercentage = new BigNumber(treasuryFee).div(100)\n      const cakeToBurn = feeAsPercentage.div(100).times(new BigNumber(amountCollectedInCake))\n      const amountLessTreasuryFee = new BigNumber(amountCollectedInCake).minus(cakeToBurn)\n      setState({\n        isLoading: false,\n        cakeToBurn,\n        rewardsLessTreasuryFee: amountLessTreasuryFee,\n        rewardsBreakdown,\n        countWinnersPerBracket,\n      })\n    } else {\n      setState({\n        isLoading: true,\n        cakeToBurn: BIG_ZERO,\n        rewardsLessTreasuryFee: BIG_ZERO,\n        rewardsBreakdown: null,\n        countWinnersPerBracket: null,\n      })\n    }\n  }, [lotteryNodeData])\n\n  const getCakeRewards = (bracket: number) => {\n    const shareAsPercentage = new BigNumber(state.rewardsBreakdown[bracket]).div(100)\n    return state.rewardsLessTreasuryFee.div(100).times(shareAsPercentage)\n  }\n\n  const { isLoading, countWinnersPerBracket, cakeToBurn } = state\n\n  const rewardBrackets = [0, 1, 2, 3, 4, 5]\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\" mb=\"24px\">\n        {t('Match the winning number in the same order to share prizes.')}{' '}\n        {!isHistoricRound && t('Current prizes up for grabs:')}\n      </Text>\n      <RewardsInner>\n        {rewardBrackets.map((bracketIndex) => (\n          <RewardBracketDetail\n            key={bracketIndex}\n            rewardBracket={bracketIndex}\n            cakeAmount={!isLoading && getCakeRewards(bracketIndex)}\n            numberWinners={!isLoading && countWinnersPerBracket[bracketIndex]}\n            isHistoricRound={isHistoricRound}\n            isLoading={isLoading}\n          />\n        ))}\n        <RewardBracketDetail rewardBracket={0} cakeAmount={cakeToBurn} isBurn isLoading={isLoading} />\n      </RewardsInner>\n    </Wrapper>\n  )\n}\n\nexport default RewardBrackets\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Flex,\n  Heading,\n  Text,\n  Skeleton,\n  Button,\n  useModal,\n  Box,\n  CardFooter,\n  ExpandableLabel,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useLottery } from 'state/lottery/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport ViewTicketsModal from './ViewTicketsModal'\nimport BuyTicketsButton from './BuyTicketsButton'\nimport { dateTimeOptions } from '../helpers'\nimport RewardBrackets from './RewardBrackets'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: auto;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-column-gap: 32px;\n    grid-template-columns: auto 1fr;\n  }\n`\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 520px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 756px;\n  }\n`\n\nconst NextDrawWrapper = styled.div`\n  background: ${({ theme }) => theme.colors.background};\n  padding: 24px;\n`\n\nconst NextDrawCard = () => {\n  const {\n    t,\n    currentLanguage: { locale },\n  } = useTranslation()\n  const { account } = useWeb3React()\n  const { currentLotteryId, isTransitioning, currentRound } = useLottery()\n  const { endTime, amountCollectedInCake, userTickets, status } = currentRound\n\n  const [onPresentViewTicketsModal] = useModal(<ViewTicketsModal roundId={currentLotteryId} roundStatus={status} />)\n  const [isExpanded, setIsExpanded] = useState(false)\n  const ticketBuyIsDisabled = status !== LotteryStatus.OPEN || isTransitioning\n\n  const cakePriceBusd = usePriceCakeBusd()\n  const prizeInBusd = amountCollectedInCake.times(cakePriceBusd)\n  const endTimeMs = parseInt(endTime, 10) * 1000\n  const endDate = new Date(endTimeMs)\n  const isLotteryOpen = status === LotteryStatus.OPEN\n  const userTicketCount = userTickets?.tickets?.length || 0\n\n  const getPrizeBalances = () => {\n    if (status === LotteryStatus.CLOSE || status === LotteryStatus.CLAIMABLE) {\n      return (\n        <Heading scale=\"xl\" color=\"secondary\" textAlign={['center', null, null, 'left']}>\n          {t('Calculating')}...\n        </Heading>\n      )\n    }\n    return (\n      <>\n        {prizeInBusd.isNaN() ? (\n          <Skeleton my=\"7px\" height={40} width={160} />\n        ) : (\n          <Balance\n            fontSize=\"40px\"\n            color=\"secondary\"\n            textAlign={['center', null, null, 'left']}\n            lineHeight=\"1\"\n            bold\n            prefix=\"~$\"\n            value={getBalanceNumber(prizeInBusd)}\n            decimals={0}\n          />\n        )}\n        {prizeInBusd.isNaN() ? (\n          <Skeleton my=\"2px\" height={14} width={90} />\n        ) : (\n          <Balance\n            fontSize=\"14px\"\n            color=\"textSubtle\"\n            textAlign={['center', null, null, 'left']}\n            unit=\" MByte\"\n            value={getBalanceNumber(amountCollectedInCake)}\n            decimals={0}\n          />\n        )}\n      </>\n    )\n  }\n\n  const getNextDrawId = () => {\n    if (status === LotteryStatus.OPEN) {\n      return `${currentLotteryId} |`\n    }\n    if (status === LotteryStatus.PENDING) {\n      return ''\n    }\n    return parseInt(currentLotteryId, 10) + 1\n  }\n\n  const getNextDrawDateTime = () => {\n    if (status === LotteryStatus.OPEN) {\n      return `${t('Draw')}: ${endDate.toLocaleString(locale, dateTimeOptions)}`\n    }\n    return ''\n  }\n\n  const ticketRoundText =\n    userTicketCount > 1\n      ? t('You have %amount% tickets this round', { amount: userTicketCount })\n      : t('You have %amount% ticket this round', { amount: userTicketCount })\n  const [youHaveText, ticketsThisRoundText] = ticketRoundText.split(userTicketCount.toString())\n\n  return (\n    <StyledCard>\n      <CardHeader p=\"16px 24px\">\n        <Flex justifyContent=\"space-between\">\n          <Heading mr=\"12px\">{t('Next Draw')}</Heading>\n          <Text>\n            {currentLotteryId && `#${getNextDrawId()}`} {Boolean(endTime) && getNextDrawDateTime()}\n          </Text>\n        </Flex>\n      </CardHeader>\n      <CardBody>\n        <Grid>\n          <Flex justifyContent={['center', null, null, 'flex-start']}>\n            <Heading>{t('Prize Pot')}</Heading>\n          </Flex>\n          <Flex flexDirection=\"column\" mb=\"18px\">\n            {getPrizeBalances()}\n          </Flex>\n          <Box display={['none', null, null, 'flex']}>\n            <Heading>{t('Your tickets')}</Heading>\n          </Box>\n          <Flex flexDirection={['column', null, null, 'row']} alignItems={['center', null, null, 'flex-start']}>\n            {isLotteryOpen && (\n              <Flex\n                flexDirection=\"column\"\n                mr={[null, null, null, '24px']}\n                alignItems={['center', null, null, 'flex-start']}\n              >\n                {account && (\n                  <Flex justifyContent={['center', null, null, 'flex-start']}>\n                    <Text display=\"inline\">{youHaveText} </Text>\n                    {!userTickets.isLoading ? (\n                      <Balance value={userTicketCount} decimals={0} display=\"inline\" bold mx=\"4px\" />\n                    ) : (\n                      <Skeleton mx=\"4px\" height={20} width={40} />\n                    )}\n                    <Text display=\"inline\"> {ticketsThisRoundText}</Text>\n                  </Flex>\n                )}\n                {!userTickets.isLoading && userTicketCount > 0 && (\n                  <Button\n                    onClick={onPresentViewTicketsModal}\n                    height=\"auto\"\n                    width=\"fit-content\"\n                    p=\"0\"\n                    mb={['32px', null, null, '0']}\n                    variant=\"text\"\n                    scale=\"sm\"\n                  >\n                    {t('View your tickets')}\n                  </Button>\n                )}\n              </Flex>\n            )}\n            <BuyTicketsButton disabled={ticketBuyIsDisabled} maxWidth=\"280px\" />\n          </Flex>\n        </Grid>\n      </CardBody>\n      <CardFooter p=\"0\">\n        {isExpanded && (\n          <NextDrawWrapper>\n            <RewardBrackets lotteryNodeData={currentRound} />\n          </NextDrawWrapper>\n        )}\n        {(status === LotteryStatus.OPEN || status === LotteryStatus.CLOSE) && (\n          <Flex p=\"8px 24px\" alignItems=\"center\" justifyContent=\"center\">\n            <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n              {isExpanded ? t('Hide') : t('Details')}\n            </ExpandableLabel>\n          </Flex>\n        )}\n      </CardFooter>\n    </StyledCard>\n  )\n}\n\nexport default NextDrawCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface TimerProps {\n  minutes?: number\n  hours?: number\n  days?: number\n}\n\nconst StyledTimerFlex = styled(Flex)<{ showTooltip?: boolean }>`\n  ${({ theme, showTooltip }) => (showTooltip ? ` border-bottom: 1px dashed ${theme.colors.textSubtle};` : ``)}\n  div:last-of-type {\n    margin-right: 0;\n  }\n`\n\nconst StyledTimerText = styled(Heading)`\n  background: ${({ theme }) => theme.colors.gradients.gold};\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`\n\nconst Wrapper: React.FC<TimerProps> = ({ minutes, hours, days }) => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledTimerFlex alignItems=\"flex-end\">\n      {Boolean(days) && (\n        <>\n          <StyledTimerText mb=\"-4px\" scale=\"xl\" mr=\"4px\">\n            {days}\n          </StyledTimerText>\n          <StyledTimerText mr=\"12px\">{t('d')}</StyledTimerText>\n        </>\n      )}\n      {Boolean(hours) && (\n        <>\n          <StyledTimerText mb=\"-4px\" scale=\"xl\" mr=\"4px\">\n            {hours}\n          </StyledTimerText>\n          <StyledTimerText mr=\"12px\">{t('h')}</StyledTimerText>\n        </>\n      )}\n      {Boolean(minutes) && (\n        <>\n          <StyledTimerText mb=\"-4px\" scale=\"xl\" mr=\"4px\">\n            {minutes}\n          </StyledTimerText>\n          <StyledTimerText mr=\"12px\">{t('m')}</StyledTimerText>\n        </>\n      )}\n    </StyledTimerFlex>\n  )\n}\n\nexport default Wrapper\n","import { useEffect, useState, useRef } from 'react'\nimport { useAppDispatch } from 'state'\nimport { useLottery } from 'state/lottery/hooks'\nimport { fetchCurrentLottery, setLotteryIsTransitioning } from 'state/lottery'\n\nconst useNextEventCountdown = (nextEventTime: number): number => {\n  const dispatch = useAppDispatch()\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const timer = useRef(null)\n  const { currentLotteryId } = useLottery()\n\n  useEffect(() => {\n    dispatch(setLotteryIsTransitioning({ isTransitioning: false }))\n    const currentSeconds = Math.floor(Date.now() / 1000)\n    const secondsRemainingCalc = nextEventTime - currentSeconds\n    setSecondsRemaining(secondsRemainingCalc)\n\n    timer.current = setInterval(() => {\n      setSecondsRemaining((prevSecondsRemaining) => {\n        // Clear current interval at end of countdown and fetch current lottery to get updated state\n        if (prevSecondsRemaining <= 1) {\n          clearInterval(timer.current)\n          dispatch(setLotteryIsTransitioning({ isTransitioning: true }))\n          dispatch(fetchCurrentLottery({ currentLotteryId }))\n        }\n        return prevSecondsRemaining - 1\n      })\n    }, 1000)\n\n    return () => clearInterval(timer.current)\n  }, [setSecondsRemaining, nextEventTime, currentLotteryId, timer, dispatch])\n\n  return secondsRemaining\n}\n\nexport default useNextEventCountdown\n","import React from 'react'\nimport { Flex, Heading, Skeleton } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport Timer from './Timer'\nimport useNextEventCountdown from '../../hooks/useNextEventCountdown'\n\ninterface CountdownProps {\n  nextEventTime: number\n  preCountdownText?: string\n  postCountdownText?: string\n}\n\nconst Countdown: React.FC<CountdownProps> = ({ nextEventTime, preCountdownText, postCountdownText }) => {\n  const secondsRemaining = useNextEventCountdown(nextEventTime)\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return (\n    <>\n      {secondsRemaining ? (\n        <Flex display=\"inline-flex\" justifyContent=\"flex-end\" alignItems=\"flex-end\">\n          {preCountdownText && (\n            <Heading mr=\"12px\" color=\"#ffff\">\n              {preCountdownText}\n            </Heading>\n          )}\n          <Timer\n            minutes={minutes + 1} // We don't show seconds - so values from 0 - 59s should be shown as 1 min\n            hours={hours}\n            days={days}\n          />\n          {postCountdownText && <Heading color=\"#ffff\">{postCountdownText}</Heading>}\n        </Flex>\n      ) : (\n        <Skeleton height=\"41px\" width=\"250px\" />\n      )}\n    </>\n  )\n}\n\nexport default Countdown\n","import React from 'react'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst HistoryTabMenu = ({ setActiveIndex, activeIndex }) => {\n  const { t } = useTranslation()\n\n  return (\n    <ButtonMenu activeIndex={activeIndex} onItemClick={setActiveIndex} scale=\"sm\" variant=\"subtle\">\n      <ButtonMenuItem>{t('All History')}</ButtonMenuItem>\n      <ButtonMenuItem>{t('Your History')}</ButtonMenuItem>\n    </ButtonMenu>\n  )\n}\n\nexport default HistoryTabMenu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, ChevronRightIcon, Box, SmallDotIcon, PrizeIcon } from '@pancakeswap/uikit'\nimport { dateOptions, timeOptions } from '../../helpers'\n\ninterface FinishedRoundRowProps {\n  roundId: string\n  numberTickets: string\n  endTime: string\n  onClick: (string) => void\n  hasWon?: boolean\n}\n\nconst Grid = styled(Box)`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr) auto;\n  margin-bottom: 8px;\n  cursor: pointer;\n`\n\nconst StyledSmallDotIcon = styled(SmallDotIcon)`\n  path {\n    fill: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nconst FinishedRoundRow: React.FC<FinishedRoundRowProps> = ({\n  roundId,\n  numberTickets,\n  endTime,\n  onClick,\n  hasWon = false,\n}) => {\n  const {\n    currentLanguage: { locale },\n  } = useTranslation()\n  const endTimeInMs = parseInt(endTime, 10) * 1000\n  const endTimeAsDate = new Date(endTimeInMs)\n\n  return (\n    <Grid onClick={() => onClick(roundId)}>\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"16px\" color=\"textSubtle\">\n          {roundId}\n        </Text>\n      </Flex>\n      <Flex\n        mx=\"6px\"\n        alignItems={['flex-start', null, 'center']}\n        justifyContent={['center', null, 'flex-start']}\n        flexDirection={['column', null, 'row']}\n      >\n        <Text fontSize=\"12px\" mr={['0', null, '6px']}>\n          {endTimeAsDate.toLocaleDateString(locale, dateOptions)}\n        </Text>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {endTimeAsDate.toLocaleTimeString(undefined, timeOptions)}\n        </Text>\n      </Flex>\n      <Flex mx=\"6px\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Text>{numberTickets}</Text>\n        {hasWon ? <PrizeIcon color=\"warning\" /> : <StyledSmallDotIcon />}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"center\">\n        <ChevronRightIcon color=\"primary\" />\n      </Flex>\n    </Grid>\n  )\n}\n\nexport default FinishedRoundRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Box, Flex, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useGetUserLotteriesGraphData } from 'state/lottery/hooks'\nimport FinishedRoundRow from './FinishedRoundRow'\n\nconst Grid = styled(Box)`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr) auto;\n`\n\ninterface FinishedRoundTableProps {\n  handleHistoryRowClick: (string) => void\n  handleShowMoreClick: () => void\n  numUserRoundsRequested: number\n}\n\nconst FinishedRoundTable: React.FC<FinishedRoundTableProps> = ({\n  handleShowMoreClick,\n  numUserRoundsRequested,\n  handleHistoryRowClick,\n}) => {\n  const { t } = useTranslation()\n  const userLotteryData = useGetUserLotteriesGraphData()\n\n  const filteredForClaimable = userLotteryData?.rounds.filter((round) => {\n    return round.status.toLowerCase() === LotteryStatus.CLAIMABLE\n  })\n\n  const sortedByRoundId = filteredForClaimable?.sort((roundA, roundB) => {\n    return parseInt(roundB.lotteryId, 10) - parseInt(roundA.lotteryId, 10)\n  })\n\n  return (\n    <>\n      <Grid px=\"24px\" pt=\"24px\" mb=\"8px\">\n        <Text bold fontSize=\"12px\" color=\"secondary\">\n          #\n        </Text>\n        <Text bold fontSize=\"12px\" color=\"secondary\" textTransform=\"uppercase\">\n          {t('Date')}\n        </Text>\n        <Text bold fontSize=\"12px\" color=\"secondary\" textTransform=\"uppercase\">\n          {t('Your Tickets')}\n        </Text>\n        <Box width=\"20px\" />\n      </Grid>\n      <Flex px=\"24px\" pb=\"24px\" flexDirection=\"column\" overflowY=\"scroll\" height=\"240px\">\n        {userLotteryData &&\n          sortedByRoundId.map((finishedRound) => (\n            <FinishedRoundRow\n              key={finishedRound.lotteryId}\n              roundId={finishedRound.lotteryId}\n              hasWon={finishedRound.claimed}\n              numberTickets={finishedRound.totalTickets}\n              endTime={finishedRound.endTime}\n              onClick={handleHistoryRowClick}\n            />\n          ))}\n        {userLotteryData?.rounds?.length === numUserRoundsRequested && (\n          <Flex justifyContent=\"center\">\n            <Button mt=\"12px\" variant=\"text\" width=\"fit-content\" onClick={handleShowMoreClick}>\n              {t('Show More')}\n            </Button>\n          </Flex>\n        )}\n      </Flex>\n    </>\n  )\n}\n\nexport default FinishedRoundTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  CardBody,\n  Heading,\n  Flex,\n  Skeleton,\n  Text,\n  Box,\n  Button,\n  useModal,\n  CardRibbon,\n  useMatchBreakpoints,\n  BunnyPlaceholderIcon,\n} from '@pancakeswap/uikit'\nimport { LotteryRound } from 'state/types'\nimport { useGetUserLotteriesGraphData, useLottery } from 'state/lottery/hooks'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport WinningNumbers from '../WinningNumbers'\nimport ViewTicketsModal from '../ViewTicketsModal'\n\nconst StyledCardBody = styled(CardBody)`\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: auto;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-column-gap: 72px;\n    grid-row-gap: 36px;\n    grid-template-columns: auto 1fr;\n  }\n`\n\nconst StyledCardRibbon = styled(CardRibbon)`\n  right: -20px;\n  top: -20px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    right: -10px;\n    top: -10px;\n  }\n`\n\nconst PreviousRoundCardBody: React.FC<{ lotteryNodeData: LotteryRound; lotteryId: string }> = ({\n  lotteryNodeData,\n  lotteryId,\n}) => {\n  const { t } = useTranslation()\n  const {\n    currentLotteryId,\n    currentRound: { status },\n  } = useLottery()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const userDataForRound = userLotteryData.rounds.find((userLotteryRound) => userLotteryRound.lotteryId === lotteryId)\n  const { isLg, isXl, isXxl } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n\n  const currentLotteryIdAsInt = parseInt(currentLotteryId)\n  const mostRecentFinishedRoundId =\n    status === LotteryStatus.CLAIMABLE ? currentLotteryIdAsInt : currentLotteryIdAsInt - 1\n  const isLatestRound = mostRecentFinishedRoundId.toString() === lotteryId\n\n  const [onPresentViewTicketsModal] = useModal(\n    <ViewTicketsModal roundId={lotteryId} roundStatus={lotteryNodeData?.status} />,\n  )\n\n  const totalTicketNumber = userDataForRound ? userDataForRound.totalTickets : 0\n  const ticketRoundText =\n    totalTicketNumber > 1\n      ? t('You had %amount% tickets this round', { amount: totalTicketNumber })\n      : t('You had %amount% ticket this round', { amount: totalTicketNumber })\n  const [youHadText, ticketsThisRoundText] = ticketRoundText.split(totalTicketNumber.toString())\n\n  return (\n    <StyledCardBody>\n      {isLatestRound && <StyledCardRibbon text={t('Latest')} />}\n      <Grid>\n        <Flex justifyContent={['center', null, null, 'flex-start']}>\n          <Heading mb=\"24px\">{t('Winning Number')}</Heading>\n        </Flex>\n        <Flex maxWidth={['240px', null, null, '100%']} justifyContent={['center', null, null, 'flex-start']}>\n          {lotteryId ? (\n            lotteryNodeData ? (\n              <WinningNumbers\n                rotateText={isLargerScreen || false}\n                number={lotteryNodeData?.finalNumber.toString()}\n                mr={[null, null, null, '32px']}\n                size=\"100%\"\n                fontSize={isLargerScreen ? '42px' : '16px'}\n              />\n            ) : (\n              <Skeleton\n                width={['240px', null, null, '450px']}\n                height={['34px', null, null, '71px']}\n                mr={[null, null, null, '32px']}\n              />\n            )\n          ) : (\n            <>\n              <Flex flexDirection=\"column\" alignItems=\"center\" width={['240px', null, null, '480px']}>\n                <Text mb=\"8px\">{t('Please specify Round')}</Text>\n                <BunnyPlaceholderIcon height=\"64px\" width=\"64px\" />\n              </Flex>\n            </>\n          )}\n        </Flex>\n        {userDataForRound && (\n          <>\n            <Box display={['none', null, null, 'flex']}>\n              <Heading>{t('Your tickets')}</Heading>\n            </Box>\n            <Flex\n              flexDirection=\"column\"\n              mr={[null, null, null, '24px']}\n              alignItems={['center', null, null, 'flex-start']}\n            >\n              <Box mt={['32px', null, null, 0]}>\n                <Text display=\"inline\">{youHadText} </Text>\n                <Text display=\"inline\" bold>\n                  {userDataForRound.totalTickets}\n                </Text>\n                <Text display=\"inline\">{ticketsThisRoundText}</Text>\n              </Box>\n              <Button\n                onClick={onPresentViewTicketsModal}\n                height=\"auto\"\n                width=\"fit-content\"\n                p=\"0\"\n                variant=\"text\"\n                scale=\"sm\"\n              >\n                {t('View your tickets')}\n              </Button>\n            </Flex>\n          </>\n        )}\n      </Grid>\n    </StyledCardBody>\n  )\n}\n\nexport default PreviousRoundCardBody\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Flex, Skeleton, Heading, Box, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryRound, LotteryRoundGraphEntity } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useGetLotteryGraphDataById } from 'state/lottery/hooks'\nimport { getGraphLotteries } from 'state/lottery/getLotteriesData'\nimport { formatNumber, getBalanceNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport RewardBrackets from '../RewardBrackets'\n\nconst NextDrawWrapper = styled(Flex)`\n  background: ${({ theme }) => theme.colors.background};\n  padding: 24px;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst PreviousRoundCardFooter: React.FC<{ lotteryNodeData: LotteryRound; lotteryId: string }> = ({\n  lotteryNodeData,\n  lotteryId,\n}) => {\n  const { t } = useTranslation()\n  const [fetchedLotteryGraphData, setFetchedLotteryGraphData] = useState<LotteryRoundGraphEntity>()\n  const lotteryGraphDataFromState = useGetLotteryGraphDataById(lotteryId)\n  const cakePriceBusd = usePriceCakeBusd()\n\n  useEffect(() => {\n    const getGraphData = async () => {\n      const fetchedGraphData = await getGraphLotteries(undefined, undefined, { id_in: [lotteryId] })\n      setFetchedLotteryGraphData(fetchedGraphData[0])\n    }\n    if (!lotteryGraphDataFromState) {\n      getGraphData()\n    }\n  }, [lotteryGraphDataFromState, lotteryId])\n\n  let prizeInBusd = new BigNumber(NaN)\n  if (lotteryNodeData) {\n    const { amountCollectedInCake } = lotteryNodeData\n    prizeInBusd = amountCollectedInCake.times(cakePriceBusd)\n  }\n\n  const getTotalUsers = (): string => {\n    if (!lotteryGraphDataFromState && fetchedLotteryGraphData) {\n      return fetchedLotteryGraphData?.totalUsers?.toLocaleString()\n    }\n\n    if (lotteryGraphDataFromState) {\n      return lotteryGraphDataFromState?.totalUsers?.toLocaleString()\n    }\n\n    return null\n  }\n\n  const getPrizeBalances = () => {\n    return (\n      <>\n        {prizeInBusd.isNaN() ? (\n          <Skeleton my=\"7px\" height={40} width={200} />\n        ) : (\n          <Heading scale=\"xl\" lineHeight=\"1\" color=\"secondary\">\n            ~${formatNumber(getBalanceNumber(prizeInBusd), 0, 0)}\n          </Heading>\n        )}\n        {prizeInBusd.isNaN() ? (\n          <Skeleton my=\"2px\" height={14} width={90} />\n        ) : (\n          <Balance\n            fontSize=\"14px\"\n            color=\"textSubtle\"\n            unit=\" MByte\"\n            value={getBalanceNumber(lotteryNodeData?.amountCollectedInCake)}\n            decimals={0}\n          />\n        )}\n      </>\n    )\n  }\n\n  return (\n    <NextDrawWrapper>\n      <Flex mr=\"24px\" flexDirection=\"column\" justifyContent=\"space-between\">\n        <Box>\n          <Heading>{t('Prize pot')}</Heading>\n          {getPrizeBalances()}\n        </Box>\n        <Box mb=\"24px\">\n          <Flex>\n            <Text fontSize=\"14px\" display=\"inline\">\n              {t('Total players this round')}:{' '}\n              {lotteryNodeData && (lotteryGraphDataFromState || fetchedLotteryGraphData) ? (\n                getTotalUsers()\n              ) : (\n                <Skeleton height={14} width={31} />\n              )}\n            </Text>\n          </Flex>\n        </Box>\n      </Flex>\n      <RewardBrackets lotteryNodeData={lotteryNodeData} isHistoricRound />\n    </NextDrawWrapper>\n  )\n}\n\nexport default PreviousRoundCardFooter\n","import React, { useEffect, useState } from 'react'\nimport { Flex, ExpandableLabel, CardFooter } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryRound } from 'state/types'\nimport FooterExpanded from './FooterExpanded'\n\ninterface PreviousRoundCardFooterProps {\n  lotteryNodeData: LotteryRound\n  lotteryId: string\n}\n\nconst PreviousRoundCardFooter: React.FC<PreviousRoundCardFooterProps> = ({ lotteryNodeData, lotteryId }) => {\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  useEffect(() => {\n    if (!lotteryId) {\n      setIsExpanded(false)\n    }\n  }, [lotteryId])\n\n  return (\n    <CardFooter p=\"0\">\n      {isExpanded && <FooterExpanded lotteryNodeData={lotteryNodeData} lotteryId={lotteryId} />}\n      <Flex p=\"8px 24px\" alignItems=\"center\" justifyContent=\"center\">\n        <ExpandableLabel\n          expanded={isExpanded}\n          onClick={() => {\n            if (lotteryId) {\n              setIsExpanded(!isExpanded)\n            }\n          }}\n        >\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </Flex>\n    </CardFooter>\n  )\n}\n\nexport default PreviousRoundCardFooter\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport {\n  CardHeader,\n  Card,\n  CardBody,\n  Text,\n  CardFooter,\n  ArrowBackIcon,\n  Flex,\n  Heading,\n  Skeleton,\n  Box,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useGetUserLotteriesGraphData, useLottery } from 'state/lottery/hooks'\nimport { fetchLottery } from 'state/lottery/helpers'\nimport { LotteryRound } from 'state/types'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport FinishedRoundTable from './FinishedRoundTable'\nimport { WhiteBunny } from '../../svgs'\nimport BuyTicketsButton from '../BuyTicketsButton'\nimport PreviousRoundCardBody from '../PreviousRoundCard/Body'\nimport { processLotteryResponse, getDrawnDate } from '../../helpers'\nimport PreviousRoundCardFooter from '../PreviousRoundCard/Footer'\n\ninterface YourHistoryCardProps {\n  handleShowMoreClick: () => void\n  numUserRoundsRequested: number\n}\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 756px;\n  }\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 240px;\n`\n\nconst YourHistoryCard: React.FC<YourHistoryCardProps> = ({ handleShowMoreClick, numUserRoundsRequested }) => {\n  const {\n    t,\n    currentLanguage: { locale },\n  } = useTranslation()\n  const { account } = useWeb3React()\n  const [shouldShowRoundDetail, setShouldShowRoundDetail] = useState(false)\n  const [selectedLotteryNodeData, setSelectedLotteryNodeData] = useState<LotteryRound>(null)\n  const [selectedLotteryId, setSelectedLotteryId] = useState<string>(null)\n\n  const {\n    isTransitioning,\n    currentRound: { status },\n  } = useLottery()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const ticketBuyIsDisabled = status !== LotteryStatus.OPEN || isTransitioning\n\n  const handleHistoryRowClick = async (lotteryId: string) => {\n    setShouldShowRoundDetail(true)\n    setSelectedLotteryId(lotteryId)\n    const lotteryData = await fetchLottery(lotteryId)\n    const processedLotteryData = processLotteryResponse(lotteryData)\n    setSelectedLotteryNodeData(processedLotteryData)\n  }\n\n  const clearState = () => {\n    setShouldShowRoundDetail(false)\n    setSelectedLotteryNodeData(null)\n    setSelectedLotteryId(null)\n  }\n\n  const getHeader = () => {\n    if (shouldShowRoundDetail) {\n      return (\n        <Flex alignItems=\"center\">\n          <ArrowBackIcon cursor=\"pointer\" onClick={() => clearState()} mr=\"20px\" />\n          <Flex flexDirection=\"column\" alignItems=\"flex-start\" justifyContent=\"center\">\n            <Heading scale=\"md\" mb=\"4px\">\n              {t('Round')} {selectedLotteryId || ''}\n            </Heading>\n            {selectedLotteryNodeData?.endTime ? (\n              <Text fontSize=\"14px\">\n                {t('Drawn')} {getDrawnDate(locale, selectedLotteryNodeData.endTime)}\n              </Text>\n            ) : (\n              <Skeleton width=\"185px\" height=\"21px\" />\n            )}\n          </Flex>\n        </Flex>\n      )\n    }\n\n    return <Heading scale=\"md\">{t('Rounds')}</Heading>\n  }\n\n  const getBody = () => {\n    if (shouldShowRoundDetail) {\n      return <PreviousRoundCardBody lotteryNodeData={selectedLotteryNodeData} lotteryId={selectedLotteryId} />\n    }\n\n    const claimableRounds = userLotteryData?.rounds.filter((round) => {\n      return round.status.toLowerCase() === LotteryStatus.CLAIMABLE\n    })\n\n    if (!account) {\n      return (\n        <StyledCardBody>\n          <Text textAlign=\"center\" color=\"textSubtle\" mb=\"16px\">\n            {t('Connect your wallet to check your history')}\n          </Text>\n          <ConnectWalletButton />\n        </StyledCardBody>\n      )\n    }\n    if (claimableRounds.length === 0) {\n      return (\n        <StyledCardBody>\n          <Box maxWidth=\"280px\">\n            <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"16px\">\n              <WhiteBunny height=\"24px\" mr=\"8px\" /> <Text textAlign=\"left\">{t('No lottery history found')}</Text>\n            </Flex>\n            <Text textAlign=\"center\" color=\"textSubtle\" mb=\"16px\">\n              {t('Buy tickets for the next round!')}\n            </Text>\n            <BuyTicketsButton disabled={ticketBuyIsDisabled} width=\"100%\" />\n          </Box>\n        </StyledCardBody>\n      )\n    }\n    return (\n      <FinishedRoundTable\n        handleHistoryRowClick={handleHistoryRowClick}\n        handleShowMoreClick={handleShowMoreClick}\n        numUserRoundsRequested={numUserRoundsRequested}\n      />\n    )\n  }\n\n  const getFooter = () => {\n    if (selectedLotteryNodeData) {\n      return <PreviousRoundCardFooter lotteryNodeData={selectedLotteryNodeData} lotteryId={selectedLotteryId} />\n    }\n    return (\n      <CardFooter>\n        <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {t('Only showing data for Lottery V2')}\n          </Text>\n        </Flex>\n      </CardFooter>\n    )\n  }\n\n  return (\n    <StyledCard>\n      <CardHeader>{getHeader()}</CardHeader>\n      {getBody()}\n      {getFooter()}\n    </StyledCard>\n  )\n}\n\nexport default YourHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { IconButton, ArrowForwardIcon, ArrowBackIcon, ArrowLastIcon, Flex, Heading, Input } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  width: 60px;\n  height: 100%;\n  padding: 4px 16px;\n`\n\nconst StyledIconButton = styled(IconButton)`\n  width: 32px;\n\n  :disabled {\n    background: none;\n\n    svg {\n      fill: ${({ theme }) => theme.colors.textDisabled};\n\n      path {\n        fill: ${({ theme }) => theme.colors.textDisabled};\n      }\n    }\n  }\n`\n\ninterface RoundSwitcherProps {\n  isLoading: boolean\n  selectedRoundId: string\n  mostRecentRound: number\n  handleInputChange: (event: any) => void\n  handleArrowButtonPress: (targetRound: number) => void\n}\n\nconst RoundSwitcher: React.FC<RoundSwitcherProps> = ({\n  isLoading,\n  selectedRoundId,\n  mostRecentRound,\n  handleInputChange,\n  handleArrowButtonPress,\n}) => {\n  const { t } = useTranslation()\n  const selectedRoundIdAsInt = parseInt(selectedRoundId, 10)\n\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.validity.valid) {\n      handleInputChange(e)\n    }\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex alignItems=\"center\">\n        <Heading mr=\"8px\">{t('Round')}</Heading>\n        <StyledInput\n          pattern=\"^[0-9]+$\"\n          inputMode=\"numeric\"\n          disabled={isLoading}\n          id=\"round-id\"\n          name=\"round-id\"\n          value={selectedRoundId}\n          scale=\"lg\"\n          onChange={handleOnChange}\n        />\n      </Flex>\n      <Flex alignItems=\"center\">\n        <StyledIconButton\n          disabled={!selectedRoundIdAsInt || selectedRoundIdAsInt <= 1}\n          onClick={() => handleArrowButtonPress(selectedRoundIdAsInt - 1)}\n          variant=\"text\"\n          scale=\"sm\"\n          mr=\"4px\"\n        >\n          <ArrowBackIcon />\n        </StyledIconButton>\n        <StyledIconButton\n          disabled={selectedRoundIdAsInt >= mostRecentRound}\n          onClick={() => handleArrowButtonPress(selectedRoundIdAsInt + 1)}\n          variant=\"text\"\n          scale=\"sm\"\n          mr=\"4px\"\n        >\n          <ArrowForwardIcon />\n        </StyledIconButton>\n        <StyledIconButton\n          disabled={selectedRoundIdAsInt >= mostRecentRound}\n          onClick={() => handleArrowButtonPress(mostRecentRound)}\n          variant=\"text\"\n          scale=\"sm\"\n        >\n          <ArrowLastIcon />\n        </StyledIconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default RoundSwitcher\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, Text, Skeleton, CardHeader, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { useLottery } from 'state/lottery/hooks'\nimport { fetchLottery } from 'state/lottery/helpers'\nimport { LotteryStatus } from 'config/constants/types'\nimport RoundSwitcher from './RoundSwitcher'\nimport { getDrawnDate, processLotteryResponse } from '../../helpers'\nimport PreviousRoundCardBody from '../PreviousRoundCard/Body'\nimport PreviousRoundCardFooter from '../PreviousRoundCard/Footer'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 756px;\n  }\n`\n\nconst StyledCardHeader = styled(CardHeader)`\n  z-index: 2;\n  background: none;\n  border-bottom: 1px ${({ theme }) => theme.colors.cardBorder} solid;\n`\n\nconst AllHistoryCard = () => {\n  const {\n    t,\n    currentLanguage: { locale },\n  } = useTranslation()\n  const dispatch = useAppDispatch()\n  const {\n    currentLotteryId,\n    lotteriesData,\n    currentRound: { status, isLoading },\n  } = useLottery()\n  const [latestRoundId, setLatestRoundId] = useState(null)\n  const [selectedRoundId, setSelectedRoundId] = useState('')\n  const [selectedLotteryNodeData, setSelectedLotteryNodeData] = useState(null)\n  const timer = useRef(null)\n\n  const numRoundsFetched = lotteriesData?.length\n\n  useEffect(() => {\n    if (currentLotteryId) {\n      const currentLotteryIdAsInt = currentLotteryId ? parseInt(currentLotteryId) : null\n      const mostRecentFinishedRoundId =\n        status === LotteryStatus.CLAIMABLE ? currentLotteryIdAsInt : currentLotteryIdAsInt - 1\n      setLatestRoundId(mostRecentFinishedRoundId)\n      setSelectedRoundId(mostRecentFinishedRoundId.toString())\n    }\n  }, [currentLotteryId, status])\n\n  useEffect(() => {\n    setSelectedLotteryNodeData(null)\n\n    const fetchLotteryData = async () => {\n      const lotteryData = await fetchLottery(selectedRoundId)\n      const processedLotteryData = processLotteryResponse(lotteryData)\n      setSelectedLotteryNodeData(processedLotteryData)\n    }\n\n    timer.current = setInterval(() => {\n      if (selectedRoundId) {\n        fetchLotteryData()\n      }\n      clearInterval(timer.current)\n    }, 1000)\n\n    return () => clearInterval(timer.current)\n  }, [selectedRoundId, currentLotteryId, numRoundsFetched, dispatch])\n\n  const handleInputChange = (event) => {\n    const {\n      target: { value },\n    } = event\n    if (value) {\n      setSelectedRoundId(value)\n      if (parseInt(value, 10) <= 0) {\n        setSelectedRoundId('')\n      }\n      if (parseInt(value, 10) >= latestRoundId) {\n        setSelectedRoundId(latestRoundId.toString())\n      }\n    } else {\n      setSelectedRoundId('')\n    }\n  }\n\n  const handleArrowButtonPress = (targetRound) => {\n    if (targetRound) {\n      setSelectedRoundId(targetRound.toString())\n    } else {\n      // targetRound is NaN when the input is empty, the only button press that will trigger this func is 'forward one'\n      setSelectedRoundId('1')\n    }\n  }\n\n  return (\n    <StyledCard>\n      <StyledCardHeader>\n        <RoundSwitcher\n          isLoading={isLoading}\n          selectedRoundId={selectedRoundId}\n          mostRecentRound={latestRoundId}\n          handleInputChange={handleInputChange}\n          handleArrowButtonPress={handleArrowButtonPress}\n        />\n        <Box mt=\"8px\">\n          {selectedRoundId ? (\n            selectedLotteryNodeData?.endTime ? (\n              <Text fontSize=\"14px\">\n                {t('Drawn')} {getDrawnDate(locale, selectedLotteryNodeData.endTime)}\n              </Text>\n            ) : (\n              <Skeleton width=\"185px\" height=\"21px\" />\n            )\n          ) : null}\n        </Box>\n      </StyledCardHeader>\n      <PreviousRoundCardBody lotteryNodeData={selectedLotteryNodeData} lotteryId={selectedRoundId} />\n      <PreviousRoundCardFooter lotteryNodeData={selectedLotteryNodeData} lotteryId={selectedRoundId} />\n    </StyledCard>\n  )\n}\n\nexport default AllHistoryCard\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Flex, useModal, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetUserLotteriesGraphData, useLottery } from 'state/lottery/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport ClaimPrizesModal from './ClaimPrizesModal'\nimport useGetUnclaimedRewards, { FetchStatus } from '../hooks/useGetUnclaimedRewards'\n\nconst TicketImage = styled.img`\n  height: 60px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100px;\n  }\n`\n\nconst TornTicketImage = styled.img`\n  height: 54px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 84px;\n  }\n`\n\nconst CheckPrizesSection = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    isTransitioning,\n    currentRound: { status },\n  } = useLottery()\n  const { fetchAllRewards, unclaimedRewards, fetchStatus } = useGetUnclaimedRewards()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const [hasCheckedForRewards, setHasCheckedForRewards] = useState(false)\n  const [hasRewardsToClaim, setHasRewardsToClaim] = useState(false)\n  const [onPresentClaimModal] = useModal(<ClaimPrizesModal roundsToClaim={unclaimedRewards} />, false)\n  const isFetchingRewards = fetchStatus === FetchStatus.IN_PROGRESS\n  const lotteryIsNotClaimable = status === LotteryStatus.CLOSE\n  const isCheckNowDisabled = !userLotteryData.account || lotteryIsNotClaimable\n\n  useEffect(() => {\n    if (fetchStatus === FetchStatus.SUCCESS) {\n      // Manage showing unclaimed rewards modal once per page load / once per lottery state change\n      if (unclaimedRewards.length > 0 && !hasCheckedForRewards) {\n        setHasRewardsToClaim(true)\n        setHasCheckedForRewards(true)\n        onPresentClaimModal()\n      }\n\n      if (unclaimedRewards.length === 0 && !hasCheckedForRewards) {\n        setHasRewardsToClaim(false)\n        setHasCheckedForRewards(true)\n      }\n    }\n  }, [unclaimedRewards, hasCheckedForRewards, fetchStatus, onPresentClaimModal])\n\n  useEffect(() => {\n    // Clear local state on account change, or when lottery isTransitioning state changes\n    setHasRewardsToClaim(false)\n    setHasCheckedForRewards(false)\n  }, [account, isTransitioning])\n\n  const getBody = () => {\n    if (!account) {\n      return (\n        <Flex alignItems=\"center\" justifyContent=\"center\">\n          <TicketImage src=\"/images/lottery/ticket-l.png\" alt=\"lottery ticket\" />\n          <Flex mx={['4px', null, '16px']} flexDirection=\"column\" alignItems=\"center\">\n            <Heading textAlign=\"center\" color=\"#F4EEFF\">\n              {t('Connect your wallet')}\n            </Heading>\n            <Heading textAlign=\"center\" color=\"#F4EEFF\" mb=\"24px\">\n              {t(\"to check if you've won!\")}\n            </Heading>\n            <ConnectWalletButton width=\"190px\" />\n          </Flex>\n          <TicketImage src=\"/images/lottery/ticket-r.png\" alt=\"lottery ticket\" />\n        </Flex>\n      )\n    }\n    if (hasCheckedForRewards && !hasRewardsToClaim) {\n      return (\n        <Flex alignItems=\"center\" justifyContent=\"center\">\n          <TornTicketImage src=\"/images/lottery/torn-ticket-l.png\" alt=\"torn lottery ticket\" />\n          <Flex mx={['4px', null, '16px']} flexDirection=\"column\">\n            <Heading textAlign=\"center\" color=\"#F4EEFF\">\n              {t('No prizes to collect')}...\n            </Heading>\n            <Heading textAlign=\"center\" color=\"#F4EEFF\">\n              {t('Better luck next time!')}\n            </Heading>\n          </Flex>\n          <TornTicketImage src=\"/images/lottery/torn-ticket-r.png\" alt=\"torn lottery ticket\" />\n        </Flex>\n      )\n    }\n    if (hasCheckedForRewards && hasRewardsToClaim) {\n      return (\n        <Flex alignItems=\"center\" justifyContent=\"center\">\n          <TicketImage src=\"/images/lottery/ticket-l.png\" alt=\"lottery ticket\" />\n          <Flex mx={['4px', null, '16px']} flexDirection=\"column\">\n            <Heading textAlign=\"center\" color=\"#F4EEFF\">\n              {t('Congratulations!')}\n            </Heading>\n            <Heading textAlign=\"center\" color=\"#F4EEFF\">\n              {t('Why not play again')}\n            </Heading>\n          </Flex>\n          <TicketImage src=\"/images/lottery/ticket-r.png\" alt=\"lottery ticket\" />\n        </Flex>\n      )\n    }\n    const checkNowText = () => {\n      if (lotteryIsNotClaimable) {\n        return `${t('Calculating rewards')}...`\n      }\n      if (isFetchingRewards) {\n        return t('Checking')\n      }\n      return t('Check Now')\n    }\n    return (\n      <Flex alignItems=\"center\" justifyContent=\"center\">\n        <TicketImage src=\"/images/lottery/ticket-l.png\" alt=\"lottery ticket\" />\n        <Flex mx={['4px', null, '16px']} flexDirection=\"column\">\n          <Heading textAlign=\"center\" color=\"#F4EEFF\" mb=\"24px\">\n            {t('Are you a winner?')}\n          </Heading>\n          <Button\n            disabled={isCheckNowDisabled}\n            onClick={fetchAllRewards}\n            isLoading={isFetchingRewards}\n            endIcon={isFetchingRewards ? <AutoRenewIcon color=\"currentColor\" spin /> : null}\n          >\n            {checkNowText()}\n          </Button>\n        </Flex>\n        <TicketImage src=\"/images/lottery/ticket-r.png\" alt=\"lottery ticket\" />\n      </Flex>\n    )\n  }\n\n  return <Flex>{getBody()}</Flex>\n}\n\nexport default CheckPrizesSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Heading, useMatchBreakpoints, Link, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { BallWithNumber, MatchExampleA, MatchExampleB, PoolAllocationChart } from '../svgs'\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  height: 1px;\n  margin: 40px 0;\n  width: 100%;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-left: 8px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\nconst StepContainer = styled(Flex)`\n  gap: 24px;\n  width: 100%;\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst StyledStepCard = styled(Box)`\n  display: flex;\n  align-self: baseline;\n  position: relative;\n  background: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nconst StepCardInner = styled(Box)`\n  width: 100%;\n  padding: 24px;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\ntype Step = { title: string; subtitle: string; label: string }\n\nconst StepCard: React.FC<{ step: Step }> = ({ step }) => {\n  return (\n    <StyledStepCard width=\"100%\">\n      <StepCardInner height={['200px', '180px', null, '200px']}>\n        <Text mb=\"16px\" fontSize=\"12px\" bold textAlign=\"right\" textTransform=\"uppercase\">\n          {step.label}\n        </Text>\n        <Heading mb=\"16px\" scale=\"lg\" color=\"secondary\">\n          {step.title}\n        </Heading>\n        <Text color=\"textSubtle\">{step.subtitle}</Text>\n      </StepCardInner>\n    </StyledStepCard>\n  )\n}\n\nconst BallsContainer = styled(Flex)`\n  gap: 6.5px;\n  padding-left: 7px;\n  align-items: center;\n  width: 100%;\n`\n\nconst InlineLink = styled(Link)`\n  display: inline;\n`\n\nconst ExampleBalls = () => {\n  const { isDesktop } = useMatchBreakpoints()\n  const ballSize = isDesktop ? '24px' : '32px'\n  const fontSize = isDesktop ? '14px' : '16px'\n  return (\n    <BallsContainer>\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"yellow\" number=\"9\" />\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"green\" number=\"1\" />\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"aqua\" number=\"3\" />\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"teal\" number=\"6\" />\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"lilac\" number=\"6\" />\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"pink\" number=\"2\" />\n    </BallsContainer>\n  )\n}\n\nconst MatchExampleContainer = styled.div`\n  height: 100%;\n  display: grid;\n  grid-template-columns: 1fr 5fr;\n  grid-template-rows: 46px 64px 64px;\n`\n\nconst MatchExampleCard = () => {\n  const { isDark } = useTheme()\n  const { isXs } = useMatchBreakpoints()\n  const { t } = useTranslation()\n  const exampleWidth = isXs ? '210px' : '258px'\n  return (\n    <StyledStepCard width={['280px', '330px', '380px']}>\n      <StepCardInner height=\"220px\">\n        <MatchExampleContainer>\n          <Box />\n          <ExampleBalls />\n          <Text lineHeight=\"72px\" textAlign=\"right\" color=\"secondary\" bold mr=\"20px\">\n            {t('A')}\n          </Text>\n          <MatchExampleA width={exampleWidth} height=\"46px\" isDark={isDark} />\n          <Text lineHeight=\"72px\" textAlign=\"right\" color=\"secondary\" bold mr=\"20px\">\n            {t('B')}\n          </Text>\n          <MatchExampleB width={exampleWidth} height=\"46px\" isDark={isDark} />\n        </MatchExampleContainer>\n      </StepCardInner>\n    </StyledStepCard>\n  )\n}\n\nconst AllocationGrid = styled.div`\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  grid-auto-rows: max-content;\n  row-gap: 4px;\n`\n\nconst AllocationColorCircle = styled.div<{ color: string }>`\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n  background-color: ${({ color }) => color};\n`\n\nconst AllocationMatch: React.FC<{ color: string; text: string }> = ({ color, text }) => {\n  return (\n    <Flex alignItems=\"center\">\n      <AllocationColorCircle color={color} />\n      <Text color=\"textSubtle\">{text}</Text>\n    </Flex>\n  )\n}\n\nconst PoolAllocations = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledStepCard width={['280px', '330px', '380px']}>\n      <StepCardInner height=\"auto\">\n        <Flex mb=\"32px\" justifyContent=\"center\">\n          <PoolAllocationChart width=\"100px\" height=\"100px\" />\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n            {t('Digits matched')}\n          </Text>\n          <Text fontSize=\"12px\" color=\"secondary\" bold textAlign=\"right\" textTransform=\"uppercase\">\n            {t('Prize pool allocation')}\n          </Text>\n        </Flex>\n        <AllocationGrid>\n          <AllocationMatch color=\"#FFE362\" text={t('Matches first %digits%', { digits: 1 })} />\n          <Text textAlign=\"right\" bold>\n            2%\n          </Text>\n          <AllocationMatch color=\"#85C54E\" text={t('Matches first %digits%', { digits: 2 })} />\n          <Text textAlign=\"right\" bold>\n            3%\n          </Text>\n          <AllocationMatch color=\"#028E75\" text={t('Matches first %digits%', { digits: 3 })} />\n          <Text textAlign=\"right\" bold>\n            5%\n          </Text>\n          <AllocationMatch color=\"#36E8F5\" text={t('Matches first %digits%', { digits: 4 })} />\n          <Text textAlign=\"right\" bold>\n            10%\n          </Text>\n          <AllocationMatch color=\"#A881FC\" text={t('Matches first %digits%', { digits: 5 })} />\n          <Text textAlign=\"right\" bold>\n            20%\n          </Text>\n          <AllocationMatch color=\"#D750B2\" text={t('Matches all 6')} />\n          <Text textAlign=\"right\" bold>\n            40%\n          </Text>\n          <AllocationMatch color=\"#BDC2C4\" text={t('Burn Pool')} />\n          <Text textAlign=\"right\" bold>\n            20%\n          </Text>\n        </AllocationGrid>\n      </StepCardInner>\n    </StyledStepCard>\n  )\n}\n\nconst GappedFlex = styled(Flex)`\n  gap: 24px;\n`\n\nconst HowToPlay: React.FC = () => {\n  const { t } = useTranslation()\n\n  const steps: Step[] = [\n    {\n      label: t('Step %number%', { number: 1 }),\n      title: t('Buy Tickets'),\n      subtitle: t('Prices are set when the round starts, equal to 5 USD in MByte per ticket.'),\n    },\n    {\n      label: t('Step %number%', { number: 2 }),\n      title: t('Wait for the Draw'),\n      subtitle: t('There are two draws every day: one every 12 hours.'),\n    },\n    {\n      label: t('Step %number%', { number: 3 }),\n      title: t('Check for Prizes'),\n      subtitle: t('Once the round’s over, come back to the page and check to see if you’ve won!'),\n    },\n  ]\n  return (\n    <Box width=\"100%\">\n      <Flex mb=\"40px\" alignItems=\"center\" flexDirection=\"column\">\n        <Heading mb=\"24px\" scale=\"xl\" color=\"secondary\">\n          {t('How to Play')}\n        </Heading>\n        <Text textAlign=\"center\">\n          {t(\n            'If the digits on your tickets match the winning numbers in the correct order, you win a portion of the prize pool.',\n          )}\n        </Text>\n        <Text>{t('Simple!')}</Text>\n      </Flex>\n      <StepContainer>\n        {steps.map((step) => (\n          <StepCard key={step.label} step={step} />\n        ))}\n      </StepContainer>\n      <Divider />\n      <GappedFlex flexDirection={['column', 'column', 'column', 'row']}>\n        <Flex flex=\"2\" flexDirection=\"column\">\n          <Heading mb=\"24px\" scale=\"lg\" color=\"secondary\">\n            {t('Winning Criteria')}\n          </Heading>\n          <Heading mb=\"24px\" scale=\"md\">\n            {t('The digits on your ticket must match in the correct order to win.')}\n          </Heading>\n          <Text mb=\"16px\" color=\"textSubtle\">\n            {t('Here’s an example lottery draw, with two tickets, A and B.')}\n          </Text>\n          <BulletList>\n            <li>\n              <Text display=\"inline\" color=\"textSubtle\">\n                {t(\n                  'Ticket A: The first 3 digits and the last 2 digits match, but the 4th digit is wrong, so this ticket only wins a “Match first 3” prize.',\n                )}\n              </Text>\n            </li>\n            <li>\n              <Text display=\"inline\" color=\"textSubtle\">\n                {t(\n                  'Ticket B: Even though the last 5 digits match, the first digit is wrong, so this ticket doesn’t win a prize.',\n                )}\n              </Text>\n            </li>\n          </BulletList>\n          <Text mt=\"16px\" color=\"textSubtle\">\n            {t(\n              'Prize brackets don’t ‘stack’: if you match the first 3 digits in order, you’ll only win prizes from the ‘Match 3’ bracket, and not from ‘Match 1’ and ‘Match 2’.',\n            )}\n          </Text>\n        </Flex>\n        <Flex flex=\"1\" justifyContent=\"center\">\n          <MatchExampleCard />\n        </Flex>\n      </GappedFlex>\n      <Divider />\n      <GappedFlex flexDirection={['column', 'column', 'column', 'row']}>\n        <Flex flex=\"2\" flexDirection=\"column\">\n          <Heading mb=\"24px\" scale=\"lg\" color=\"secondary\">\n            {t('Prize Funds')}\n          </Heading>\n          <Text color=\"textSubtle\">{t('The prizes for each lottery round come from three sources:')}</Text>\n          <Heading my=\"16px\" scale=\"md\">\n            {t('Ticket Purchases')}\n          </Heading>\n          <BulletList>\n            <li>\n              <Text display=\"inline\" color=\"textSubtle\">\n                {t('100% of the MByte paid by people buying tickets that round goes back into the prize pools.')}\n              </Text>\n            </li>\n          </BulletList>\n          <Heading my=\"16px\" scale=\"md\">\n            {t('Rollover Prizes')}\n          </Heading>\n          <BulletList>\n            <li>\n              <Text display=\"inline\" color=\"textSubtle\">\n                {t(\n                  'After every round, if nobody wins in one of the prize brackets, the unclaimed MByte for that bracket rolls over into the next round and are redistributed among the prize pools.',\n                )}\n              </Text>\n            </li>\n          </BulletList>\n          <Heading my=\"16px\" scale=\"md\">\n            {t('MByte Injections')}\n          </Heading>\n          <BulletList>\n            <li>\n              <Text display=\"inline\" color=\"textSubtle\">\n                {t(\n                  'An average total of 35,000 MByte from the treasury is added to lottery rounds over the course of a week. This MByte is of course also included in rollovers! Read more in our guide to ',\n                )}\n                <InlineLink href=\"https://docs.pancakeswap.finance/tokenomics/cake/cake-tokenomics\">\n                  {t('MByte Tokenomics')}\n                </InlineLink>\n              </Text>\n            </li>\n          </BulletList>\n        </Flex>\n        <Flex flex=\"1\" justifyContent=\"center\">\n          <PoolAllocations />\n        </Flex>\n      </GappedFlex>\n      <Divider />\n      <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection={['column', 'column', 'row']}>\n        <Image width={240} height={172} src=\"/images/lottery/tombola.png\" alt=\"tombola bunny\" mr=\"8px\" mb=\"16px\" />\n        <Flex maxWidth=\"300px\" flexDirection=\"column\">\n          <Heading mb=\"16px\" scale=\"md\">\n            {t('Still got questions?')}\n          </Heading>\n          <Text>\n            {t('Check our in-depth guide on')}{' '}\n            <InlineLink href=\"https://docs.pancakeswap.finance/products/lottery/lottery-guide\">\n              {t('how to play the Metaprofitsdao lottery!')}\n            </InlineLink>\n          </Text>\n        </Flex>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default HowToPlay\n","import { useWeb3React } from '@web3-react/core'\nimport { useState } from 'react'\nimport { useAppDispatch } from 'state'\nimport { fetchAdditionalUserLotteries } from 'state/lottery'\nimport { MAX_USER_LOTTERIES_REQUEST_SIZE } from 'state/lottery/getUserLotteryData'\n\nconst useShowMoreUserRounds = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const [numUserRoundsRequested, setNumUserRoundsRequested] = useState(MAX_USER_LOTTERIES_REQUEST_SIZE)\n\n  const handleShowMoreUserRounds = () => {\n    dispatch(fetchAdditionalUserLotteries({ account, skip: numUserRoundsRequested }))\n    setNumUserRoundsRequested(numUserRoundsRequested + MAX_USER_LOTTERIES_REQUEST_SIZE)\n  }\n\n  return { numUserRoundsRequested, handleShowMoreUserRounds }\n}\n\nexport default useShowMoreUserRounds\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Heading, Skeleton } from '@pancakeswap/uikit'\nimport { LotteryStatus } from 'config/constants/types'\nimport PageSection from 'components/PageSection'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { useFetchLottery, useLottery } from 'state/lottery/hooks'\nimport {\n  TITLE_BG,\n  GET_TICKETS_BG,\n  FINISHED_ROUNDS_BG,\n  FINISHED_ROUNDS_BG_DARK,\n  CHECK_PRIZES_BG,\n} from './pageSectionStyles'\nimport useGetNextLotteryEvent from './hooks/useGetNextLotteryEvent'\nimport useStatusTransitions from './hooks/useStatusTransitions'\nimport Hero from './components/Hero'\nimport NextDrawCard from './components/NextDrawCard'\nimport Countdown from './components/Countdown'\nimport HistoryTabMenu from './components/HistoryTabMenu'\nimport YourHistoryCard from './components/YourHistoryCard'\nimport AllHistoryCard from './components/AllHistoryCard'\nimport CheckPrizesSection from './components/CheckPrizesSection'\nimport HowToPlay from './components/HowToPlay'\nimport useShowMoreUserHistory from './hooks/useShowMoreUserRounds'\n\nconst LotteryPage = styled.div`\n  min-height: calc(100vh - 64px);\n`\n\nconst Lottery = () => {\n  useFetchLottery()\n  useStatusTransitions()\n  const { t } = useTranslation()\n  const { isDark, theme } = useTheme()\n  const {\n    currentRound: { status, endTime },\n  } = useLottery()\n  const [historyTabMenuIndex, setHistoryTabMenuIndex] = useState(0)\n  const endTimeAsInt = parseInt(endTime, 10)\n  const { nextEventTime, postCountdownText, preCountdownText } = useGetNextLotteryEvent(endTimeAsInt, status)\n  const { numUserRoundsRequested, handleShowMoreUserRounds } = useShowMoreUserHistory()\n\n  return (\n    <LotteryPage>\n      <PageSection background={TITLE_BG} index={1} hasCurvedDivider={false}>\n        <Hero />\n      </PageSection>\n      <PageSection\n        containerProps={{ style: { marginTop: '-30px' } }}\n        background={GET_TICKETS_BG}\n        concaveDivider\n        clipFill={{ light: '#7645D9' }}\n        dividerPosition=\"top\"\n        index={2}\n      >\n        <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\" pt=\"24px\">\n          {status === LotteryStatus.OPEN && (\n            <Heading scale=\"xl\" color=\"#ffffff\" mb=\"24px\" textAlign=\"center\">\n              {t('Get your tickets now!')}\n            </Heading>\n          )}\n          <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"48px\">\n            {nextEventTime && (postCountdownText || preCountdownText) ? (\n              <Countdown\n                nextEventTime={nextEventTime}\n                postCountdownText={postCountdownText}\n                preCountdownText={preCountdownText}\n              />\n            ) : (\n              <Skeleton height=\"41px\" width=\"250px\" />\n            )}\n          </Flex>\n          <NextDrawCard />\n        </Flex>\n      </PageSection>\n      <PageSection background={CHECK_PRIZES_BG} hasCurvedDivider={false} index={2}>\n        <CheckPrizesSection />\n      </PageSection>\n      <PageSection\n        innerProps={{ style: { margin: '0', width: '100%' } }}\n        background={isDark ? FINISHED_ROUNDS_BG_DARK : FINISHED_ROUNDS_BG}\n        hasCurvedDivider={false}\n        index={2}\n      >\n        <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n          <Heading mb=\"24px\" scale=\"xl\">\n            {t('Finished Rounds')}\n          </Heading>\n          <Box mb=\"24px\">\n            <HistoryTabMenu\n              activeIndex={historyTabMenuIndex}\n              setActiveIndex={(index) => setHistoryTabMenuIndex(index)}\n            />\n          </Box>\n          {historyTabMenuIndex === 0 ? (\n            <AllHistoryCard />\n          ) : (\n            <YourHistoryCard\n              handleShowMoreClick={handleShowMoreUserRounds}\n              numUserRoundsRequested={numUserRoundsRequested}\n            />\n          )}\n        </Flex>\n      </PageSection>\n      <PageSection\n        dividerPosition=\"top\"\n        dividerFill={{ light: theme.colors.background }}\n        clipFill={{ light: '#9A9FD0', dark: '#66578D' }}\n        index={2}\n      >\n        <HowToPlay />\n      </PageSection>\n    </LotteryPage>\n  )\n}\n\nexport default Lottery\n","export const TITLE_BG = 'linear-gradient(180deg, #7645D9 0%, #452A7A 100%)'\nexport const GET_TICKETS_BG = 'linear-gradient(180deg, #7645D9 0%, #5121B1 100%)'\nexport const CHECK_PRIZES_BG = 'linear-gradient(139.73deg, #313D5C 0%, #3D2A54 100%)'\nexport const FINISHED_ROUNDS_BG = 'linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%)'\nexport const FINISHED_ROUNDS_BG_DARK = 'linear-gradient(180deg, #434575 0%, #66578D 100%)'\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt' }\n  | { type: 'approve_error' }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt' }\n  | { type: 'confirm_error' }\n\ninterface State {\n  approvalState: LoadingState\n  confirmState: LoadingState\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  confirmState: 'idle',\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n      }\n    default:\n      return state\n  }\n}\n\ninterface OnSuccessProps {\n  state: State\n  receipt: ethers.providers.TransactionReceipt\n}\n\ninterface ApproveConfirmTransaction {\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\n  onConfirm: (params?) => Promise<ethers.providers.TransactionResponse>\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: ({ state, receipt }: OnSuccessProps) => void\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n  onApproveSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    hasApproveFailed: state.approvalState === 'fail',\n    hasConfirmFailed: state.confirmState === 'fail',\n    handleApprove: async () => {\n      try {\n        const tx = await onApprove()\n        dispatch({ type: 'approve_sending' })\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt' })\n          onApproveSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handleConfirm: async (params = {}) => {\n      dispatch({ type: 'confirm_sending' })\n      try {\n        const tx = await onConfirm(params)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'confirm_receipt' })\n          onSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'confirm_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n"],"sourceRoot":""}
{"version":3,"sources":["state/voting/hooks.ts","views/Voting/components/Proposals/tags.tsx","views/Voting/components/DesktopImage.tsx","views/Voting/components/Hero.tsx","views/Voting/components/Footer.tsx","views/Voting/components/Proposals/ProposalsLoading.tsx","views/Voting/components/Proposals/TabMenu.tsx","views/Voting/components/Proposals/TimeFrame.tsx","views/Voting/components/Proposals/ProposalRow.tsx","views/Voting/components/Proposals/Filters.tsx","views/Voting/components/Proposals/Proposals.tsx","views/Voting/index.tsx","views/Voting/helpers.ts","views/Voting/config.ts","components/Tags.tsx"],"names":["useGetProposals","proposals","useSelector","state","voting","Object","values","useGetProposal","proposalId","useGetVotes","votes","filter","vote","_inValid","useGetVotingStateLoadingStatus","voteLoadingStatus","useGetProposalLoadingStatus","proposalLoadingStatus","ProposalStateTag","proposalState","props","ProposalState","ACTIVE","PENDING","ProposalTypeTag","isCoreProposal","DesktopImage","styled","Image","theme","mediaQueries","lg","StyledHero","Box","colors","gradients","bubblegum","Hero","t","useTranslation","Container","alignItems","justifyContent","pr","as","scale","color","mb","startIcon","width","Link","to","src","height","StyledFooter","Footer","Row","Flex","cardBorder","Wrapper","div","ProposalsLoading","times","PROPOSALS_TO_SHOW","map","index","py","px","style","flex","StyledTabMenu","input","getIndexFromType","proposalType","ProposalType","COMMUNITY","ALL","CORE","TabMenu","onTypeChange","activeIndex","onItemClick","getTypeFromIndex","mr","getFormattedDate","timestamp","date","toDate","format","TimeFrame","startDate","endDate","textProps","fontSize","ml","CLOSED","StyledProposalRow","dropdown","ProposalRow","proposal","votingLink","id","bold","title","start","end","variant","StyledFilters","attrs","FilterLabel","label","options","value","Filters","filterState","onFilterChange","isLoading","checked","onChange","evt","radioValue","currentTarget","disabled","Proposals","useState","setState","proposalStatus","dispatch","useAppDispatch","VotingStateLoadingStatus","LOADING","isIdle","IDLE","useEffect","fetchProposals","first","filteredProposals","filterProposalsByState","filterProposalsByType","newProposalType","prevState","newFilterState","length","p","Chrome","Content","Voting","Page","flexDirection","minHeight","ADMINS","includes","author","toLowerCase","generateMetaData","plugins","network","strategies","name","params","symbol","address","tokens","cake","decimals","generatePayloadData","version","SNAPSHOT_VERSION","Date","now","toFixed","space","PANCAKE_SPACE","sendSnapshotData","message","a","fetch","SNAPSHOT_HUB_API","method","headers","Accept","body","JSON","stringify","response","ok","json","error","Error","error_description","data","getVotingPower","account","poolAddresses","block","simpleRpcProvider","getBlockNumber","blockNumber","SNAPSHOT_VOTING_API","calculateVoteResults","reduce","accum","choiceText","choices","choice","getTotalFromVotes","power","parseFloat","metadata","votingPower","IPFS_GATEWAY","VOTE_THRESHOLD","CoreTag","outline","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag"],"mappings":"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","file":"static/js/26.aab605a7.chunk.js","sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { State } from '../types'\r\n\r\n// Voting\r\nexport const useGetProposals = () => {\r\n  const proposals = useSelector((state: State) => state.voting.proposals)\r\n  return Object.values(proposals)\r\n}\r\n\r\nexport const useGetProposal = (proposalId: string) => {\r\n  const proposal = useSelector((state: State) => state.voting.proposals[proposalId])\r\n  return proposal\r\n}\r\n\r\nexport const useGetVotes = (proposalId: string) => {\r\n  const votes = useSelector((state: State) => state.voting.votes[proposalId])\r\n  return votes ? votes.filter((vote) => vote._inValid !== true) : []\r\n}\r\n\r\nexport const useGetVotingStateLoadingStatus = () => {\r\n  const votingStatus = useSelector((state: State) => state.voting.voteLoadingStatus)\r\n  return votingStatus\r\n}\r\n\r\nexport const useGetProposalLoadingStatus = () => {\r\n  const votingStatus = useSelector((state: State) => state.voting.proposalLoadingStatus)\r\n  return votingStatus\r\n}\r\n","import React from 'react'\r\nimport { TagProps } from '@pancakeswap/uikit'\r\nimport { ClosedTag, CommunityTag, CoreTag, SoonTag, VoteNowTag } from 'components/Tags'\r\nimport { ProposalState } from 'state/types'\r\n\r\ninterface ProposalStateTagProps extends TagProps {\r\n  proposalState: ProposalState\r\n}\r\n\r\nexport const ProposalStateTag: React.FC<ProposalStateTagProps> = ({ proposalState, ...props }) => {\r\n  if (proposalState === ProposalState.ACTIVE) {\r\n    return <VoteNowTag {...props} />\r\n  }\r\n\r\n  if (proposalState === ProposalState.PENDING) {\r\n    return <SoonTag {...props} />\r\n  }\r\n\r\n  return <ClosedTag {...props} />\r\n}\r\n\r\ninterface ProposalTypeTagProps extends TagProps {\r\n  isCoreProposal: boolean\r\n}\r\n\r\nexport const ProposalTypeTag: React.FC<ProposalTypeTagProps> = ({ isCoreProposal, ...props }) => {\r\n  if (isCoreProposal) {\r\n    return <CoreTag {...props} />\r\n  }\r\n\r\n  return <CommunityTag {...props} />\r\n}\r\n","import { Image } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst DesktopImage = styled(Image)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nexport default DesktopImage\r\n","import React from 'react'\r\nimport { Box, Button, Flex, Heading, ProposalIcon } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport DesktopImage from './DesktopImage'\r\n\r\nconst StyledHero = styled(Box)`\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n  padding-bottom: 32px;\r\n  padding-top: 32px;\r\n`\r\n\r\nconst Hero = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <Container>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Box pr=\"32px\">\r\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"16px\">\r\n              {t('Voting')}\r\n            </Heading>\r\n            <Heading as=\"h3\" scale=\"lg\" mb=\"16px\">\r\n              {t('Have your say in the future of the MintySwap Ecosystem')}\r\n            </Heading>\r\n            <Button\r\n              startIcon={<ProposalIcon color=\"currentColor\" width=\"24px\" />}\r\n              as={Link}\r\n              to=\"/voting/proposal/create\"\r\n            >\r\n              {t('Make a Proposal')}\r\n            </Button>\r\n          </Box>\r\n          <DesktopImage src=\"/images/voting/voting-presents.png\" width={361} height={214} />\r\n        </Flex>\r\n      </Container>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React from 'react'\r\nimport { Box, Button, Text, Heading, ProposalIcon, Flex } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport DesktopImage from './DesktopImage'\r\n\r\nconst StyledFooter = styled(Box)`\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n  padding-bottom: 32px;\r\n  padding-top: 32px;\r\n`\r\n\r\nconst Footer = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledFooter>\r\n      <Container>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Box pr=\"32px\">\r\n            <Heading as=\"h2\" scale=\"lg\" mb=\"16px\">\r\n              {t('Got a suggestion?')}\r\n            </Heading>\r\n            <Text as=\"p\">\r\n              {t('Community proposals are a great way to see how the community feels about your ideas.')}\r\n            </Text>\r\n            <Text as=\"p\" mb=\"16px\">\r\n              {t(\r\n                \"They won't necessarily be implemented if the community votes successful, but suggestions with a lot of community support may be made into Core proposals.\",\r\n              )}\r\n            </Text>\r\n\r\n            <Button\r\n              startIcon={<ProposalIcon color=\"currentColor\" width=\"24px\" />}\r\n              as={Link}\r\n              to=\"/voting/proposal/create\"\r\n            >\r\n              {t('Make a Proposal')}\r\n            </Button>\r\n          </Box>\r\n          <DesktopImage src=\"/images/voting/voting-bunny.png\" width={173} height={234} />\r\n        </Flex>\r\n      </Container>\r\n    </StyledFooter>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Box, Flex, Skeleton } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport times from 'lodash/times'\r\nimport { PROPOSALS_TO_SHOW } from '../../config'\r\n\r\nconst Row = styled(Flex)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  ${Row}:last-child {\r\n    border-bottom: 0;\r\n  }\r\n`\r\n\r\nconst ProposalsLoading = () => {\r\n  return (\r\n    <Wrapper>\r\n      {times(PROPOSALS_TO_SHOW).map((index) => (\r\n        <Row key={index} alignItems=\"center\" justifyContent=\"space-between\" py=\"16px\" px=\"24px\">\r\n          <Box style={{ flex: 1 }}>\r\n            <Skeleton height=\"21px\" width=\"70%\" mb=\"4px\" />\r\n            <Skeleton height=\"21px\" width=\"30%\" mb=\"4px\" />\r\n            <Skeleton height=\"21px\" width=\"40%\" />\r\n          </Box>\r\n          <Skeleton height=\"32px\" width=\"32px\" />\r\n        </Row>\r\n      ))}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ProposalsLoading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { TabMenu as UIKitTabMenu, Tab, Flex, VerifiedIcon, CommunityIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { ProposalType } from 'state/types'\r\n\r\ninterface TabMenuProps {\r\n  proposalType: ProposalType\r\n  onTypeChange: (proposalType: ProposalType) => void\r\n}\r\n\r\nconst StyledTabMenu = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  padding-top: 16px;\r\n`\r\n\r\nconst getIndexFromType = (proposalType: ProposalType) => {\r\n  switch (proposalType) {\r\n    case ProposalType.COMMUNITY:\r\n      return 1\r\n    case ProposalType.ALL:\r\n      return 2\r\n    case ProposalType.CORE:\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst getTypeFromIndex = (index: number) => {\r\n  switch (index) {\r\n    case 1:\r\n      return ProposalType.COMMUNITY\r\n    case 2:\r\n      return ProposalType.ALL\r\n    default:\r\n      return ProposalType.CORE\r\n  }\r\n}\r\n\r\nconst TabMenu: React.FC<TabMenuProps> = ({ proposalType, onTypeChange }) => {\r\n  const { t } = useTranslation()\r\n  const handleItemClick = (index: number) => {\r\n    onTypeChange(getTypeFromIndex(index))\r\n  }\r\n\r\n  return (\r\n    <StyledTabMenu>\r\n      <UIKitTabMenu activeIndex={getIndexFromType(proposalType)} onItemClick={handleItemClick}>\r\n        <Tab>\r\n          <Flex alignItems=\"center\">\r\n            <VerifiedIcon color=\"currentColor\" mr=\"4px\" />\r\n            {t('Core')}\r\n          </Flex>\r\n        </Tab>\r\n        <Tab>\r\n          {' '}\r\n          <Flex alignItems=\"center\">\r\n            <CommunityIcon color=\"currentColor\" mr=\"4px\" />\r\n            {t('Community')}\r\n          </Flex>\r\n        </Tab>\r\n        <Tab>All</Tab>\r\n      </UIKitTabMenu>\r\n    </StyledTabMenu>\r\n  )\r\n}\r\n\r\nexport default TabMenu\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { toDate, format } from 'date-fns'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { ProposalState } from 'state/types'\r\n\r\ninterface TimeFrameProps {\r\n  startDate: number\r\n  endDate: number\r\n  proposalState: ProposalState\r\n}\r\n\r\nconst getFormattedDate = (timestamp: number) => {\r\n  const date = toDate(timestamp * 1000)\r\n  return format(date, 'MMM do, yyyy HH:mm')\r\n}\r\n\r\nconst TimeFrame: React.FC<TimeFrameProps> = ({ startDate, endDate, proposalState }) => {\r\n  const { t } = useTranslation()\r\n  const textProps = {\r\n    fontSize: '16px',\r\n    color: 'textSubtle',\r\n    ml: '8px',\r\n  }\r\n\r\n  if (proposalState === ProposalState.CLOSED) {\r\n    return <Text {...textProps}>{t('Ended %date%', { date: getFormattedDate(endDate) })}</Text>\r\n  }\r\n\r\n  if (proposalState === ProposalState.PENDING) {\r\n    return <Text {...textProps}>{t('Starts %date%', { date: getFormattedDate(startDate) })}</Text>\r\n  }\r\n\r\n  return <Text {...textProps}>{t('Ends %date%', { date: getFormattedDate(endDate) })}</Text>\r\n}\r\n\r\nexport default TimeFrame\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ArrowForwardIcon, Box, IconButton, Flex, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { Proposal } from 'state/types'\r\nimport { isCoreProposal } from '../../helpers'\r\nimport TimeFrame from './TimeFrame'\r\nimport { ProposalStateTag, ProposalTypeTag } from './tags'\r\n\r\ninterface ProposalRowProps {\r\n  proposal: Proposal\r\n}\r\n\r\nconst StyledProposalRow = styled(Link)`\r\n  align-items: center;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  display: flex;\r\n  padding: 16px 24px;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.dropdown};\r\n  }\r\n`\r\n\r\nconst ProposalRow: React.FC<ProposalRowProps> = ({ proposal }) => {\r\n  const votingLink = `/voting/proposal/${proposal.id}`\r\n\r\n  return (\r\n    <StyledProposalRow to={votingLink}>\r\n      <Box as=\"span\" style={{ flex: 1 }}>\r\n        <Text bold mb=\"8px\">\r\n          {proposal.title}\r\n        </Text>\r\n        <Flex alignItems=\"center\" mb=\"8px\">\r\n          <TimeFrame startDate={proposal.start} endDate={proposal.end} proposalState={proposal.state} />\r\n        </Flex>\r\n        <Flex alignItems=\"center\">\r\n          <ProposalStateTag proposalState={proposal.state} />\r\n          <ProposalTypeTag isCoreProposal={isCoreProposal(proposal)} ml=\"8px\" />\r\n        </Flex>\r\n      </Box>\r\n      <IconButton variant=\"text\">\r\n        <ArrowForwardIcon width=\"24px\" />\r\n      </IconButton>\r\n    </StyledProposalRow>\r\n  )\r\n}\r\n\r\nexport default ProposalRow\r\n","import React, { ChangeEvent } from 'react'\r\nimport { Flex, Radio, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { ProposalState } from 'state/types'\r\n\r\ninterface FiltersProps {\r\n  filterState: ProposalState\r\n  onFilterChange: (filterState: ProposalState) => void\r\n  isLoading: boolean\r\n}\r\n\r\nconst StyledFilters = styled(Flex).attrs({ alignItems: 'center' })`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 16px 24px;\r\n`\r\n\r\nconst FilterLabel = styled.label`\r\n  align-items: center;\r\n  cursor: pointer;\r\n  display: flex;\r\n  margin-right: 16px;\r\n`\r\n\r\nconst options = [\r\n  { value: ProposalState.ACTIVE, label: 'Vote Now' },\r\n  { value: ProposalState.PENDING, label: 'Soon' },\r\n  { value: ProposalState.CLOSED, label: 'Closed' },\r\n]\r\n\r\nconst Filters: React.FC<FiltersProps> = ({ filterState, onFilterChange, isLoading }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledFilters>\r\n      {options.map(({ value, label }) => {\r\n        const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n          const { value: radioValue } = evt.currentTarget\r\n          onFilterChange(radioValue as ProposalState)\r\n        }\r\n\r\n        return (\r\n          <FilterLabel key={label}>\r\n            <Radio\r\n              scale=\"sm\"\r\n              value={value}\r\n              checked={filterState === value}\r\n              onChange={handleChange}\r\n              disabled={isLoading}\r\n            />\r\n            <Text ml=\"8px\">{t(label)}</Text>\r\n          </FilterLabel>\r\n        )\r\n      })}\r\n    </StyledFilters>\r\n  )\r\n}\r\n\r\nexport default Filters\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Box, Breadcrumbs, Card, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchProposals } from 'state/voting'\r\nimport { useGetProposalLoadingStatus, useGetProposals } from 'state/voting/hooks'\r\nimport { ProposalState, ProposalType, VotingStateLoadingStatus } from 'state/types'\r\nimport { filterProposalsByState, filterProposalsByType } from '../../helpers'\r\nimport ProposalsLoading from './ProposalsLoading'\r\nimport TabMenu from './TabMenu'\r\nimport ProposalRow from './ProposalRow'\r\nimport Filters from './Filters'\r\n\r\ninterface State {\r\n  proposalType: ProposalType\r\n  filterState: ProposalState\r\n}\r\n\r\nconst Proposals = () => {\r\n  const { t } = useTranslation()\r\n  const [state, setState] = useState<State>({\r\n    proposalType: ProposalType.CORE,\r\n    filterState: ProposalState.ACTIVE,\r\n  })\r\n  const proposalStatus = useGetProposalLoadingStatus()\r\n  const proposals = useGetProposals()\r\n  const dispatch = useAppDispatch()\r\n\r\n  const { proposalType, filterState } = state\r\n  const isLoading = proposalStatus === VotingStateLoadingStatus.LOADING\r\n  const isIdle = proposalStatus === VotingStateLoadingStatus.IDLE\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProposals({ first: 1000, state: filterState }))\r\n  }, [filterState, dispatch])\r\n\r\n  const handleProposalTypeChange = (newProposalType: ProposalType) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      proposalType: newProposalType,\r\n    }))\r\n  }\r\n\r\n  const handleFilterChange = (newFilterState: ProposalState) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      filterState: newFilterState,\r\n    }))\r\n  }\r\n\r\n  const filteredProposals = filterProposalsByState(filterProposalsByType(proposals, proposalType), filterState)\r\n\r\n  return (\r\n    <Container py=\"40px\">\r\n      <Box mb=\"48px\">\r\n        <Breadcrumbs>\r\n          <Link to=\"/\">{t('Home')}</Link>\r\n          <Text>{t('Voting')}</Text>\r\n        </Breadcrumbs>\r\n      </Box>\r\n      <Heading as=\"h2\" scale=\"xl\" mb=\"32px\" id=\"voting-proposals\">\r\n        {t('Proposals')}\r\n      </Heading>\r\n      <Card>\r\n        <TabMenu proposalType={proposalType} onTypeChange={handleProposalTypeChange} />\r\n        <Filters filterState={filterState} onFilterChange={handleFilterChange} isLoading={isLoading} />\r\n        {isLoading && <ProposalsLoading />}\r\n        {isIdle &&\r\n          filteredProposals.length > 0 &&\r\n          filteredProposals.map((proposal) => {\r\n            return <ProposalRow key={proposal.id} proposal={proposal} />\r\n          })}\r\n        {isIdle && filteredProposals.length === 0 && (\r\n          <Flex alignItems=\"center\" justifyContent=\"center\" p=\"32px\">\r\n            <Heading as=\"h5\">{t('No proposals found')}</Heading>\r\n          </Flex>\r\n        )}\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Proposals\r\n","import React from 'react'\r\nimport { Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { PageMeta } from 'components/Layout/Page'\r\nimport Hero from './components/Hero'\r\nimport Footer from './components/Footer'\r\nimport { Proposals } from './components/Proposals'\r\n\r\nconst Chrome = styled.div`\r\n  flex: none;\r\n`\r\n\r\nconst Content = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n`\r\n\r\nconst Voting = () => {\r\n  return (\r\n    <>\r\n      <PageMeta />\r\n      <Flex flexDirection=\"column\" minHeight=\"calc(100vh - 64px)\">\r\n        <Chrome>\r\n          <Hero />\r\n        </Chrome>\r\n        <Content>\r\n          <Proposals />\r\n        </Content>\r\n        <Chrome>\r\n          <Footer />\r\n        </Chrome>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Voting\r\n","import { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { ADMINS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\r\n\r\nexport const isCoreProposal = (proposal: Proposal) => {\r\n  return ADMINS.includes(proposal.author.toLowerCase())\r\n}\r\n\r\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\r\n  switch (proposalType) {\r\n    case ProposalType.COMMUNITY:\r\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\r\n    case ProposalType.CORE:\r\n      return proposals.filter((proposal) => isCoreProposal(proposal))\r\n    case ProposalType.ALL:\r\n    default:\r\n      return proposals\r\n  }\r\n}\r\n\r\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\r\n  return proposals.filter((proposal) => proposal.state === state)\r\n}\r\n\r\nexport interface Message {\r\n  address: string\r\n  msg: string\r\n  sig: string\r\n}\r\n\r\n/**\r\n * Generates metadata required by snapshot to validate payload\r\n */\r\nexport const generateMetaData = () => {\r\n  return {\r\n    plugins: {},\r\n    network: 56,\r\n    strategies: [{ name: 'cake', params: { symbol: 'CAKE', address: tokens.cake.address, decimals: 18 } }],\r\n  }\r\n}\r\n\r\n/**\r\n * Returns data that is required on all snapshot payloads\r\n */\r\nexport const generatePayloadData = () => {\r\n  return {\r\n    version: SNAPSHOT_VERSION,\r\n    timestamp: (Date.now() / 1e3).toFixed(),\r\n    space: PANCAKE_SPACE,\r\n  }\r\n}\r\n\r\n/**\r\n * General function to send commands to the snapshot api\r\n */\r\nexport const sendSnapshotData = async (message: Message) => {\r\n  const response = await fetch(SNAPSHOT_HUB_API, {\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(message),\r\n  })\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json()\r\n    throw new Error(error?.error_description)\r\n  }\r\n\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      address: account,\r\n      block: blockNumber,\r\n      poolAddresses,\r\n    }),\r\n  })\r\n  const data = await response.json()\r\n  return data.data\r\n}\r\n\r\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\r\n  return votes.reduce((accum, vote) => {\r\n    const choiceText = vote.proposal.choices[vote.choice - 1]\r\n\r\n    return {\r\n      ...accum,\r\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getTotalFromVotes = (votes: Vote[]) => {\r\n  return votes.reduce((accum, vote) => {\r\n    let power = parseFloat(vote.metadata?.votingPower)\r\n\r\n    if (!power) {\r\n      power = 0\r\n    }\r\n\r\n    return accum + power\r\n  }, 0)\r\n}\r\n","export const PROPOSALS_TO_SHOW = 10\r\nexport const ADMINS = [\r\n  '0x842B508681eE336E74600974B4623B709477d29D', // TARO\r\n  '0x977e0c1005dff8749f8cac22f4df0bd5f013d1a7', // CHUNGUS\r\n  '0x6eaf1b33b8672c5dc40ab8f4ba3a0111723126c7', // HOPS\r\n].map((address) => address.toLowerCase())\r\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\r\nexport const SNAPSHOT_VERSION = '0.1.3'\r\nexport const PANCAKE_SPACE = 'cake.eth'\r\nexport const VOTE_THRESHOLD = 10\r\n","import React from 'react'\r\nimport {\r\n  Tag,\r\n  VerifiedIcon,\r\n  CommunityIcon,\r\n  RefreshIcon,\r\n  AutoRenewIcon,\r\n  TagProps,\r\n  TimerIcon,\r\n  BlockIcon,\r\n  VoteIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst CoreTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Core')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CommunityTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\r\n      {t('Community')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst DualTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textSubtle\" outline {...props}>\r\n      {t('Dual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Manual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Auto')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst VoteNowTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Vote Now')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst SoonTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Soon')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ClosedTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\r\n      {t('Closed')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\r\n"],"sourceRoot":""}